name: Build using GitHub Actions

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.15', '1.16']
        node-version: ['0.10.32']
    env:
      GOPATH: ${{ github.workspace }}
      GOBIN: ${{ github.workspace }}/bin
      GO111MODULE: off
    defaults:
      run:
        working-directory: ${{ env.GOPATH }}/src/github.com/${{ github.repository }}

    steps:
            
      - name: checkout code
        uses: actions/checkout@v2
        with:
          path: ${{ env.GOPATH }}/src/github.com/${{ github.repository }}
      
      - name: Setup Go ${{ matrix.go-version }}
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
          
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - run: sudo apt-get -qq update
      - run: sudo apt-get install -qq time
      - run: sudo apt-get install -qq build-essential libssl-dev git
      - run: sudo apt-get install -qq libluajit-5.1-2 libluajit-5.1-common
      - run: wget http://us.archive.ubuntu.com/ubuntu/pool/universe/w/wrk/wrk_4.0.1-2_amd64.deb
      - run: sudo dpkg -i wrk_4.0.1-2_amd64.deb
      - run: rm wrk_4.0.1-2_amd64.deb
      - run: PROTOC_ZIP=protoc-3.7.1-linux-x86_64.zip
      - run: curl -OL https://github.com/google/protobuf/releases/download/v3.7.1/$PROTOC_ZIP
      - run: sudo unzip -o $PROTOC_ZIP -d /usr/local bin/protoc
      - run: rm -f $PROTOC_ZIP

      - name: make jenkins-install
        run: make jenkins-install
        shell: bash
        
      - name: make jenkins-test
        run: make jenkins-test
        
      - name: make install
        run: make install
        
      - name: make cover
        run: make cover
        
      - name: make fast-bench
        run: make fast-bench
        
      - name: make bins
        run: make bins
        
      - name: make test-benchmark-runner
        run: make test-benchmark-runner
        
      - run: echo "üçè This job's status is ${{ job.status }}."
