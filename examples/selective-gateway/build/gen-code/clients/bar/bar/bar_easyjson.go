// Code generated by zanzibar
// @generated
// Checksum : S9k3bNAnbx2z5G9d/LThQg==
// Code generated by easyjson for marshaling/unmarshaling. DO NOT EDIT.

package bar

import (
	json "encoding/json"
	fmt "fmt"

	easyjson "github.com/mailru/easyjson"
	jlexer "github.com/mailru/easyjson/jlexer"
	jwriter "github.com/mailru/easyjson/jwriter"
	base "github.com/uber/zanzibar/examples/selective-gateway/build/gen-code/clients/foo/base/base"
	foo "github.com/uber/zanzibar/examples/selective-gateway/build/gen-code/clients/foo/foo"
)

// suppress unused package warning
var (
	_ *json.RawMessage
	_ *jlexer.Lexer
	_ *jwriter.Writer
	_ easyjson.Marshaler
)

func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarMapI32BarResponseItem(in *jlexer.Lexer, out *_Map_I32_BarResponse_Item_Zapper) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "Key":
			out.Key = int32(in.Int32())
		case "Value":
			if in.IsNull() {
				in.Skip()
				out.Value = nil
			} else {
				if out.Value == nil {
					out.Value = new(BarResponse)
				}
				(*out.Value).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarMapI32BarResponseItem(out *jwriter.Writer, in _Map_I32_BarResponse_Item_Zapper) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"Key\":"
		out.RawString(prefix[1:])
		out.Int32(int32(in.Key))
	}
	{
		const prefix string = ",\"Value\":"
		out.RawString(prefix)
		if in.Value == nil {
			out.RawString("null")
		} else {
			(*in.Value).MarshalEasyJSON(out)
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v _Map_I32_BarResponse_Item_Zapper) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarMapI32BarResponseItem(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v _Map_I32_BarResponse_Item_Zapper) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarMapI32BarResponseItem(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *_Map_I32_BarResponse_Item_Zapper) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarMapI32BarResponseItem(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *_Map_I32_BarResponse_Item_Zapper) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarMapI32BarResponseItem(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarMapBarResponseStringItem(in *jlexer.Lexer, out *_Map_BarResponse_String_Item_Zapper) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "Key":
			if in.IsNull() {
				in.Skip()
				out.Key = nil
			} else {
				if out.Key == nil {
					out.Key = new(BarResponse)
				}
				(*out.Key).UnmarshalEasyJSON(in)
			}
		case "Value":
			out.Value = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarMapBarResponseStringItem(out *jwriter.Writer, in _Map_BarResponse_String_Item_Zapper) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"Key\":"
		out.RawString(prefix[1:])
		if in.Key == nil {
			out.RawString("null")
		} else {
			(*in.Key).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"Value\":"
		out.RawString(prefix)
		out.String(string(in.Value))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v _Map_BarResponse_String_Item_Zapper) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarMapBarResponseStringItem(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v _Map_BarResponse_String_Item_Zapper) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarMapBarResponseStringItem(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *_Map_BarResponse_String_Item_Zapper) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarMapBarResponseStringItem(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *_Map_BarResponse_String_Item_Zapper) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarMapBarResponseStringItem(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBar(in *jlexer.Lexer, out *RequestWithDuplicateType) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "request1":
			if in.IsNull() {
				in.Skip()
				out.Request1 = nil
			} else {
				if out.Request1 == nil {
					out.Request1 = new(BarRequest)
				}
				(*out.Request1).UnmarshalEasyJSON(in)
			}
		case "request2":
			if in.IsNull() {
				in.Skip()
				out.Request2 = nil
			} else {
				if out.Request2 == nil {
					out.Request2 = new(BarRequest)
				}
				(*out.Request2).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBar(out *jwriter.Writer, in RequestWithDuplicateType) {
	out.RawByte('{')
	first := true
	_ = first
	if in.Request1 != nil {
		const prefix string = ",\"request1\":"
		first = false
		out.RawString(prefix[1:])
		(*in.Request1).MarshalEasyJSON(out)
	}
	if in.Request2 != nil {
		const prefix string = ",\"request2\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		(*in.Request2).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v RequestWithDuplicateType) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBar(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v RequestWithDuplicateType) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBar(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *RequestWithDuplicateType) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBar(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *RequestWithDuplicateType) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBar(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBar1(in *jlexer.Lexer, out *QueryParamsStruct) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var NameSet bool
	var FooSet bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "name":
			out.Name = string(in.String())
			NameSet = true
		case "userUUID":
			if in.IsNull() {
				in.Skip()
				out.UserUUID = nil
			} else {
				if out.UserUUID == nil {
					out.UserUUID = new(string)
				}
				*out.UserUUID = string(in.String())
			}
		case "authUUID":
			if in.IsNull() {
				in.Skip()
				out.AuthUUID = nil
			} else {
				if out.AuthUUID == nil {
					out.AuthUUID = new(string)
				}
				*out.AuthUUID = string(in.String())
			}
		case "authUUID2":
			if in.IsNull() {
				in.Skip()
				out.AuthUUID2 = nil
			} else {
				if out.AuthUUID2 == nil {
					out.AuthUUID2 = new(string)
				}
				*out.AuthUUID2 = string(in.String())
			}
		case "foo":
			if in.IsNull() {
				in.Skip()
				out.Foo = nil
			} else {
				in.Delim('[')
				if out.Foo == nil {
					if !in.IsDelim(']') {
						out.Foo = make([]string, 0, 4)
					} else {
						out.Foo = []string{}
					}
				} else {
					out.Foo = (out.Foo)[:0]
				}
				for !in.IsDelim(']') {
					var v1 string
					v1 = string(in.String())
					out.Foo = append(out.Foo, v1)
					in.WantComma()
				}
				in.Delim(']')
			}
			FooSet = true
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !NameSet {
		in.AddError(fmt.Errorf("key 'name' is required"))
	}
	if !FooSet {
		in.AddError(fmt.Errorf("key 'foo' is required"))
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBar1(out *jwriter.Writer, in QueryParamsStruct) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"name\":"
		out.RawString(prefix[1:])
		out.String(string(in.Name))
	}
	if in.UserUUID != nil {
		const prefix string = ",\"userUUID\":"
		out.RawString(prefix)
		out.String(string(*in.UserUUID))
	}
	if in.AuthUUID != nil {
		const prefix string = ",\"authUUID\":"
		out.RawString(prefix)
		out.String(string(*in.AuthUUID))
	}
	if in.AuthUUID2 != nil {
		const prefix string = ",\"authUUID2\":"
		out.RawString(prefix)
		out.String(string(*in.AuthUUID2))
	}
	{
		const prefix string = ",\"foo\":"
		out.RawString(prefix)
		if in.Foo == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v2, v3 := range in.Foo {
				if v2 > 0 {
					out.RawByte(',')
				}
				out.String(string(v3))
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v QueryParamsStruct) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBar1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v QueryParamsStruct) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBar1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *QueryParamsStruct) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBar1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *QueryParamsStruct) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBar1(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBar2(in *jlexer.Lexer, out *QueryParamsOptsStruct) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var NameSet bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "name":
			out.Name = string(in.String())
			NameSet = true
		case "userUUID":
			if in.IsNull() {
				in.Skip()
				out.UserUUID = nil
			} else {
				if out.UserUUID == nil {
					out.UserUUID = new(string)
				}
				*out.UserUUID = string(in.String())
			}
		case "authUUID":
			if in.IsNull() {
				in.Skip()
				out.AuthUUID = nil
			} else {
				if out.AuthUUID == nil {
					out.AuthUUID = new(string)
				}
				*out.AuthUUID = string(in.String())
			}
		case "authUUID2":
			if in.IsNull() {
				in.Skip()
				out.AuthUUID2 = nil
			} else {
				if out.AuthUUID2 == nil {
					out.AuthUUID2 = new(string)
				}
				*out.AuthUUID2 = string(in.String())
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !NameSet {
		in.AddError(fmt.Errorf("key 'name' is required"))
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBar2(out *jwriter.Writer, in QueryParamsOptsStruct) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"name\":"
		out.RawString(prefix[1:])
		out.String(string(in.Name))
	}
	if in.UserUUID != nil {
		const prefix string = ",\"userUUID\":"
		out.RawString(prefix)
		out.String(string(*in.UserUUID))
	}
	if in.AuthUUID != nil {
		const prefix string = ",\"authUUID\":"
		out.RawString(prefix)
		out.String(string(*in.AuthUUID))
	}
	if in.AuthUUID2 != nil {
		const prefix string = ",\"authUUID2\":"
		out.RawString(prefix)
		out.String(string(*in.AuthUUID2))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v QueryParamsOptsStruct) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBar2(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v QueryParamsOptsStruct) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBar2(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *QueryParamsOptsStruct) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBar2(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *QueryParamsOptsStruct) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBar2(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBar3(in *jlexer.Lexer, out *ParamsStruct) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var UserUUIDSet bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "userUUID":
			out.UserUUID = string(in.String())
			UserUUIDSet = true
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !UserUUIDSet {
		in.AddError(fmt.Errorf("key 'userUUID' is required"))
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBar3(out *jwriter.Writer, in ParamsStruct) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"userUUID\":"
		out.RawString(prefix[1:])
		out.String(string(in.UserUUID))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ParamsStruct) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBar3(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ParamsStruct) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBar3(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ParamsStruct) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBar3(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ParamsStruct) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBar3(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBar4(in *jlexer.Lexer, out *OptionalParamsStruct) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "userID":
			if in.IsNull() {
				in.Skip()
				out.UserID = nil
			} else {
				if out.UserID == nil {
					out.UserID = new(string)
				}
				*out.UserID = string(in.String())
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBar4(out *jwriter.Writer, in OptionalParamsStruct) {
	out.RawByte('{')
	first := true
	_ = first
	if in.UserID != nil {
		const prefix string = ",\"userID\":"
		first = false
		out.RawString(prefix[1:])
		out.String(string(*in.UserID))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v OptionalParamsStruct) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBar4(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v OptionalParamsStruct) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBar4(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *OptionalParamsStruct) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBar4(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *OptionalParamsStruct) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBar4(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoTypedef(in *jlexer.Lexer, out *Echo_EchoTypedef_Result) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "success":
			if in.IsNull() {
				in.Skip()
				out.Success = nil
			} else {
				if out.Success == nil {
					out.Success = new(UUID)
				}
				*out.Success = UUID(in.String())
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoTypedef(out *jwriter.Writer, in Echo_EchoTypedef_Result) {
	out.RawByte('{')
	first := true
	_ = first
	if in.Success != nil {
		const prefix string = ",\"success\":"
		first = false
		out.RawString(prefix[1:])
		out.String(string(*in.Success))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Echo_EchoTypedef_Result) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoTypedef(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Echo_EchoTypedef_Result) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoTypedef(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Echo_EchoTypedef_Result) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoTypedef(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Echo_EchoTypedef_Result) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoTypedef(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoTypedef1(in *jlexer.Lexer, out *Echo_EchoTypedef_Args) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var ArgSet bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "arg":
			out.Arg = UUID(in.String())
			ArgSet = true
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !ArgSet {
		in.AddError(fmt.Errorf("key 'arg' is required"))
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoTypedef1(out *jwriter.Writer, in Echo_EchoTypedef_Args) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"arg\":"
		out.RawString(prefix[1:])
		out.String(string(in.Arg))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Echo_EchoTypedef_Args) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoTypedef1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Echo_EchoTypedef_Args) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoTypedef1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Echo_EchoTypedef_Args) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoTypedef1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Echo_EchoTypedef_Args) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoTypedef1(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoStructSet(in *jlexer.Lexer, out *Echo_EchoStructSet_Result) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "success":
			if in.IsNull() {
				in.Skip()
				out.Success = nil
			} else {
				in.Delim('[')
				if out.Success == nil {
					if !in.IsDelim(']') {
						out.Success = make([]*BarResponse, 0, 8)
					} else {
						out.Success = []*BarResponse{}
					}
				} else {
					out.Success = (out.Success)[:0]
				}
				for !in.IsDelim(']') {
					var v4 *BarResponse
					if in.IsNull() {
						in.Skip()
						v4 = nil
					} else {
						if v4 == nil {
							v4 = new(BarResponse)
						}
						(*v4).UnmarshalEasyJSON(in)
					}
					out.Success = append(out.Success, v4)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoStructSet(out *jwriter.Writer, in Echo_EchoStructSet_Result) {
	out.RawByte('{')
	first := true
	_ = first
	if len(in.Success) != 0 {
		const prefix string = ",\"success\":"
		first = false
		out.RawString(prefix[1:])
		{
			out.RawByte('[')
			for v5, v6 := range in.Success {
				if v5 > 0 {
					out.RawByte(',')
				}
				if v6 == nil {
					out.RawString("null")
				} else {
					(*v6).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Echo_EchoStructSet_Result) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoStructSet(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Echo_EchoStructSet_Result) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoStructSet(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Echo_EchoStructSet_Result) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoStructSet(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Echo_EchoStructSet_Result) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoStructSet(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoStructSet1(in *jlexer.Lexer, out *Echo_EchoStructSet_Args) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var ArgSet bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "arg":
			if in.IsNull() {
				in.Skip()
				out.Arg = nil
			} else {
				in.Delim('[')
				if out.Arg == nil {
					if !in.IsDelim(']') {
						out.Arg = make([]*BarResponse, 0, 8)
					} else {
						out.Arg = []*BarResponse{}
					}
				} else {
					out.Arg = (out.Arg)[:0]
				}
				for !in.IsDelim(']') {
					var v7 *BarResponse
					if in.IsNull() {
						in.Skip()
						v7 = nil
					} else {
						if v7 == nil {
							v7 = new(BarResponse)
						}
						(*v7).UnmarshalEasyJSON(in)
					}
					out.Arg = append(out.Arg, v7)
					in.WantComma()
				}
				in.Delim(']')
			}
			ArgSet = true
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !ArgSet {
		in.AddError(fmt.Errorf("key 'arg' is required"))
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoStructSet1(out *jwriter.Writer, in Echo_EchoStructSet_Args) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"arg\":"
		out.RawString(prefix[1:])
		if in.Arg == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v8, v9 := range in.Arg {
				if v8 > 0 {
					out.RawByte(',')
				}
				if v9 == nil {
					out.RawString("null")
				} else {
					(*v9).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Echo_EchoStructSet_Args) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoStructSet1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Echo_EchoStructSet_Args) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoStructSet1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Echo_EchoStructSet_Args) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoStructSet1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Echo_EchoStructSet_Args) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoStructSet1(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoStructMap(in *jlexer.Lexer, out *Echo_EchoStructMap_Result) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "success":
			if in.IsNull() {
				in.Skip()
				out.Success = nil
			} else {
				in.Delim('[')
				if out.Success == nil {
					if !in.IsDelim(']') {
						out.Success = make([]struct {
							Key   *BarResponse
							Value string
						}, 0, 2)
					} else {
						out.Success = []struct {
							Key   *BarResponse
							Value string
						}{}
					}
				} else {
					out.Success = (out.Success)[:0]
				}
				for !in.IsDelim(']') {
					var v10 struct {
						Key   *BarResponse
						Value string
					}
					easyjson4347b5c1Decode(in, &v10)
					out.Success = append(out.Success, v10)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoStructMap(out *jwriter.Writer, in Echo_EchoStructMap_Result) {
	out.RawByte('{')
	first := true
	_ = first
	if len(in.Success) != 0 {
		const prefix string = ",\"success\":"
		first = false
		out.RawString(prefix[1:])
		{
			out.RawByte('[')
			for v11, v12 := range in.Success {
				if v11 > 0 {
					out.RawByte(',')
				}
				easyjson4347b5c1Encode(out, v12)
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Echo_EchoStructMap_Result) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoStructMap(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Echo_EchoStructMap_Result) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoStructMap(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Echo_EchoStructMap_Result) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoStructMap(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Echo_EchoStructMap_Result) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoStructMap(l, v)
}
func easyjson4347b5c1Decode(in *jlexer.Lexer, out *struct {
	Key   *BarResponse
	Value string
}) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "Key":
			if in.IsNull() {
				in.Skip()
				out.Key = nil
			} else {
				if out.Key == nil {
					out.Key = new(BarResponse)
				}
				(*out.Key).UnmarshalEasyJSON(in)
			}
		case "Value":
			out.Value = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson4347b5c1Encode(out *jwriter.Writer, in struct {
	Key   *BarResponse
	Value string
}) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"Key\":"
		out.RawString(prefix[1:])
		if in.Key == nil {
			out.RawString("null")
		} else {
			(*in.Key).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"Value\":"
		out.RawString(prefix)
		out.String(string(in.Value))
	}
	out.RawByte('}')
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoStructMap1(in *jlexer.Lexer, out *Echo_EchoStructMap_Args) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var ArgSet bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "arg":
			if in.IsNull() {
				in.Skip()
				out.Arg = nil
			} else {
				in.Delim('[')
				if out.Arg == nil {
					if !in.IsDelim(']') {
						out.Arg = make([]struct {
							Key   *BarResponse
							Value string
						}, 0, 2)
					} else {
						out.Arg = []struct {
							Key   *BarResponse
							Value string
						}{}
					}
				} else {
					out.Arg = (out.Arg)[:0]
				}
				for !in.IsDelim(']') {
					var v13 struct {
						Key   *BarResponse
						Value string
					}
					easyjson4347b5c1Decode(in, &v13)
					out.Arg = append(out.Arg, v13)
					in.WantComma()
				}
				in.Delim(']')
			}
			ArgSet = true
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !ArgSet {
		in.AddError(fmt.Errorf("key 'arg' is required"))
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoStructMap1(out *jwriter.Writer, in Echo_EchoStructMap_Args) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"arg\":"
		out.RawString(prefix[1:])
		if in.Arg == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v14, v15 := range in.Arg {
				if v14 > 0 {
					out.RawByte(',')
				}
				easyjson4347b5c1Encode(out, v15)
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Echo_EchoStructMap_Args) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoStructMap1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Echo_EchoStructMap_Args) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoStructMap1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Echo_EchoStructMap_Args) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoStructMap1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Echo_EchoStructMap_Args) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoStructMap1(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoStructList(in *jlexer.Lexer, out *Echo_EchoStructList_Result) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "success":
			if in.IsNull() {
				in.Skip()
				out.Success = nil
			} else {
				in.Delim('[')
				if out.Success == nil {
					if !in.IsDelim(']') {
						out.Success = make([]*BarResponse, 0, 8)
					} else {
						out.Success = []*BarResponse{}
					}
				} else {
					out.Success = (out.Success)[:0]
				}
				for !in.IsDelim(']') {
					var v16 *BarResponse
					if in.IsNull() {
						in.Skip()
						v16 = nil
					} else {
						if v16 == nil {
							v16 = new(BarResponse)
						}
						(*v16).UnmarshalEasyJSON(in)
					}
					out.Success = append(out.Success, v16)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoStructList(out *jwriter.Writer, in Echo_EchoStructList_Result) {
	out.RawByte('{')
	first := true
	_ = first
	if len(in.Success) != 0 {
		const prefix string = ",\"success\":"
		first = false
		out.RawString(prefix[1:])
		{
			out.RawByte('[')
			for v17, v18 := range in.Success {
				if v17 > 0 {
					out.RawByte(',')
				}
				if v18 == nil {
					out.RawString("null")
				} else {
					(*v18).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Echo_EchoStructList_Result) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoStructList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Echo_EchoStructList_Result) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoStructList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Echo_EchoStructList_Result) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoStructList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Echo_EchoStructList_Result) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoStructList(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoStructList1(in *jlexer.Lexer, out *Echo_EchoStructList_Args) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var ArgSet bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "arg":
			if in.IsNull() {
				in.Skip()
				out.Arg = nil
			} else {
				in.Delim('[')
				if out.Arg == nil {
					if !in.IsDelim(']') {
						out.Arg = make([]*BarResponse, 0, 8)
					} else {
						out.Arg = []*BarResponse{}
					}
				} else {
					out.Arg = (out.Arg)[:0]
				}
				for !in.IsDelim(']') {
					var v19 *BarResponse
					if in.IsNull() {
						in.Skip()
						v19 = nil
					} else {
						if v19 == nil {
							v19 = new(BarResponse)
						}
						(*v19).UnmarshalEasyJSON(in)
					}
					out.Arg = append(out.Arg, v19)
					in.WantComma()
				}
				in.Delim(']')
			}
			ArgSet = true
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !ArgSet {
		in.AddError(fmt.Errorf("key 'arg' is required"))
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoStructList1(out *jwriter.Writer, in Echo_EchoStructList_Args) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"arg\":"
		out.RawString(prefix[1:])
		if in.Arg == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v20, v21 := range in.Arg {
				if v20 > 0 {
					out.RawByte(',')
				}
				if v21 == nil {
					out.RawString("null")
				} else {
					(*v21).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Echo_EchoStructList_Args) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoStructList1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Echo_EchoStructList_Args) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoStructList1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Echo_EchoStructList_Args) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoStructList1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Echo_EchoStructList_Args) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoStructList1(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoString(in *jlexer.Lexer, out *Echo_EchoString_Result) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "success":
			if in.IsNull() {
				in.Skip()
				out.Success = nil
			} else {
				if out.Success == nil {
					out.Success = new(string)
				}
				*out.Success = string(in.String())
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoString(out *jwriter.Writer, in Echo_EchoString_Result) {
	out.RawByte('{')
	first := true
	_ = first
	if in.Success != nil {
		const prefix string = ",\"success\":"
		first = false
		out.RawString(prefix[1:])
		out.String(string(*in.Success))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Echo_EchoString_Result) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoString(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Echo_EchoString_Result) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoString(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Echo_EchoString_Result) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoString(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Echo_EchoString_Result) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoString(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoString1(in *jlexer.Lexer, out *Echo_EchoString_Args) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var ArgSet bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "arg":
			out.Arg = string(in.String())
			ArgSet = true
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !ArgSet {
		in.AddError(fmt.Errorf("key 'arg' is required"))
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoString1(out *jwriter.Writer, in Echo_EchoString_Args) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"arg\":"
		out.RawString(prefix[1:])
		out.String(string(in.Arg))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Echo_EchoString_Args) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoString1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Echo_EchoString_Args) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoString1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Echo_EchoString_Args) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoString1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Echo_EchoString_Args) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoString1(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoStringSet(in *jlexer.Lexer, out *Echo_EchoStringSet_Result) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "success":
			if in.IsNull() {
				in.Skip()
			} else {
				in.Delim('{')
				if !in.IsDelim('}') {
					out.Success = make(map[string]struct{})
				} else {
					out.Success = nil
				}
				for !in.IsDelim('}') {
					key := string(in.String())
					in.WantColon()
					var v22 struct{}
					easyjson4347b5c1Decode1(in, &v22)
					(out.Success)[key] = v22
					in.WantComma()
				}
				in.Delim('}')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoStringSet(out *jwriter.Writer, in Echo_EchoStringSet_Result) {
	out.RawByte('{')
	first := true
	_ = first
	if len(in.Success) != 0 {
		const prefix string = ",\"success\":"
		first = false
		out.RawString(prefix[1:])
		{
			out.RawByte('{')
			v23First := true
			for v23Name, v23Value := range in.Success {
				if v23First {
					v23First = false
				} else {
					out.RawByte(',')
				}
				out.String(string(v23Name))
				out.RawByte(':')
				easyjson4347b5c1Encode1(out, v23Value)
			}
			out.RawByte('}')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Echo_EchoStringSet_Result) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoStringSet(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Echo_EchoStringSet_Result) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoStringSet(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Echo_EchoStringSet_Result) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoStringSet(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Echo_EchoStringSet_Result) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoStringSet(l, v)
}
func easyjson4347b5c1Decode1(in *jlexer.Lexer, out *struct{}) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson4347b5c1Encode1(out *jwriter.Writer, in struct{}) {
	out.RawByte('{')
	first := true
	_ = first
	out.RawByte('}')
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoStringSet1(in *jlexer.Lexer, out *Echo_EchoStringSet_Args) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var ArgSet bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "arg":
			if in.IsNull() {
				in.Skip()
			} else {
				in.Delim('{')
				out.Arg = make(map[string]struct{})
				for !in.IsDelim('}') {
					key := string(in.String())
					in.WantColon()
					var v24 struct{}
					easyjson4347b5c1Decode1(in, &v24)
					(out.Arg)[key] = v24
					in.WantComma()
				}
				in.Delim('}')
			}
			ArgSet = true
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !ArgSet {
		in.AddError(fmt.Errorf("key 'arg' is required"))
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoStringSet1(out *jwriter.Writer, in Echo_EchoStringSet_Args) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"arg\":"
		out.RawString(prefix[1:])
		if in.Arg == nil && (out.Flags&jwriter.NilMapAsEmpty) == 0 {
			out.RawString(`null`)
		} else {
			out.RawByte('{')
			v25First := true
			for v25Name, v25Value := range in.Arg {
				if v25First {
					v25First = false
				} else {
					out.RawByte(',')
				}
				out.String(string(v25Name))
				out.RawByte(':')
				easyjson4347b5c1Encode1(out, v25Value)
			}
			out.RawByte('}')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Echo_EchoStringSet_Args) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoStringSet1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Echo_EchoStringSet_Args) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoStringSet1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Echo_EchoStringSet_Args) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoStringSet1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Echo_EchoStringSet_Args) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoStringSet1(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoStringMap(in *jlexer.Lexer, out *Echo_EchoStringMap_Result) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "success":
			if in.IsNull() {
				in.Skip()
			} else {
				in.Delim('{')
				if !in.IsDelim('}') {
					out.Success = make(map[string]*BarResponse)
				} else {
					out.Success = nil
				}
				for !in.IsDelim('}') {
					key := string(in.String())
					in.WantColon()
					var v26 *BarResponse
					if in.IsNull() {
						in.Skip()
						v26 = nil
					} else {
						if v26 == nil {
							v26 = new(BarResponse)
						}
						(*v26).UnmarshalEasyJSON(in)
					}
					(out.Success)[key] = v26
					in.WantComma()
				}
				in.Delim('}')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoStringMap(out *jwriter.Writer, in Echo_EchoStringMap_Result) {
	out.RawByte('{')
	first := true
	_ = first
	if len(in.Success) != 0 {
		const prefix string = ",\"success\":"
		first = false
		out.RawString(prefix[1:])
		{
			out.RawByte('{')
			v27First := true
			for v27Name, v27Value := range in.Success {
				if v27First {
					v27First = false
				} else {
					out.RawByte(',')
				}
				out.String(string(v27Name))
				out.RawByte(':')
				if v27Value == nil {
					out.RawString("null")
				} else {
					(*v27Value).MarshalEasyJSON(out)
				}
			}
			out.RawByte('}')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Echo_EchoStringMap_Result) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoStringMap(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Echo_EchoStringMap_Result) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoStringMap(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Echo_EchoStringMap_Result) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoStringMap(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Echo_EchoStringMap_Result) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoStringMap(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoStringMap1(in *jlexer.Lexer, out *Echo_EchoStringMap_Args) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var ArgSet bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "arg":
			if in.IsNull() {
				in.Skip()
			} else {
				in.Delim('{')
				out.Arg = make(map[string]*BarResponse)
				for !in.IsDelim('}') {
					key := string(in.String())
					in.WantColon()
					var v28 *BarResponse
					if in.IsNull() {
						in.Skip()
						v28 = nil
					} else {
						if v28 == nil {
							v28 = new(BarResponse)
						}
						(*v28).UnmarshalEasyJSON(in)
					}
					(out.Arg)[key] = v28
					in.WantComma()
				}
				in.Delim('}')
			}
			ArgSet = true
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !ArgSet {
		in.AddError(fmt.Errorf("key 'arg' is required"))
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoStringMap1(out *jwriter.Writer, in Echo_EchoStringMap_Args) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"arg\":"
		out.RawString(prefix[1:])
		if in.Arg == nil && (out.Flags&jwriter.NilMapAsEmpty) == 0 {
			out.RawString(`null`)
		} else {
			out.RawByte('{')
			v29First := true
			for v29Name, v29Value := range in.Arg {
				if v29First {
					v29First = false
				} else {
					out.RawByte(',')
				}
				out.String(string(v29Name))
				out.RawByte(':')
				if v29Value == nil {
					out.RawString("null")
				} else {
					(*v29Value).MarshalEasyJSON(out)
				}
			}
			out.RawByte('}')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Echo_EchoStringMap_Args) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoStringMap1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Echo_EchoStringMap_Args) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoStringMap1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Echo_EchoStringMap_Args) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoStringMap1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Echo_EchoStringMap_Args) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoStringMap1(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoStringList(in *jlexer.Lexer, out *Echo_EchoStringList_Result) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "success":
			if in.IsNull() {
				in.Skip()
				out.Success = nil
			} else {
				in.Delim('[')
				if out.Success == nil {
					if !in.IsDelim(']') {
						out.Success = make([]string, 0, 4)
					} else {
						out.Success = []string{}
					}
				} else {
					out.Success = (out.Success)[:0]
				}
				for !in.IsDelim(']') {
					var v30 string
					v30 = string(in.String())
					out.Success = append(out.Success, v30)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoStringList(out *jwriter.Writer, in Echo_EchoStringList_Result) {
	out.RawByte('{')
	first := true
	_ = first
	if len(in.Success) != 0 {
		const prefix string = ",\"success\":"
		first = false
		out.RawString(prefix[1:])
		{
			out.RawByte('[')
			for v31, v32 := range in.Success {
				if v31 > 0 {
					out.RawByte(',')
				}
				out.String(string(v32))
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Echo_EchoStringList_Result) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoStringList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Echo_EchoStringList_Result) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoStringList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Echo_EchoStringList_Result) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoStringList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Echo_EchoStringList_Result) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoStringList(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoStringList1(in *jlexer.Lexer, out *Echo_EchoStringList_Args) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var ArgSet bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "arg":
			if in.IsNull() {
				in.Skip()
				out.Arg = nil
			} else {
				in.Delim('[')
				if out.Arg == nil {
					if !in.IsDelim(']') {
						out.Arg = make([]string, 0, 4)
					} else {
						out.Arg = []string{}
					}
				} else {
					out.Arg = (out.Arg)[:0]
				}
				for !in.IsDelim(']') {
					var v33 string
					v33 = string(in.String())
					out.Arg = append(out.Arg, v33)
					in.WantComma()
				}
				in.Delim(']')
			}
			ArgSet = true
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !ArgSet {
		in.AddError(fmt.Errorf("key 'arg' is required"))
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoStringList1(out *jwriter.Writer, in Echo_EchoStringList_Args) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"arg\":"
		out.RawString(prefix[1:])
		if in.Arg == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v34, v35 := range in.Arg {
				if v34 > 0 {
					out.RawByte(',')
				}
				out.String(string(v35))
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Echo_EchoStringList_Args) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoStringList1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Echo_EchoStringList_Args) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoStringList1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Echo_EchoStringList_Args) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoStringList1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Echo_EchoStringList_Args) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoStringList1(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoI8(in *jlexer.Lexer, out *Echo_EchoI8_Result) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "success":
			if in.IsNull() {
				in.Skip()
				out.Success = nil
			} else {
				if out.Success == nil {
					out.Success = new(int8)
				}
				*out.Success = int8(in.Int8())
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoI8(out *jwriter.Writer, in Echo_EchoI8_Result) {
	out.RawByte('{')
	first := true
	_ = first
	if in.Success != nil {
		const prefix string = ",\"success\":"
		first = false
		out.RawString(prefix[1:])
		out.Int8(int8(*in.Success))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Echo_EchoI8_Result) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoI8(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Echo_EchoI8_Result) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoI8(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Echo_EchoI8_Result) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoI8(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Echo_EchoI8_Result) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoI8(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoI81(in *jlexer.Lexer, out *Echo_EchoI8_Args) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var ArgSet bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "arg":
			out.Arg = int8(in.Int8())
			ArgSet = true
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !ArgSet {
		in.AddError(fmt.Errorf("key 'arg' is required"))
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoI81(out *jwriter.Writer, in Echo_EchoI8_Args) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"arg\":"
		out.RawString(prefix[1:])
		out.Int8(int8(in.Arg))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Echo_EchoI8_Args) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoI81(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Echo_EchoI8_Args) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoI81(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Echo_EchoI8_Args) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoI81(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Echo_EchoI8_Args) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoI81(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoI64(in *jlexer.Lexer, out *Echo_EchoI64_Result) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "success":
			if in.IsNull() {
				in.Skip()
				out.Success = nil
			} else {
				if out.Success == nil {
					out.Success = new(int64)
				}
				*out.Success = int64(in.Int64())
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoI64(out *jwriter.Writer, in Echo_EchoI64_Result) {
	out.RawByte('{')
	first := true
	_ = first
	if in.Success != nil {
		const prefix string = ",\"success\":"
		first = false
		out.RawString(prefix[1:])
		out.Int64(int64(*in.Success))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Echo_EchoI64_Result) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoI64(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Echo_EchoI64_Result) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoI64(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Echo_EchoI64_Result) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoI64(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Echo_EchoI64_Result) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoI64(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoI641(in *jlexer.Lexer, out *Echo_EchoI64_Args) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var ArgSet bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "arg":
			out.Arg = int64(in.Int64())
			ArgSet = true
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !ArgSet {
		in.AddError(fmt.Errorf("key 'arg' is required"))
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoI641(out *jwriter.Writer, in Echo_EchoI64_Args) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"arg\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.Arg))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Echo_EchoI64_Args) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoI641(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Echo_EchoI64_Args) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoI641(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Echo_EchoI64_Args) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoI641(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Echo_EchoI64_Args) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoI641(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoI32(in *jlexer.Lexer, out *Echo_EchoI32_Result) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "success":
			if in.IsNull() {
				in.Skip()
				out.Success = nil
			} else {
				if out.Success == nil {
					out.Success = new(int32)
				}
				*out.Success = int32(in.Int32())
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoI32(out *jwriter.Writer, in Echo_EchoI32_Result) {
	out.RawByte('{')
	first := true
	_ = first
	if in.Success != nil {
		const prefix string = ",\"success\":"
		first = false
		out.RawString(prefix[1:])
		out.Int32(int32(*in.Success))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Echo_EchoI32_Result) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoI32(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Echo_EchoI32_Result) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoI32(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Echo_EchoI32_Result) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoI32(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Echo_EchoI32_Result) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoI32(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoI321(in *jlexer.Lexer, out *Echo_EchoI32_Args) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var ArgSet bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "arg":
			out.Arg = int32(in.Int32())
			ArgSet = true
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !ArgSet {
		in.AddError(fmt.Errorf("key 'arg' is required"))
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoI321(out *jwriter.Writer, in Echo_EchoI32_Args) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"arg\":"
		out.RawString(prefix[1:])
		out.Int32(int32(in.Arg))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Echo_EchoI32_Args) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoI321(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Echo_EchoI32_Args) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoI321(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Echo_EchoI32_Args) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoI321(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Echo_EchoI32_Args) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoI321(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoI32Map(in *jlexer.Lexer, out *Echo_EchoI32Map_Result) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "success":
			if in.IsNull() {
				in.Skip()
			} else {
				in.Delim('{')
				if !in.IsDelim('}') {
					out.Success = make(map[int32]*BarResponse)
				} else {
					out.Success = nil
				}
				for !in.IsDelim('}') {
					key := int32(in.Int32Str())
					in.WantColon()
					var v36 *BarResponse
					if in.IsNull() {
						in.Skip()
						v36 = nil
					} else {
						if v36 == nil {
							v36 = new(BarResponse)
						}
						(*v36).UnmarshalEasyJSON(in)
					}
					(out.Success)[key] = v36
					in.WantComma()
				}
				in.Delim('}')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoI32Map(out *jwriter.Writer, in Echo_EchoI32Map_Result) {
	out.RawByte('{')
	first := true
	_ = first
	if len(in.Success) != 0 {
		const prefix string = ",\"success\":"
		first = false
		out.RawString(prefix[1:])
		{
			out.RawByte('{')
			v37First := true
			for v37Name, v37Value := range in.Success {
				if v37First {
					v37First = false
				} else {
					out.RawByte(',')
				}
				out.Int32Str(int32(v37Name))
				out.RawByte(':')
				if v37Value == nil {
					out.RawString("null")
				} else {
					(*v37Value).MarshalEasyJSON(out)
				}
			}
			out.RawByte('}')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Echo_EchoI32Map_Result) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoI32Map(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Echo_EchoI32Map_Result) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoI32Map(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Echo_EchoI32Map_Result) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoI32Map(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Echo_EchoI32Map_Result) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoI32Map(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoI32Map1(in *jlexer.Lexer, out *Echo_EchoI32Map_Args) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var ArgSet bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "arg":
			if in.IsNull() {
				in.Skip()
			} else {
				in.Delim('{')
				out.Arg = make(map[int32]*BarResponse)
				for !in.IsDelim('}') {
					key := int32(in.Int32Str())
					in.WantColon()
					var v38 *BarResponse
					if in.IsNull() {
						in.Skip()
						v38 = nil
					} else {
						if v38 == nil {
							v38 = new(BarResponse)
						}
						(*v38).UnmarshalEasyJSON(in)
					}
					(out.Arg)[key] = v38
					in.WantComma()
				}
				in.Delim('}')
			}
			ArgSet = true
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !ArgSet {
		in.AddError(fmt.Errorf("key 'arg' is required"))
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoI32Map1(out *jwriter.Writer, in Echo_EchoI32Map_Args) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"arg\":"
		out.RawString(prefix[1:])
		if in.Arg == nil && (out.Flags&jwriter.NilMapAsEmpty) == 0 {
			out.RawString(`null`)
		} else {
			out.RawByte('{')
			v39First := true
			for v39Name, v39Value := range in.Arg {
				if v39First {
					v39First = false
				} else {
					out.RawByte(',')
				}
				out.Int32Str(int32(v39Name))
				out.RawByte(':')
				if v39Value == nil {
					out.RawString("null")
				} else {
					(*v39Value).MarshalEasyJSON(out)
				}
			}
			out.RawByte('}')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Echo_EchoI32Map_Args) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoI32Map1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Echo_EchoI32Map_Args) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoI32Map1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Echo_EchoI32Map_Args) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoI32Map1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Echo_EchoI32Map_Args) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoI32Map1(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoI16(in *jlexer.Lexer, out *Echo_EchoI16_Result) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "success":
			if in.IsNull() {
				in.Skip()
				out.Success = nil
			} else {
				if out.Success == nil {
					out.Success = new(int16)
				}
				*out.Success = int16(in.Int16())
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoI16(out *jwriter.Writer, in Echo_EchoI16_Result) {
	out.RawByte('{')
	first := true
	_ = first
	if in.Success != nil {
		const prefix string = ",\"success\":"
		first = false
		out.RawString(prefix[1:])
		out.Int16(int16(*in.Success))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Echo_EchoI16_Result) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoI16(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Echo_EchoI16_Result) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoI16(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Echo_EchoI16_Result) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoI16(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Echo_EchoI16_Result) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoI16(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoI161(in *jlexer.Lexer, out *Echo_EchoI16_Args) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var ArgSet bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "arg":
			out.Arg = int16(in.Int16())
			ArgSet = true
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !ArgSet {
		in.AddError(fmt.Errorf("key 'arg' is required"))
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoI161(out *jwriter.Writer, in Echo_EchoI16_Args) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"arg\":"
		out.RawString(prefix[1:])
		out.Int16(int16(in.Arg))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Echo_EchoI16_Args) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoI161(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Echo_EchoI16_Args) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoI161(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Echo_EchoI16_Args) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoI161(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Echo_EchoI16_Args) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoI161(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoEnum(in *jlexer.Lexer, out *Echo_EchoEnum_Result) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "success":
			if in.IsNull() {
				in.Skip()
				out.Success = nil
			} else {
				if out.Success == nil {
					out.Success = new(Fruit)
				}
				if data := in.Raw(); in.Ok() {
					in.AddError((*out.Success).UnmarshalJSON(data))
				}
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoEnum(out *jwriter.Writer, in Echo_EchoEnum_Result) {
	out.RawByte('{')
	first := true
	_ = first
	if in.Success != nil {
		const prefix string = ",\"success\":"
		first = false
		out.RawString(prefix[1:])
		out.Raw((*in.Success).MarshalJSON())
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Echo_EchoEnum_Result) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoEnum(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Echo_EchoEnum_Result) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoEnum(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Echo_EchoEnum_Result) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoEnum(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Echo_EchoEnum_Result) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoEnum(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoEnum1(in *jlexer.Lexer, out *Echo_EchoEnum_Args) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "arg":
			if in.IsNull() {
				in.Skip()
				out.Arg = nil
			} else {
				if out.Arg == nil {
					out.Arg = new(Fruit)
				}
				if data := in.Raw(); in.Ok() {
					in.AddError((*out.Arg).UnmarshalJSON(data))
				}
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoEnum1(out *jwriter.Writer, in Echo_EchoEnum_Args) {
	out.RawByte('{')
	first := true
	_ = first
	if in.Arg != nil {
		const prefix string = ",\"arg\":"
		first = false
		out.RawString(prefix[1:])
		out.Raw((*in.Arg).MarshalJSON())
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Echo_EchoEnum_Args) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoEnum1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Echo_EchoEnum_Args) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoEnum1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Echo_EchoEnum_Args) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoEnum1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Echo_EchoEnum_Args) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoEnum1(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoDouble(in *jlexer.Lexer, out *Echo_EchoDouble_Result) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "success":
			if in.IsNull() {
				in.Skip()
				out.Success = nil
			} else {
				if out.Success == nil {
					out.Success = new(float64)
				}
				*out.Success = float64(in.Float64())
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoDouble(out *jwriter.Writer, in Echo_EchoDouble_Result) {
	out.RawByte('{')
	first := true
	_ = first
	if in.Success != nil {
		const prefix string = ",\"success\":"
		first = false
		out.RawString(prefix[1:])
		out.Float64(float64(*in.Success))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Echo_EchoDouble_Result) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoDouble(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Echo_EchoDouble_Result) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoDouble(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Echo_EchoDouble_Result) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoDouble(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Echo_EchoDouble_Result) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoDouble(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoDouble1(in *jlexer.Lexer, out *Echo_EchoDouble_Args) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var ArgSet bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "arg":
			out.Arg = float64(in.Float64())
			ArgSet = true
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !ArgSet {
		in.AddError(fmt.Errorf("key 'arg' is required"))
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoDouble1(out *jwriter.Writer, in Echo_EchoDouble_Args) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"arg\":"
		out.RawString(prefix[1:])
		out.Float64(float64(in.Arg))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Echo_EchoDouble_Args) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoDouble1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Echo_EchoDouble_Args) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoDouble1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Echo_EchoDouble_Args) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoDouble1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Echo_EchoDouble_Args) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoDouble1(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoBool(in *jlexer.Lexer, out *Echo_EchoBool_Result) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "success":
			if in.IsNull() {
				in.Skip()
				out.Success = nil
			} else {
				if out.Success == nil {
					out.Success = new(bool)
				}
				*out.Success = bool(in.Bool())
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoBool(out *jwriter.Writer, in Echo_EchoBool_Result) {
	out.RawByte('{')
	first := true
	_ = first
	if in.Success != nil {
		const prefix string = ",\"success\":"
		first = false
		out.RawString(prefix[1:])
		out.Bool(bool(*in.Success))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Echo_EchoBool_Result) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoBool(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Echo_EchoBool_Result) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoBool(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Echo_EchoBool_Result) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoBool(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Echo_EchoBool_Result) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoBool(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoBool1(in *jlexer.Lexer, out *Echo_EchoBool_Args) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var ArgSet bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "arg":
			out.Arg = bool(in.Bool())
			ArgSet = true
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !ArgSet {
		in.AddError(fmt.Errorf("key 'arg' is required"))
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoBool1(out *jwriter.Writer, in Echo_EchoBool_Args) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"arg\":"
		out.RawString(prefix[1:])
		out.Bool(bool(in.Arg))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Echo_EchoBool_Args) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoBool1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Echo_EchoBool_Args) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoBool1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Echo_EchoBool_Args) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoBool1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Echo_EchoBool_Args) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoBool1(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoBinary(in *jlexer.Lexer, out *Echo_EchoBinary_Result) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "success":
			if in.IsNull() {
				in.Skip()
				out.Success = nil
			} else {
				out.Success = in.Bytes()
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoBinary(out *jwriter.Writer, in Echo_EchoBinary_Result) {
	out.RawByte('{')
	first := true
	_ = first
	if len(in.Success) != 0 {
		const prefix string = ",\"success\":"
		first = false
		out.RawString(prefix[1:])
		out.Base64Bytes(in.Success)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Echo_EchoBinary_Result) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoBinary(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Echo_EchoBinary_Result) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoBinary(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Echo_EchoBinary_Result) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoBinary(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Echo_EchoBinary_Result) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoBinary(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoBinary1(in *jlexer.Lexer, out *Echo_EchoBinary_Args) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var ArgSet bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "arg":
			if in.IsNull() {
				in.Skip()
				out.Arg = nil
			} else {
				out.Arg = in.Bytes()
			}
			ArgSet = true
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !ArgSet {
		in.AddError(fmt.Errorf("key 'arg' is required"))
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoBinary1(out *jwriter.Writer, in Echo_EchoBinary_Args) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"arg\":"
		out.RawString(prefix[1:])
		out.Base64Bytes(in.Arg)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Echo_EchoBinary_Args) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoBinary1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Echo_EchoBinary_Args) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoBinary1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Echo_EchoBinary_Args) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoBinary1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Echo_EchoBinary_Args) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarEchoEchoBinary1(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarTooManyArgs(in *jlexer.Lexer, out *Bar_TooManyArgs_Result) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "success":
			if in.IsNull() {
				in.Skip()
				out.Success = nil
			} else {
				if out.Success == nil {
					out.Success = new(BarResponse)
				}
				(*out.Success).UnmarshalEasyJSON(in)
			}
		case "barException":
			if in.IsNull() {
				in.Skip()
				out.BarException = nil
			} else {
				if out.BarException == nil {
					out.BarException = new(BarException)
				}
				(*out.BarException).UnmarshalEasyJSON(in)
			}
		case "fooException":
			if in.IsNull() {
				in.Skip()
				out.FooException = nil
			} else {
				if out.FooException == nil {
					out.FooException = new(foo.FooException)
				}
				easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsFooFoo(in, out.FooException)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarTooManyArgs(out *jwriter.Writer, in Bar_TooManyArgs_Result) {
	out.RawByte('{')
	first := true
	_ = first
	if in.Success != nil {
		const prefix string = ",\"success\":"
		first = false
		out.RawString(prefix[1:])
		(*in.Success).MarshalEasyJSON(out)
	}
	if in.BarException != nil {
		const prefix string = ",\"barException\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		(*in.BarException).MarshalEasyJSON(out)
	}
	if in.FooException != nil {
		const prefix string = ",\"fooException\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsFooFoo(out, *in.FooException)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Bar_TooManyArgs_Result) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarTooManyArgs(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Bar_TooManyArgs_Result) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarTooManyArgs(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Bar_TooManyArgs_Result) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarTooManyArgs(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Bar_TooManyArgs_Result) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarTooManyArgs(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsFooFoo(in *jlexer.Lexer, out *foo.FooException) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var TeapotSet bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "teapot":
			out.Teapot = string(in.String())
			TeapotSet = true
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !TeapotSet {
		in.AddError(fmt.Errorf("key 'teapot' is required"))
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsFooFoo(out *jwriter.Writer, in foo.FooException) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"teapot\":"
		out.RawString(prefix[1:])
		out.String(string(in.Teapot))
	}
	out.RawByte('}')
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarTooManyArgs1(in *jlexer.Lexer, out *Bar_TooManyArgs_Args) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var RequestSet bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "request":
			if in.IsNull() {
				in.Skip()
				out.Request = nil
			} else {
				if out.Request == nil {
					out.Request = new(BarRequest)
				}
				(*out.Request).UnmarshalEasyJSON(in)
			}
			RequestSet = true
		case "foo":
			if in.IsNull() {
				in.Skip()
				out.Foo = nil
			} else {
				if out.Foo == nil {
					out.Foo = new(foo.FooStruct)
				}
				easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsFooFoo1(in, out.Foo)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !RequestSet {
		in.AddError(fmt.Errorf("key 'request' is required"))
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarTooManyArgs1(out *jwriter.Writer, in Bar_TooManyArgs_Args) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"request\":"
		out.RawString(prefix[1:])
		if in.Request == nil {
			out.RawString("null")
		} else {
			(*in.Request).MarshalEasyJSON(out)
		}
	}
	if in.Foo != nil {
		const prefix string = ",\"foo\":"
		out.RawString(prefix)
		easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsFooFoo1(out, *in.Foo)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Bar_TooManyArgs_Args) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarTooManyArgs1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Bar_TooManyArgs_Args) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarTooManyArgs1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Bar_TooManyArgs_Args) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarTooManyArgs1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Bar_TooManyArgs_Args) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarTooManyArgs1(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsFooFoo1(in *jlexer.Lexer, out *foo.FooStruct) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var FooStringSet bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "fooString":
			out.FooString = string(in.String())
			FooStringSet = true
		case "fooI32":
			if in.IsNull() {
				in.Skip()
				out.FooI32 = nil
			} else {
				if out.FooI32 == nil {
					out.FooI32 = new(int32)
				}
				*out.FooI32 = int32(in.Int32())
			}
		case "fooI16":
			if in.IsNull() {
				in.Skip()
				out.FooI16 = nil
			} else {
				if out.FooI16 == nil {
					out.FooI16 = new(int16)
				}
				*out.FooI16 = int16(in.Int16())
			}
		case "fooDouble":
			if in.IsNull() {
				in.Skip()
				out.FooDouble = nil
			} else {
				if out.FooDouble == nil {
					out.FooDouble = new(float64)
				}
				*out.FooDouble = float64(in.Float64())
			}
		case "fooBool":
			if in.IsNull() {
				in.Skip()
				out.FooBool = nil
			} else {
				if out.FooBool == nil {
					out.FooBool = new(bool)
				}
				*out.FooBool = bool(in.Bool())
			}
		case "fooMap":
			if in.IsNull() {
				in.Skip()
			} else {
				in.Delim('{')
				if !in.IsDelim('}') {
					out.FooMap = make(map[string]string)
				} else {
					out.FooMap = nil
				}
				for !in.IsDelim('}') {
					key := string(in.String())
					in.WantColon()
					var v46 string
					v46 = string(in.String())
					(out.FooMap)[key] = v46
					in.WantComma()
				}
				in.Delim('}')
			}
		case "message":
			if in.IsNull() {
				in.Skip()
				out.Message = nil
			} else {
				if out.Message == nil {
					out.Message = new(base.Message)
				}
				easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsFooBaseBase(in, out.Message)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !FooStringSet {
		in.AddError(fmt.Errorf("key 'fooString' is required"))
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsFooFoo1(out *jwriter.Writer, in foo.FooStruct) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"fooString\":"
		out.RawString(prefix[1:])
		out.String(string(in.FooString))
	}
	if in.FooI32 != nil {
		const prefix string = ",\"fooI32\":"
		out.RawString(prefix)
		out.Int32(int32(*in.FooI32))
	}
	if in.FooI16 != nil {
		const prefix string = ",\"fooI16\":"
		out.RawString(prefix)
		out.Int16(int16(*in.FooI16))
	}
	if in.FooDouble != nil {
		const prefix string = ",\"fooDouble\":"
		out.RawString(prefix)
		out.Float64(float64(*in.FooDouble))
	}
	if in.FooBool != nil {
		const prefix string = ",\"fooBool\":"
		out.RawString(prefix)
		out.Bool(bool(*in.FooBool))
	}
	if len(in.FooMap) != 0 {
		const prefix string = ",\"fooMap\":"
		out.RawString(prefix)
		{
			out.RawByte('{')
			v47First := true
			for v47Name, v47Value := range in.FooMap {
				if v47First {
					v47First = false
				} else {
					out.RawByte(',')
				}
				out.String(string(v47Name))
				out.RawByte(':')
				out.String(string(v47Value))
			}
			out.RawByte('}')
		}
	}
	if in.Message != nil {
		const prefix string = ",\"message\":"
		out.RawString(prefix)
		easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsFooBaseBase(out, *in.Message)
	}
	out.RawByte('}')
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsFooBaseBase(in *jlexer.Lexer, out *base.Message) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var BodySet bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "body":
			out.Body = string(in.String())
			BodySet = true
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !BodySet {
		in.AddError(fmt.Errorf("key 'body' is required"))
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsFooBaseBase(out *jwriter.Writer, in base.Message) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"body\":"
		out.RawString(prefix[1:])
		out.String(string(in.Body))
	}
	out.RawByte('}')
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarNormal(in *jlexer.Lexer, out *Bar_Normal_Result) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "success":
			if in.IsNull() {
				in.Skip()
				out.Success = nil
			} else {
				if out.Success == nil {
					out.Success = new(BarResponse)
				}
				(*out.Success).UnmarshalEasyJSON(in)
			}
		case "barException":
			if in.IsNull() {
				in.Skip()
				out.BarException = nil
			} else {
				if out.BarException == nil {
					out.BarException = new(BarException)
				}
				(*out.BarException).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarNormal(out *jwriter.Writer, in Bar_Normal_Result) {
	out.RawByte('{')
	first := true
	_ = first
	if in.Success != nil {
		const prefix string = ",\"success\":"
		first = false
		out.RawString(prefix[1:])
		(*in.Success).MarshalEasyJSON(out)
	}
	if in.BarException != nil {
		const prefix string = ",\"barException\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		(*in.BarException).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Bar_Normal_Result) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarNormal(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Bar_Normal_Result) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarNormal(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Bar_Normal_Result) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarNormal(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Bar_Normal_Result) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarNormal(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarNormal1(in *jlexer.Lexer, out *Bar_Normal_Args) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var RequestSet bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "request":
			if in.IsNull() {
				in.Skip()
				out.Request = nil
			} else {
				if out.Request == nil {
					out.Request = new(BarRequest)
				}
				(*out.Request).UnmarshalEasyJSON(in)
			}
			RequestSet = true
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !RequestSet {
		in.AddError(fmt.Errorf("key 'request' is required"))
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarNormal1(out *jwriter.Writer, in Bar_Normal_Args) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"request\":"
		out.RawString(prefix[1:])
		if in.Request == nil {
			out.RawString("null")
		} else {
			(*in.Request).MarshalEasyJSON(out)
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Bar_Normal_Args) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarNormal1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Bar_Normal_Args) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarNormal1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Bar_Normal_Args) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarNormal1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Bar_Normal_Args) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarNormal1(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarNormalRecur(in *jlexer.Lexer, out *Bar_NormalRecur_Result) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "success":
			if in.IsNull() {
				in.Skip()
				out.Success = nil
			} else {
				if out.Success == nil {
					out.Success = new(BarResponseRecur)
				}
				(*out.Success).UnmarshalEasyJSON(in)
			}
		case "barException":
			if in.IsNull() {
				in.Skip()
				out.BarException = nil
			} else {
				if out.BarException == nil {
					out.BarException = new(BarException)
				}
				(*out.BarException).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarNormalRecur(out *jwriter.Writer, in Bar_NormalRecur_Result) {
	out.RawByte('{')
	first := true
	_ = first
	if in.Success != nil {
		const prefix string = ",\"success\":"
		first = false
		out.RawString(prefix[1:])
		(*in.Success).MarshalEasyJSON(out)
	}
	if in.BarException != nil {
		const prefix string = ",\"barException\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		(*in.BarException).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Bar_NormalRecur_Result) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarNormalRecur(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Bar_NormalRecur_Result) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarNormalRecur(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Bar_NormalRecur_Result) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarNormalRecur(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Bar_NormalRecur_Result) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarNormalRecur(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarNormalRecur1(in *jlexer.Lexer, out *Bar_NormalRecur_Args) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var RequestSet bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "request":
			if in.IsNull() {
				in.Skip()
				out.Request = nil
			} else {
				if out.Request == nil {
					out.Request = new(BarRequestRecur)
				}
				(*out.Request).UnmarshalEasyJSON(in)
			}
			RequestSet = true
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !RequestSet {
		in.AddError(fmt.Errorf("key 'request' is required"))
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarNormalRecur1(out *jwriter.Writer, in Bar_NormalRecur_Args) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"request\":"
		out.RawString(prefix[1:])
		if in.Request == nil {
			out.RawString("null")
		} else {
			(*in.Request).MarshalEasyJSON(out)
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Bar_NormalRecur_Args) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarNormalRecur1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Bar_NormalRecur_Args) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarNormalRecur1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Bar_NormalRecur_Args) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarNormalRecur1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Bar_NormalRecur_Args) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarNormalRecur1(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarNoRequest(in *jlexer.Lexer, out *Bar_NoRequest_Result) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "success":
			if in.IsNull() {
				in.Skip()
				out.Success = nil
			} else {
				if out.Success == nil {
					out.Success = new(BarResponse)
				}
				(*out.Success).UnmarshalEasyJSON(in)
			}
		case "barException":
			if in.IsNull() {
				in.Skip()
				out.BarException = nil
			} else {
				if out.BarException == nil {
					out.BarException = new(BarException)
				}
				(*out.BarException).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarNoRequest(out *jwriter.Writer, in Bar_NoRequest_Result) {
	out.RawByte('{')
	first := true
	_ = first
	if in.Success != nil {
		const prefix string = ",\"success\":"
		first = false
		out.RawString(prefix[1:])
		(*in.Success).MarshalEasyJSON(out)
	}
	if in.BarException != nil {
		const prefix string = ",\"barException\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		(*in.BarException).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Bar_NoRequest_Result) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarNoRequest(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Bar_NoRequest_Result) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarNoRequest(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Bar_NoRequest_Result) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarNoRequest(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Bar_NoRequest_Result) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarNoRequest(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarNoRequest1(in *jlexer.Lexer, out *Bar_NoRequest_Args) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarNoRequest1(out *jwriter.Writer, in Bar_NoRequest_Args) {
	out.RawByte('{')
	first := true
	_ = first
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Bar_NoRequest_Args) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarNoRequest1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Bar_NoRequest_Args) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarNoRequest1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Bar_NoRequest_Args) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarNoRequest1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Bar_NoRequest_Args) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarNoRequest1(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarMissingArg(in *jlexer.Lexer, out *Bar_MissingArg_Result) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "success":
			if in.IsNull() {
				in.Skip()
				out.Success = nil
			} else {
				if out.Success == nil {
					out.Success = new(BarResponse)
				}
				(*out.Success).UnmarshalEasyJSON(in)
			}
		case "barException":
			if in.IsNull() {
				in.Skip()
				out.BarException = nil
			} else {
				if out.BarException == nil {
					out.BarException = new(BarException)
				}
				(*out.BarException).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarMissingArg(out *jwriter.Writer, in Bar_MissingArg_Result) {
	out.RawByte('{')
	first := true
	_ = first
	if in.Success != nil {
		const prefix string = ",\"success\":"
		first = false
		out.RawString(prefix[1:])
		(*in.Success).MarshalEasyJSON(out)
	}
	if in.BarException != nil {
		const prefix string = ",\"barException\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		(*in.BarException).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Bar_MissingArg_Result) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarMissingArg(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Bar_MissingArg_Result) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarMissingArg(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Bar_MissingArg_Result) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarMissingArg(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Bar_MissingArg_Result) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarMissingArg(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarMissingArg1(in *jlexer.Lexer, out *Bar_MissingArg_Args) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarMissingArg1(out *jwriter.Writer, in Bar_MissingArg_Args) {
	out.RawByte('{')
	first := true
	_ = first
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Bar_MissingArg_Args) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarMissingArg1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Bar_MissingArg_Args) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarMissingArg1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Bar_MissingArg_Args) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarMissingArg1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Bar_MissingArg_Args) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarMissingArg1(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarListAndEnum(in *jlexer.Lexer, out *Bar_ListAndEnum_Result) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "success":
			if in.IsNull() {
				in.Skip()
				out.Success = nil
			} else {
				if out.Success == nil {
					out.Success = new(string)
				}
				*out.Success = string(in.String())
			}
		case "barException":
			if in.IsNull() {
				in.Skip()
				out.BarException = nil
			} else {
				if out.BarException == nil {
					out.BarException = new(BarException)
				}
				(*out.BarException).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarListAndEnum(out *jwriter.Writer, in Bar_ListAndEnum_Result) {
	out.RawByte('{')
	first := true
	_ = first
	if in.Success != nil {
		const prefix string = ",\"success\":"
		first = false
		out.RawString(prefix[1:])
		out.String(string(*in.Success))
	}
	if in.BarException != nil {
		const prefix string = ",\"barException\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		(*in.BarException).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Bar_ListAndEnum_Result) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarListAndEnum(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Bar_ListAndEnum_Result) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarListAndEnum(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Bar_ListAndEnum_Result) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarListAndEnum(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Bar_ListAndEnum_Result) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarListAndEnum(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarListAndEnum1(in *jlexer.Lexer, out *Bar_ListAndEnum_Args) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var DemoIdsSet bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "demoIds":
			if in.IsNull() {
				in.Skip()
				out.DemoIds = nil
			} else {
				in.Delim('[')
				if out.DemoIds == nil {
					if !in.IsDelim(']') {
						out.DemoIds = make([]string, 0, 4)
					} else {
						out.DemoIds = []string{}
					}
				} else {
					out.DemoIds = (out.DemoIds)[:0]
				}
				for !in.IsDelim(']') {
					var v48 string
					v48 = string(in.String())
					out.DemoIds = append(out.DemoIds, v48)
					in.WantComma()
				}
				in.Delim(']')
			}
			DemoIdsSet = true
		case "demoType":
			if in.IsNull() {
				in.Skip()
				out.DemoType = nil
			} else {
				if out.DemoType == nil {
					out.DemoType = new(DemoType)
				}
				if data := in.Raw(); in.Ok() {
					in.AddError((*out.DemoType).UnmarshalJSON(data))
				}
			}
		case "demos":
			if in.IsNull() {
				in.Skip()
				out.Demos = nil
			} else {
				in.Delim('[')
				if out.Demos == nil {
					if !in.IsDelim(']') {
						out.Demos = make([]DemoType, 0, 16)
					} else {
						out.Demos = []DemoType{}
					}
				} else {
					out.Demos = (out.Demos)[:0]
				}
				for !in.IsDelim(']') {
					var v49 DemoType
					if data := in.Raw(); in.Ok() {
						in.AddError((v49).UnmarshalJSON(data))
					}
					out.Demos = append(out.Demos, v49)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !DemoIdsSet {
		in.AddError(fmt.Errorf("key 'demoIds' is required"))
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarListAndEnum1(out *jwriter.Writer, in Bar_ListAndEnum_Args) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"demoIds\":"
		out.RawString(prefix[1:])
		if in.DemoIds == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v50, v51 := range in.DemoIds {
				if v50 > 0 {
					out.RawByte(',')
				}
				out.String(string(v51))
			}
			out.RawByte(']')
		}
	}
	if in.DemoType != nil {
		const prefix string = ",\"demoType\":"
		out.RawString(prefix)
		out.Raw((*in.DemoType).MarshalJSON())
	}
	if len(in.Demos) != 0 {
		const prefix string = ",\"demos\":"
		out.RawString(prefix)
		{
			out.RawByte('[')
			for v52, v53 := range in.Demos {
				if v52 > 0 {
					out.RawByte(',')
				}
				out.Raw((v53).MarshalJSON())
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Bar_ListAndEnum_Args) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarListAndEnum1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Bar_ListAndEnum_Args) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarListAndEnum1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Bar_ListAndEnum_Args) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarListAndEnum1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Bar_ListAndEnum_Args) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarListAndEnum1(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarHelloWorld(in *jlexer.Lexer, out *Bar_HelloWorld_Result) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "success":
			if in.IsNull() {
				in.Skip()
				out.Success = nil
			} else {
				if out.Success == nil {
					out.Success = new(string)
				}
				*out.Success = string(in.String())
			}
		case "barException":
			if in.IsNull() {
				in.Skip()
				out.BarException = nil
			} else {
				if out.BarException == nil {
					out.BarException = new(BarException)
				}
				(*out.BarException).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarHelloWorld(out *jwriter.Writer, in Bar_HelloWorld_Result) {
	out.RawByte('{')
	first := true
	_ = first
	if in.Success != nil {
		const prefix string = ",\"success\":"
		first = false
		out.RawString(prefix[1:])
		out.String(string(*in.Success))
	}
	if in.BarException != nil {
		const prefix string = ",\"barException\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		(*in.BarException).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Bar_HelloWorld_Result) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarHelloWorld(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Bar_HelloWorld_Result) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarHelloWorld(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Bar_HelloWorld_Result) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarHelloWorld(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Bar_HelloWorld_Result) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarHelloWorld(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarHelloWorld1(in *jlexer.Lexer, out *Bar_HelloWorld_Args) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarHelloWorld1(out *jwriter.Writer, in Bar_HelloWorld_Args) {
	out.RawByte('{')
	first := true
	_ = first
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Bar_HelloWorld_Args) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarHelloWorld1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Bar_HelloWorld_Args) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarHelloWorld1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Bar_HelloWorld_Args) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarHelloWorld1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Bar_HelloWorld_Args) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarHelloWorld1(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarDeleteWithQueryParams(in *jlexer.Lexer, out *Bar_DeleteWithQueryParams_Result) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarDeleteWithQueryParams(out *jwriter.Writer, in Bar_DeleteWithQueryParams_Result) {
	out.RawByte('{')
	first := true
	_ = first
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Bar_DeleteWithQueryParams_Result) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarDeleteWithQueryParams(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Bar_DeleteWithQueryParams_Result) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarDeleteWithQueryParams(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Bar_DeleteWithQueryParams_Result) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarDeleteWithQueryParams(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Bar_DeleteWithQueryParams_Result) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarDeleteWithQueryParams(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarDeleteWithQueryParams1(in *jlexer.Lexer, out *Bar_DeleteWithQueryParams_Args) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var FilterSet bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "filter":
			out.Filter = string(in.String())
			FilterSet = true
		case "count":
			if in.IsNull() {
				in.Skip()
				out.Count = nil
			} else {
				if out.Count == nil {
					out.Count = new(int32)
				}
				*out.Count = int32(in.Int32())
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !FilterSet {
		in.AddError(fmt.Errorf("key 'filter' is required"))
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarDeleteWithQueryParams1(out *jwriter.Writer, in Bar_DeleteWithQueryParams_Args) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"filter\":"
		out.RawString(prefix[1:])
		out.String(string(in.Filter))
	}
	if in.Count != nil {
		const prefix string = ",\"count\":"
		out.RawString(prefix)
		out.Int32(int32(*in.Count))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Bar_DeleteWithQueryParams_Args) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarDeleteWithQueryParams1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Bar_DeleteWithQueryParams_Args) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarDeleteWithQueryParams1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Bar_DeleteWithQueryParams_Args) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarDeleteWithQueryParams1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Bar_DeleteWithQueryParams_Args) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarDeleteWithQueryParams1(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarDeleteFoo(in *jlexer.Lexer, out *Bar_DeleteFoo_Result) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarDeleteFoo(out *jwriter.Writer, in Bar_DeleteFoo_Result) {
	out.RawByte('{')
	first := true
	_ = first
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Bar_DeleteFoo_Result) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarDeleteFoo(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Bar_DeleteFoo_Result) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarDeleteFoo(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Bar_DeleteFoo_Result) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarDeleteFoo(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Bar_DeleteFoo_Result) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarDeleteFoo(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarDeleteFoo1(in *jlexer.Lexer, out *Bar_DeleteFoo_Args) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var UserUUIDSet bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "userUUID":
			out.UserUUID = string(in.String())
			UserUUIDSet = true
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !UserUUIDSet {
		in.AddError(fmt.Errorf("key 'userUUID' is required"))
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarDeleteFoo1(out *jwriter.Writer, in Bar_DeleteFoo_Args) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"userUUID\":"
		out.RawString(prefix[1:])
		out.String(string(in.UserUUID))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Bar_DeleteFoo_Args) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarDeleteFoo1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Bar_DeleteFoo_Args) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarDeleteFoo1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Bar_DeleteFoo_Args) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarDeleteFoo1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Bar_DeleteFoo_Args) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarDeleteFoo1(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithQueryParams(in *jlexer.Lexer, out *Bar_ArgWithQueryParams_Result) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "success":
			if in.IsNull() {
				in.Skip()
				out.Success = nil
			} else {
				if out.Success == nil {
					out.Success = new(BarResponse)
				}
				(*out.Success).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithQueryParams(out *jwriter.Writer, in Bar_ArgWithQueryParams_Result) {
	out.RawByte('{')
	first := true
	_ = first
	if in.Success != nil {
		const prefix string = ",\"success\":"
		first = false
		out.RawString(prefix[1:])
		(*in.Success).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Bar_ArgWithQueryParams_Result) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithQueryParams(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Bar_ArgWithQueryParams_Result) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithQueryParams(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Bar_ArgWithQueryParams_Result) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithQueryParams(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Bar_ArgWithQueryParams_Result) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithQueryParams(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithQueryParams1(in *jlexer.Lexer, out *Bar_ArgWithQueryParams_Args) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var NameSet bool
	var BarSet bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "name":
			out.Name = string(in.String())
			NameSet = true
		case "userUUID":
			if in.IsNull() {
				in.Skip()
				out.UserUUID = nil
			} else {
				if out.UserUUID == nil {
					out.UserUUID = new(string)
				}
				*out.UserUUID = string(in.String())
			}
		case "foo":
			if in.IsNull() {
				in.Skip()
				out.Foo = nil
			} else {
				in.Delim('[')
				if out.Foo == nil {
					if !in.IsDelim(']') {
						out.Foo = make([]string, 0, 4)
					} else {
						out.Foo = []string{}
					}
				} else {
					out.Foo = (out.Foo)[:0]
				}
				for !in.IsDelim(']') {
					var v54 string
					v54 = string(in.String())
					out.Foo = append(out.Foo, v54)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "bar":
			if in.IsNull() {
				in.Skip()
				out.Bar = nil
			} else {
				in.Delim('[')
				if out.Bar == nil {
					if !in.IsDelim(']') {
						out.Bar = make([]int8, 0, 64)
					} else {
						out.Bar = []int8{}
					}
				} else {
					out.Bar = (out.Bar)[:0]
				}
				for !in.IsDelim(']') {
					var v55 int8
					v55 = int8(in.Int8())
					out.Bar = append(out.Bar, v55)
					in.WantComma()
				}
				in.Delim(']')
			}
			BarSet = true
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !NameSet {
		in.AddError(fmt.Errorf("key 'name' is required"))
	}
	if !BarSet {
		in.AddError(fmt.Errorf("key 'bar' is required"))
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithQueryParams1(out *jwriter.Writer, in Bar_ArgWithQueryParams_Args) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"name\":"
		out.RawString(prefix[1:])
		out.String(string(in.Name))
	}
	if in.UserUUID != nil {
		const prefix string = ",\"userUUID\":"
		out.RawString(prefix)
		out.String(string(*in.UserUUID))
	}
	if len(in.Foo) != 0 {
		const prefix string = ",\"foo\":"
		out.RawString(prefix)
		{
			out.RawByte('[')
			for v56, v57 := range in.Foo {
				if v56 > 0 {
					out.RawByte(',')
				}
				out.String(string(v57))
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"bar\":"
		out.RawString(prefix)
		if in.Bar == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v58, v59 := range in.Bar {
				if v58 > 0 {
					out.RawByte(',')
				}
				out.Int8(int8(v59))
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Bar_ArgWithQueryParams_Args) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithQueryParams1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Bar_ArgWithQueryParams_Args) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithQueryParams1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Bar_ArgWithQueryParams_Args) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithQueryParams1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Bar_ArgWithQueryParams_Args) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithQueryParams1(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithQueryHeader(in *jlexer.Lexer, out *Bar_ArgWithQueryHeader_Result) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "success":
			if in.IsNull() {
				in.Skip()
				out.Success = nil
			} else {
				if out.Success == nil {
					out.Success = new(BarResponse)
				}
				(*out.Success).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithQueryHeader(out *jwriter.Writer, in Bar_ArgWithQueryHeader_Result) {
	out.RawByte('{')
	first := true
	_ = first
	if in.Success != nil {
		const prefix string = ",\"success\":"
		first = false
		out.RawString(prefix[1:])
		(*in.Success).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Bar_ArgWithQueryHeader_Result) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithQueryHeader(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Bar_ArgWithQueryHeader_Result) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithQueryHeader(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Bar_ArgWithQueryHeader_Result) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithQueryHeader(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Bar_ArgWithQueryHeader_Result) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithQueryHeader(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithQueryHeader1(in *jlexer.Lexer, out *Bar_ArgWithQueryHeader_Args) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "userUUID":
			if in.IsNull() {
				in.Skip()
				out.UserUUID = nil
			} else {
				if out.UserUUID == nil {
					out.UserUUID = new(string)
				}
				*out.UserUUID = string(in.String())
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithQueryHeader1(out *jwriter.Writer, in Bar_ArgWithQueryHeader_Args) {
	out.RawByte('{')
	first := true
	_ = first
	if in.UserUUID != nil {
		const prefix string = ",\"userUUID\":"
		first = false
		out.RawString(prefix[1:])
		out.String(string(*in.UserUUID))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Bar_ArgWithQueryHeader_Args) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithQueryHeader1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Bar_ArgWithQueryHeader_Args) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithQueryHeader1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Bar_ArgWithQueryHeader_Args) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithQueryHeader1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Bar_ArgWithQueryHeader_Args) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithQueryHeader1(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithParams(in *jlexer.Lexer, out *Bar_ArgWithParams_Result) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "success":
			if in.IsNull() {
				in.Skip()
				out.Success = nil
			} else {
				if out.Success == nil {
					out.Success = new(BarResponse)
				}
				(*out.Success).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithParams(out *jwriter.Writer, in Bar_ArgWithParams_Result) {
	out.RawByte('{')
	first := true
	_ = first
	if in.Success != nil {
		const prefix string = ",\"success\":"
		first = false
		out.RawString(prefix[1:])
		(*in.Success).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Bar_ArgWithParams_Result) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithParams(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Bar_ArgWithParams_Result) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithParams(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Bar_ArgWithParams_Result) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithParams(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Bar_ArgWithParams_Result) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithParams(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithParams1(in *jlexer.Lexer, out *Bar_ArgWithParams_Args) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var UUIDSet bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "uuid":
			out.UUID = string(in.String())
			UUIDSet = true
		case "params":
			if in.IsNull() {
				in.Skip()
				out.Params = nil
			} else {
				if out.Params == nil {
					out.Params = new(ParamsStruct)
				}
				(*out.Params).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !UUIDSet {
		in.AddError(fmt.Errorf("key 'uuid' is required"))
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithParams1(out *jwriter.Writer, in Bar_ArgWithParams_Args) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"uuid\":"
		out.RawString(prefix[1:])
		out.String(string(in.UUID))
	}
	if in.Params != nil {
		const prefix string = ",\"params\":"
		out.RawString(prefix)
		(*in.Params).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Bar_ArgWithParams_Args) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithParams1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Bar_ArgWithParams_Args) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithParams1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Bar_ArgWithParams_Args) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithParams1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Bar_ArgWithParams_Args) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithParams1(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithParamsAndDuplicateFields(in *jlexer.Lexer, out *Bar_ArgWithParamsAndDuplicateFields_Result) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "success":
			if in.IsNull() {
				in.Skip()
				out.Success = nil
			} else {
				if out.Success == nil {
					out.Success = new(BarResponse)
				}
				(*out.Success).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithParamsAndDuplicateFields(out *jwriter.Writer, in Bar_ArgWithParamsAndDuplicateFields_Result) {
	out.RawByte('{')
	first := true
	_ = first
	if in.Success != nil {
		const prefix string = ",\"success\":"
		first = false
		out.RawString(prefix[1:])
		(*in.Success).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Bar_ArgWithParamsAndDuplicateFields_Result) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithParamsAndDuplicateFields(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Bar_ArgWithParamsAndDuplicateFields_Result) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithParamsAndDuplicateFields(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Bar_ArgWithParamsAndDuplicateFields_Result) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithParamsAndDuplicateFields(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Bar_ArgWithParamsAndDuplicateFields_Result) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithParamsAndDuplicateFields(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithParamsAndDuplicateFields1(in *jlexer.Lexer, out *Bar_ArgWithParamsAndDuplicateFields_Args) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var RequestSet bool
	var EntityUUIDSet bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "request":
			if in.IsNull() {
				in.Skip()
				out.Request = nil
			} else {
				if out.Request == nil {
					out.Request = new(RequestWithDuplicateType)
				}
				(*out.Request).UnmarshalEasyJSON(in)
			}
			RequestSet = true
		case "entityUUID":
			out.EntityUUID = string(in.String())
			EntityUUIDSet = true
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !RequestSet {
		in.AddError(fmt.Errorf("key 'request' is required"))
	}
	if !EntityUUIDSet {
		in.AddError(fmt.Errorf("key 'entityUUID' is required"))
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithParamsAndDuplicateFields1(out *jwriter.Writer, in Bar_ArgWithParamsAndDuplicateFields_Args) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"request\":"
		out.RawString(prefix[1:])
		if in.Request == nil {
			out.RawString("null")
		} else {
			(*in.Request).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"entityUUID\":"
		out.RawString(prefix)
		out.String(string(in.EntityUUID))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Bar_ArgWithParamsAndDuplicateFields_Args) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithParamsAndDuplicateFields1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Bar_ArgWithParamsAndDuplicateFields_Args) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithParamsAndDuplicateFields1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Bar_ArgWithParamsAndDuplicateFields_Args) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithParamsAndDuplicateFields1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Bar_ArgWithParamsAndDuplicateFields_Args) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithParamsAndDuplicateFields1(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithNestedQueryParams(in *jlexer.Lexer, out *Bar_ArgWithNestedQueryParams_Result) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "success":
			if in.IsNull() {
				in.Skip()
				out.Success = nil
			} else {
				if out.Success == nil {
					out.Success = new(BarResponse)
				}
				(*out.Success).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithNestedQueryParams(out *jwriter.Writer, in Bar_ArgWithNestedQueryParams_Result) {
	out.RawByte('{')
	first := true
	_ = first
	if in.Success != nil {
		const prefix string = ",\"success\":"
		first = false
		out.RawString(prefix[1:])
		(*in.Success).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Bar_ArgWithNestedQueryParams_Result) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithNestedQueryParams(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Bar_ArgWithNestedQueryParams_Result) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithNestedQueryParams(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Bar_ArgWithNestedQueryParams_Result) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithNestedQueryParams(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Bar_ArgWithNestedQueryParams_Result) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithNestedQueryParams(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithNestedQueryParams1(in *jlexer.Lexer, out *Bar_ArgWithNestedQueryParams_Args) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var RequestSet bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "request":
			if in.IsNull() {
				in.Skip()
				out.Request = nil
			} else {
				if out.Request == nil {
					out.Request = new(QueryParamsStruct)
				}
				(*out.Request).UnmarshalEasyJSON(in)
			}
			RequestSet = true
		case "opt":
			if in.IsNull() {
				in.Skip()
				out.Opt = nil
			} else {
				if out.Opt == nil {
					out.Opt = new(QueryParamsOptsStruct)
				}
				(*out.Opt).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !RequestSet {
		in.AddError(fmt.Errorf("key 'request' is required"))
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithNestedQueryParams1(out *jwriter.Writer, in Bar_ArgWithNestedQueryParams_Args) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"request\":"
		out.RawString(prefix[1:])
		if in.Request == nil {
			out.RawString("null")
		} else {
			(*in.Request).MarshalEasyJSON(out)
		}
	}
	if in.Opt != nil {
		const prefix string = ",\"opt\":"
		out.RawString(prefix)
		(*in.Opt).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Bar_ArgWithNestedQueryParams_Args) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithNestedQueryParams1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Bar_ArgWithNestedQueryParams_Args) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithNestedQueryParams1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Bar_ArgWithNestedQueryParams_Args) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithNestedQueryParams1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Bar_ArgWithNestedQueryParams_Args) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithNestedQueryParams1(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithNearDupQueryParams(in *jlexer.Lexer, out *Bar_ArgWithNearDupQueryParams_Result) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "success":
			if in.IsNull() {
				in.Skip()
				out.Success = nil
			} else {
				if out.Success == nil {
					out.Success = new(BarResponse)
				}
				(*out.Success).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithNearDupQueryParams(out *jwriter.Writer, in Bar_ArgWithNearDupQueryParams_Result) {
	out.RawByte('{')
	first := true
	_ = first
	if in.Success != nil {
		const prefix string = ",\"success\":"
		first = false
		out.RawString(prefix[1:])
		(*in.Success).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Bar_ArgWithNearDupQueryParams_Result) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithNearDupQueryParams(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Bar_ArgWithNearDupQueryParams_Result) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithNearDupQueryParams(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Bar_ArgWithNearDupQueryParams_Result) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithNearDupQueryParams(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Bar_ArgWithNearDupQueryParams_Result) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithNearDupQueryParams(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithNearDupQueryParams1(in *jlexer.Lexer, out *Bar_ArgWithNearDupQueryParams_Args) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var OneSet bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "one":
			out.One = string(in.String())
			OneSet = true
		case "two":
			if in.IsNull() {
				in.Skip()
				out.Two = nil
			} else {
				if out.Two == nil {
					out.Two = new(int32)
				}
				*out.Two = int32(in.Int32())
			}
		case "three":
			if in.IsNull() {
				in.Skip()
				out.Three = nil
			} else {
				if out.Three == nil {
					out.Three = new(string)
				}
				*out.Three = string(in.String())
			}
		case "four":
			if in.IsNull() {
				in.Skip()
				out.Four = nil
			} else {
				if out.Four == nil {
					out.Four = new(string)
				}
				*out.Four = string(in.String())
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !OneSet {
		in.AddError(fmt.Errorf("key 'one' is required"))
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithNearDupQueryParams1(out *jwriter.Writer, in Bar_ArgWithNearDupQueryParams_Args) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"one\":"
		out.RawString(prefix[1:])
		out.String(string(in.One))
	}
	if in.Two != nil {
		const prefix string = ",\"two\":"
		out.RawString(prefix)
		out.Int32(int32(*in.Two))
	}
	if in.Three != nil {
		const prefix string = ",\"three\":"
		out.RawString(prefix)
		out.String(string(*in.Three))
	}
	if in.Four != nil {
		const prefix string = ",\"four\":"
		out.RawString(prefix)
		out.String(string(*in.Four))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Bar_ArgWithNearDupQueryParams_Args) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithNearDupQueryParams1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Bar_ArgWithNearDupQueryParams_Args) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithNearDupQueryParams1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Bar_ArgWithNearDupQueryParams_Args) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithNearDupQueryParams1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Bar_ArgWithNearDupQueryParams_Args) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithNearDupQueryParams1(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithManyQueryParams(in *jlexer.Lexer, out *Bar_ArgWithManyQueryParams_Result) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "success":
			if in.IsNull() {
				in.Skip()
				out.Success = nil
			} else {
				if out.Success == nil {
					out.Success = new(BarResponse)
				}
				(*out.Success).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithManyQueryParams(out *jwriter.Writer, in Bar_ArgWithManyQueryParams_Result) {
	out.RawByte('{')
	first := true
	_ = first
	if in.Success != nil {
		const prefix string = ",\"success\":"
		first = false
		out.RawString(prefix[1:])
		(*in.Success).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Bar_ArgWithManyQueryParams_Result) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithManyQueryParams(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Bar_ArgWithManyQueryParams_Result) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithManyQueryParams(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Bar_ArgWithManyQueryParams_Result) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithManyQueryParams(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Bar_ArgWithManyQueryParams_Result) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithManyQueryParams(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithManyQueryParams1(in *jlexer.Lexer, out *Bar_ArgWithManyQueryParams_Args) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var AStrSet bool
	var ABoolSet bool
	var AInt8Set bool
	var AInt16Set bool
	var AInt32Set bool
	var AInt64Set bool
	var AFloat64Set bool
	var AUUIDSet bool
	var AListUUIDSet bool
	var AStringListSet bool
	var AUUIDListSet bool
	var ATsSet bool
	var AReqDemoSet bool
	var AReqFruitsSet bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "aStr":
			out.AStr = string(in.String())
			AStrSet = true
		case "anOptStr":
			if in.IsNull() {
				in.Skip()
				out.AnOptStr = nil
			} else {
				if out.AnOptStr == nil {
					out.AnOptStr = new(string)
				}
				*out.AnOptStr = string(in.String())
			}
		case "aBool":
			out.ABool = bool(in.Bool())
			ABoolSet = true
		case "anOptBool":
			if in.IsNull() {
				in.Skip()
				out.AnOptBool = nil
			} else {
				if out.AnOptBool == nil {
					out.AnOptBool = new(bool)
				}
				*out.AnOptBool = bool(in.Bool())
			}
		case "aInt8":
			out.AInt8 = int8(in.Int8())
			AInt8Set = true
		case "anOptInt8":
			if in.IsNull() {
				in.Skip()
				out.AnOptInt8 = nil
			} else {
				if out.AnOptInt8 == nil {
					out.AnOptInt8 = new(int8)
				}
				*out.AnOptInt8 = int8(in.Int8())
			}
		case "aInt16":
			out.AInt16 = int16(in.Int16())
			AInt16Set = true
		case "anOptInt16":
			if in.IsNull() {
				in.Skip()
				out.AnOptInt16 = nil
			} else {
				if out.AnOptInt16 == nil {
					out.AnOptInt16 = new(int16)
				}
				*out.AnOptInt16 = int16(in.Int16())
			}
		case "aInt32":
			out.AInt32 = int32(in.Int32())
			AInt32Set = true
		case "anOptInt32":
			if in.IsNull() {
				in.Skip()
				out.AnOptInt32 = nil
			} else {
				if out.AnOptInt32 == nil {
					out.AnOptInt32 = new(int32)
				}
				*out.AnOptInt32 = int32(in.Int32())
			}
		case "aInt64":
			out.AInt64 = int64(in.Int64())
			AInt64Set = true
		case "anOptInt64":
			if in.IsNull() {
				in.Skip()
				out.AnOptInt64 = nil
			} else {
				if out.AnOptInt64 == nil {
					out.AnOptInt64 = new(int64)
				}
				*out.AnOptInt64 = int64(in.Int64())
			}
		case "aFloat64":
			out.AFloat64 = float64(in.Float64())
			AFloat64Set = true
		case "anOptFloat64":
			if in.IsNull() {
				in.Skip()
				out.AnOptFloat64 = nil
			} else {
				if out.AnOptFloat64 == nil {
					out.AnOptFloat64 = new(float64)
				}
				*out.AnOptFloat64 = float64(in.Float64())
			}
		case "aUUID":
			out.AUUID = UUID(in.String())
			AUUIDSet = true
		case "anOptUUID":
			if in.IsNull() {
				in.Skip()
				out.AnOptUUID = nil
			} else {
				if out.AnOptUUID == nil {
					out.AnOptUUID = new(UUID)
				}
				*out.AnOptUUID = UUID(in.String())
			}
		case "aListUUID":
			if in.IsNull() {
				in.Skip()
				out.AListUUID = nil
			} else {
				in.Delim('[')
				if out.AListUUID == nil {
					if !in.IsDelim(']') {
						out.AListUUID = make([]UUID, 0, 4)
					} else {
						out.AListUUID = []UUID{}
					}
				} else {
					out.AListUUID = (out.AListUUID)[:0]
				}
				for !in.IsDelim(']') {
					var v60 UUID
					v60 = UUID(in.String())
					out.AListUUID = append(out.AListUUID, v60)
					in.WantComma()
				}
				in.Delim(']')
			}
			AListUUIDSet = true
		case "anOptListUUID":
			if in.IsNull() {
				in.Skip()
				out.AnOptListUUID = nil
			} else {
				in.Delim('[')
				if out.AnOptListUUID == nil {
					if !in.IsDelim(']') {
						out.AnOptListUUID = make([]UUID, 0, 4)
					} else {
						out.AnOptListUUID = []UUID{}
					}
				} else {
					out.AnOptListUUID = (out.AnOptListUUID)[:0]
				}
				for !in.IsDelim(']') {
					var v61 UUID
					v61 = UUID(in.String())
					out.AnOptListUUID = append(out.AnOptListUUID, v61)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "aStringList":
			if in.IsNull() {
				in.Skip()
				out.AStringList = nil
			} else {
				in.Delim('[')
				if out.AStringList == nil {
					if !in.IsDelim(']') {
						out.AStringList = make(StringList, 0, 4)
					} else {
						out.AStringList = StringList{}
					}
				} else {
					out.AStringList = (out.AStringList)[:0]
				}
				for !in.IsDelim(']') {
					var v62 string
					v62 = string(in.String())
					out.AStringList = append(out.AStringList, v62)
					in.WantComma()
				}
				in.Delim(']')
			}
			AStringListSet = true
		case "anOptStringList":
			if in.IsNull() {
				in.Skip()
				out.AnOptStringList = nil
			} else {
				in.Delim('[')
				if out.AnOptStringList == nil {
					if !in.IsDelim(']') {
						out.AnOptStringList = make(StringList, 0, 4)
					} else {
						out.AnOptStringList = StringList{}
					}
				} else {
					out.AnOptStringList = (out.AnOptStringList)[:0]
				}
				for !in.IsDelim(']') {
					var v63 string
					v63 = string(in.String())
					out.AnOptStringList = append(out.AnOptStringList, v63)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "aUUIDList":
			if in.IsNull() {
				in.Skip()
				out.AUUIDList = nil
			} else {
				in.Delim('[')
				if out.AUUIDList == nil {
					if !in.IsDelim(']') {
						out.AUUIDList = make(UUIDList, 0, 4)
					} else {
						out.AUUIDList = UUIDList{}
					}
				} else {
					out.AUUIDList = (out.AUUIDList)[:0]
				}
				for !in.IsDelim(']') {
					var v64 UUID
					v64 = UUID(in.String())
					out.AUUIDList = append(out.AUUIDList, v64)
					in.WantComma()
				}
				in.Delim(']')
			}
			AUUIDListSet = true
		case "anOptUUIDList":
			if in.IsNull() {
				in.Skip()
				out.AnOptUUIDList = nil
			} else {
				in.Delim('[')
				if out.AnOptUUIDList == nil {
					if !in.IsDelim(']') {
						out.AnOptUUIDList = make(UUIDList, 0, 4)
					} else {
						out.AnOptUUIDList = UUIDList{}
					}
				} else {
					out.AnOptUUIDList = (out.AnOptUUIDList)[:0]
				}
				for !in.IsDelim(']') {
					var v65 UUID
					v65 = UUID(in.String())
					out.AnOptUUIDList = append(out.AnOptUUIDList, v65)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "aTs":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.ATs).UnmarshalJSON(data))
			}
			ATsSet = true
		case "anOptTs":
			if in.IsNull() {
				in.Skip()
				out.AnOptTs = nil
			} else {
				if out.AnOptTs == nil {
					out.AnOptTs = new(Timestamp)
				}
				if data := in.Raw(); in.Ok() {
					in.AddError((*out.AnOptTs).UnmarshalJSON(data))
				}
			}
		case "aReqDemo":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.AReqDemo).UnmarshalJSON(data))
			}
			AReqDemoSet = true
		case "anOptFruit":
			if in.IsNull() {
				in.Skip()
				out.AnOptFruit = nil
			} else {
				if out.AnOptFruit == nil {
					out.AnOptFruit = new(Fruit)
				}
				if data := in.Raw(); in.Ok() {
					in.AddError((*out.AnOptFruit).UnmarshalJSON(data))
				}
			}
		case "aReqFruits":
			if in.IsNull() {
				in.Skip()
				out.AReqFruits = nil
			} else {
				in.Delim('[')
				if out.AReqFruits == nil {
					if !in.IsDelim(']') {
						out.AReqFruits = make([]Fruit, 0, 16)
					} else {
						out.AReqFruits = []Fruit{}
					}
				} else {
					out.AReqFruits = (out.AReqFruits)[:0]
				}
				for !in.IsDelim(']') {
					var v66 Fruit
					if data := in.Raw(); in.Ok() {
						in.AddError((v66).UnmarshalJSON(data))
					}
					out.AReqFruits = append(out.AReqFruits, v66)
					in.WantComma()
				}
				in.Delim(']')
			}
			AReqFruitsSet = true
		case "anOptDemos":
			if in.IsNull() {
				in.Skip()
				out.AnOptDemos = nil
			} else {
				in.Delim('[')
				if out.AnOptDemos == nil {
					if !in.IsDelim(']') {
						out.AnOptDemos = make([]DemoType, 0, 16)
					} else {
						out.AnOptDemos = []DemoType{}
					}
				} else {
					out.AnOptDemos = (out.AnOptDemos)[:0]
				}
				for !in.IsDelim(']') {
					var v67 DemoType
					if data := in.Raw(); in.Ok() {
						in.AddError((v67).UnmarshalJSON(data))
					}
					out.AnOptDemos = append(out.AnOptDemos, v67)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !AStrSet {
		in.AddError(fmt.Errorf("key 'aStr' is required"))
	}
	if !ABoolSet {
		in.AddError(fmt.Errorf("key 'aBool' is required"))
	}
	if !AInt8Set {
		in.AddError(fmt.Errorf("key 'aInt8' is required"))
	}
	if !AInt16Set {
		in.AddError(fmt.Errorf("key 'aInt16' is required"))
	}
	if !AInt32Set {
		in.AddError(fmt.Errorf("key 'aInt32' is required"))
	}
	if !AInt64Set {
		in.AddError(fmt.Errorf("key 'aInt64' is required"))
	}
	if !AFloat64Set {
		in.AddError(fmt.Errorf("key 'aFloat64' is required"))
	}
	if !AUUIDSet {
		in.AddError(fmt.Errorf("key 'aUUID' is required"))
	}
	if !AListUUIDSet {
		in.AddError(fmt.Errorf("key 'aListUUID' is required"))
	}
	if !AStringListSet {
		in.AddError(fmt.Errorf("key 'aStringList' is required"))
	}
	if !AUUIDListSet {
		in.AddError(fmt.Errorf("key 'aUUIDList' is required"))
	}
	if !ATsSet {
		in.AddError(fmt.Errorf("key 'aTs' is required"))
	}
	if !AReqDemoSet {
		in.AddError(fmt.Errorf("key 'aReqDemo' is required"))
	}
	if !AReqFruitsSet {
		in.AddError(fmt.Errorf("key 'aReqFruits' is required"))
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithManyQueryParams1(out *jwriter.Writer, in Bar_ArgWithManyQueryParams_Args) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"aStr\":"
		out.RawString(prefix[1:])
		out.String(string(in.AStr))
	}
	if in.AnOptStr != nil {
		const prefix string = ",\"anOptStr\":"
		out.RawString(prefix)
		out.String(string(*in.AnOptStr))
	}
	{
		const prefix string = ",\"aBool\":"
		out.RawString(prefix)
		out.Bool(bool(in.ABool))
	}
	if in.AnOptBool != nil {
		const prefix string = ",\"anOptBool\":"
		out.RawString(prefix)
		out.Bool(bool(*in.AnOptBool))
	}
	{
		const prefix string = ",\"aInt8\":"
		out.RawString(prefix)
		out.Int8(int8(in.AInt8))
	}
	if in.AnOptInt8 != nil {
		const prefix string = ",\"anOptInt8\":"
		out.RawString(prefix)
		out.Int8(int8(*in.AnOptInt8))
	}
	{
		const prefix string = ",\"aInt16\":"
		out.RawString(prefix)
		out.Int16(int16(in.AInt16))
	}
	if in.AnOptInt16 != nil {
		const prefix string = ",\"anOptInt16\":"
		out.RawString(prefix)
		out.Int16(int16(*in.AnOptInt16))
	}
	{
		const prefix string = ",\"aInt32\":"
		out.RawString(prefix)
		out.Int32(int32(in.AInt32))
	}
	if in.AnOptInt32 != nil {
		const prefix string = ",\"anOptInt32\":"
		out.RawString(prefix)
		out.Int32(int32(*in.AnOptInt32))
	}
	{
		const prefix string = ",\"aInt64\":"
		out.RawString(prefix)
		out.Int64(int64(in.AInt64))
	}
	if in.AnOptInt64 != nil {
		const prefix string = ",\"anOptInt64\":"
		out.RawString(prefix)
		out.Int64(int64(*in.AnOptInt64))
	}
	{
		const prefix string = ",\"aFloat64\":"
		out.RawString(prefix)
		out.Float64(float64(in.AFloat64))
	}
	if in.AnOptFloat64 != nil {
		const prefix string = ",\"anOptFloat64\":"
		out.RawString(prefix)
		out.Float64(float64(*in.AnOptFloat64))
	}
	{
		const prefix string = ",\"aUUID\":"
		out.RawString(prefix)
		out.String(string(in.AUUID))
	}
	if in.AnOptUUID != nil {
		const prefix string = ",\"anOptUUID\":"
		out.RawString(prefix)
		out.String(string(*in.AnOptUUID))
	}
	{
		const prefix string = ",\"aListUUID\":"
		out.RawString(prefix)
		if in.AListUUID == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v68, v69 := range in.AListUUID {
				if v68 > 0 {
					out.RawByte(',')
				}
				out.String(string(v69))
			}
			out.RawByte(']')
		}
	}
	if len(in.AnOptListUUID) != 0 {
		const prefix string = ",\"anOptListUUID\":"
		out.RawString(prefix)
		{
			out.RawByte('[')
			for v70, v71 := range in.AnOptListUUID {
				if v70 > 0 {
					out.RawByte(',')
				}
				out.String(string(v71))
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"aStringList\":"
		out.RawString(prefix)
		if in.AStringList == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v72, v73 := range in.AStringList {
				if v72 > 0 {
					out.RawByte(',')
				}
				out.String(string(v73))
			}
			out.RawByte(']')
		}
	}
	if len(in.AnOptStringList) != 0 {
		const prefix string = ",\"anOptStringList\":"
		out.RawString(prefix)
		{
			out.RawByte('[')
			for v74, v75 := range in.AnOptStringList {
				if v74 > 0 {
					out.RawByte(',')
				}
				out.String(string(v75))
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"aUUIDList\":"
		out.RawString(prefix)
		if in.AUUIDList == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v76, v77 := range in.AUUIDList {
				if v76 > 0 {
					out.RawByte(',')
				}
				out.String(string(v77))
			}
			out.RawByte(']')
		}
	}
	if len(in.AnOptUUIDList) != 0 {
		const prefix string = ",\"anOptUUIDList\":"
		out.RawString(prefix)
		{
			out.RawByte('[')
			for v78, v79 := range in.AnOptUUIDList {
				if v78 > 0 {
					out.RawByte(',')
				}
				out.String(string(v79))
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"aTs\":"
		out.RawString(prefix)
		out.Raw((in.ATs).MarshalJSON())
	}
	if in.AnOptTs != nil {
		const prefix string = ",\"anOptTs\":"
		out.RawString(prefix)
		out.Raw((*in.AnOptTs).MarshalJSON())
	}
	{
		const prefix string = ",\"aReqDemo\":"
		out.RawString(prefix)
		out.Raw((in.AReqDemo).MarshalJSON())
	}
	if in.AnOptFruit != nil {
		const prefix string = ",\"anOptFruit\":"
		out.RawString(prefix)
		out.Raw((*in.AnOptFruit).MarshalJSON())
	}
	{
		const prefix string = ",\"aReqFruits\":"
		out.RawString(prefix)
		if in.AReqFruits == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v80, v81 := range in.AReqFruits {
				if v80 > 0 {
					out.RawByte(',')
				}
				out.Raw((v81).MarshalJSON())
			}
			out.RawByte(']')
		}
	}
	if len(in.AnOptDemos) != 0 {
		const prefix string = ",\"anOptDemos\":"
		out.RawString(prefix)
		{
			out.RawByte('[')
			for v82, v83 := range in.AnOptDemos {
				if v82 > 0 {
					out.RawByte(',')
				}
				out.Raw((v83).MarshalJSON())
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Bar_ArgWithManyQueryParams_Args) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithManyQueryParams1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Bar_ArgWithManyQueryParams_Args) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithManyQueryParams1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Bar_ArgWithManyQueryParams_Args) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithManyQueryParams1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Bar_ArgWithManyQueryParams_Args) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithManyQueryParams1(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithHeaders(in *jlexer.Lexer, out *Bar_ArgWithHeaders_Result) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "success":
			if in.IsNull() {
				in.Skip()
				out.Success = nil
			} else {
				if out.Success == nil {
					out.Success = new(BarResponse)
				}
				(*out.Success).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithHeaders(out *jwriter.Writer, in Bar_ArgWithHeaders_Result) {
	out.RawByte('{')
	first := true
	_ = first
	if in.Success != nil {
		const prefix string = ",\"success\":"
		first = false
		out.RawString(prefix[1:])
		(*in.Success).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Bar_ArgWithHeaders_Result) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithHeaders(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Bar_ArgWithHeaders_Result) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithHeaders(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Bar_ArgWithHeaders_Result) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithHeaders(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Bar_ArgWithHeaders_Result) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithHeaders(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithHeaders1(in *jlexer.Lexer, out *Bar_ArgWithHeaders_Args) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "paramsStruct":
			if in.IsNull() {
				in.Skip()
				out.ParamsStruct = nil
			} else {
				if out.ParamsStruct == nil {
					out.ParamsStruct = new(OptionalParamsStruct)
				}
				(*out.ParamsStruct).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithHeaders1(out *jwriter.Writer, in Bar_ArgWithHeaders_Args) {
	out.RawByte('{')
	first := true
	_ = first
	if in.ParamsStruct != nil {
		const prefix string = ",\"paramsStruct\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		(*in.ParamsStruct).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Bar_ArgWithHeaders_Args) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithHeaders1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Bar_ArgWithHeaders_Args) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithHeaders1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Bar_ArgWithHeaders_Args) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithHeaders1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Bar_ArgWithHeaders_Args) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgWithHeaders1(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgNotStruct(in *jlexer.Lexer, out *Bar_ArgNotStruct_Result) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "barException":
			if in.IsNull() {
				in.Skip()
				out.BarException = nil
			} else {
				if out.BarException == nil {
					out.BarException = new(BarException)
				}
				(*out.BarException).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgNotStruct(out *jwriter.Writer, in Bar_ArgNotStruct_Result) {
	out.RawByte('{')
	first := true
	_ = first
	if in.BarException != nil {
		const prefix string = ",\"barException\":"
		first = false
		out.RawString(prefix[1:])
		(*in.BarException).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Bar_ArgNotStruct_Result) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgNotStruct(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Bar_ArgNotStruct_Result) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgNotStruct(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Bar_ArgNotStruct_Result) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgNotStruct(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Bar_ArgNotStruct_Result) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgNotStruct(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgNotStruct1(in *jlexer.Lexer, out *Bar_ArgNotStruct_Args) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var RequestSet bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "request":
			out.Request = string(in.String())
			RequestSet = true
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !RequestSet {
		in.AddError(fmt.Errorf("key 'request' is required"))
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgNotStruct1(out *jwriter.Writer, in Bar_ArgNotStruct_Args) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"request\":"
		out.RawString(prefix[1:])
		out.String(string(in.Request))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Bar_ArgNotStruct_Args) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgNotStruct1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Bar_ArgNotStruct_Args) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgNotStruct1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Bar_ArgNotStruct_Args) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgNotStruct1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Bar_ArgNotStruct_Args) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBarBarArgNotStruct1(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBar5(in *jlexer.Lexer, out *BarResponseRecur) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var NodesSet bool
	var HeightSet bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "nodes":
			if in.IsNull() {
				in.Skip()
				out.Nodes = nil
			} else {
				in.Delim('[')
				if out.Nodes == nil {
					if !in.IsDelim(']') {
						out.Nodes = make([]string, 0, 4)
					} else {
						out.Nodes = []string{}
					}
				} else {
					out.Nodes = (out.Nodes)[:0]
				}
				for !in.IsDelim(']') {
					var v84 string
					v84 = string(in.String())
					out.Nodes = append(out.Nodes, v84)
					in.WantComma()
				}
				in.Delim(']')
			}
			NodesSet = true
		case "height":
			out.Height = int32(in.Int32())
			HeightSet = true
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !NodesSet {
		in.AddError(fmt.Errorf("key 'nodes' is required"))
	}
	if !HeightSet {
		in.AddError(fmt.Errorf("key 'height' is required"))
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBar5(out *jwriter.Writer, in BarResponseRecur) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"nodes\":"
		out.RawString(prefix[1:])
		if in.Nodes == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v85, v86 := range in.Nodes {
				if v85 > 0 {
					out.RawByte(',')
				}
				out.String(string(v86))
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"height\":"
		out.RawString(prefix)
		out.Int32(int32(in.Height))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v BarResponseRecur) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBar5(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v BarResponseRecur) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBar5(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *BarResponseRecur) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBar5(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *BarResponseRecur) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBar5(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBar6(in *jlexer.Lexer, out *BarResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var StringFieldSet bool
	var IntWithRangeSet bool
	var IntWithoutRangeSet bool
	var MapIntWithRangeSet bool
	var MapIntWithoutRangeSet bool
	var BinaryFieldSet bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "stringField":
			out.StringField = string(in.String())
			StringFieldSet = true
		case "intWithRange":
			out.IntWithRange = int32(in.Int32())
			IntWithRangeSet = true
		case "intWithoutRange":
			out.IntWithoutRange = int32(in.Int32())
			IntWithoutRangeSet = true
		case "mapIntWithRange":
			if in.IsNull() {
				in.Skip()
			} else {
				in.Delim('{')
				out.MapIntWithRange = make(map[UUID]int32)
				for !in.IsDelim('}') {
					key := UUID(in.String())
					in.WantColon()
					var v87 int32
					v87 = int32(in.Int32())
					(out.MapIntWithRange)[key] = v87
					in.WantComma()
				}
				in.Delim('}')
			}
			MapIntWithRangeSet = true
		case "mapIntWithoutRange":
			if in.IsNull() {
				in.Skip()
			} else {
				in.Delim('{')
				out.MapIntWithoutRange = make(map[string]int32)
				for !in.IsDelim('}') {
					key := string(in.String())
					in.WantColon()
					var v88 int32
					v88 = int32(in.Int32())
					(out.MapIntWithoutRange)[key] = v88
					in.WantComma()
				}
				in.Delim('}')
			}
			MapIntWithoutRangeSet = true
		case "binaryField":
			if in.IsNull() {
				in.Skip()
				out.BinaryField = nil
			} else {
				out.BinaryField = in.Bytes()
			}
			BinaryFieldSet = true
		case "nextResponse":
			if in.IsNull() {
				in.Skip()
				out.NextResponse = nil
			} else {
				if out.NextResponse == nil {
					out.NextResponse = new(BarResponse)
				}
				(*out.NextResponse).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !StringFieldSet {
		in.AddError(fmt.Errorf("key 'stringField' is required"))
	}
	if !IntWithRangeSet {
		in.AddError(fmt.Errorf("key 'intWithRange' is required"))
	}
	if !IntWithoutRangeSet {
		in.AddError(fmt.Errorf("key 'intWithoutRange' is required"))
	}
	if !MapIntWithRangeSet {
		in.AddError(fmt.Errorf("key 'mapIntWithRange' is required"))
	}
	if !MapIntWithoutRangeSet {
		in.AddError(fmt.Errorf("key 'mapIntWithoutRange' is required"))
	}
	if !BinaryFieldSet {
		in.AddError(fmt.Errorf("key 'binaryField' is required"))
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBar6(out *jwriter.Writer, in BarResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"stringField\":"
		out.RawString(prefix[1:])
		out.String(string(in.StringField))
	}
	{
		const prefix string = ",\"intWithRange\":"
		out.RawString(prefix)
		out.Int32(int32(in.IntWithRange))
	}
	{
		const prefix string = ",\"intWithoutRange\":"
		out.RawString(prefix)
		out.Int32(int32(in.IntWithoutRange))
	}
	{
		const prefix string = ",\"mapIntWithRange\":"
		out.RawString(prefix)
		if in.MapIntWithRange == nil && (out.Flags&jwriter.NilMapAsEmpty) == 0 {
			out.RawString(`null`)
		} else {
			out.RawByte('{')
			v90First := true
			for v90Name, v90Value := range in.MapIntWithRange {
				if v90First {
					v90First = false
				} else {
					out.RawByte(',')
				}
				out.String(string(v90Name))
				out.RawByte(':')
				out.Int32(int32(v90Value))
			}
			out.RawByte('}')
		}
	}
	{
		const prefix string = ",\"mapIntWithoutRange\":"
		out.RawString(prefix)
		if in.MapIntWithoutRange == nil && (out.Flags&jwriter.NilMapAsEmpty) == 0 {
			out.RawString(`null`)
		} else {
			out.RawByte('{')
			v91First := true
			for v91Name, v91Value := range in.MapIntWithoutRange {
				if v91First {
					v91First = false
				} else {
					out.RawByte(',')
				}
				out.String(string(v91Name))
				out.RawByte(':')
				out.Int32(int32(v91Value))
			}
			out.RawByte('}')
		}
	}
	{
		const prefix string = ",\"binaryField\":"
		out.RawString(prefix)
		out.Base64Bytes(in.BinaryField)
	}
	if in.NextResponse != nil {
		const prefix string = ",\"nextResponse\":"
		out.RawString(prefix)
		(*in.NextResponse).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v BarResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBar6(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v BarResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBar6(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *BarResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBar6(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *BarResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBar6(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBar7(in *jlexer.Lexer, out *BarRequestRecur) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var NameSet bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "name":
			out.Name = string(in.String())
			NameSet = true
		case "recur":
			if in.IsNull() {
				in.Skip()
				out.Recur = nil
			} else {
				if out.Recur == nil {
					out.Recur = new(BarRequestRecur)
				}
				(*out.Recur).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !NameSet {
		in.AddError(fmt.Errorf("key 'name' is required"))
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBar7(out *jwriter.Writer, in BarRequestRecur) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"name\":"
		out.RawString(prefix[1:])
		out.String(string(in.Name))
	}
	if in.Recur != nil {
		const prefix string = ",\"recur\":"
		out.RawString(prefix)
		(*in.Recur).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v BarRequestRecur) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBar7(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v BarRequestRecur) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBar7(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *BarRequestRecur) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBar7(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *BarRequestRecur) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBar7(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBar8(in *jlexer.Lexer, out *BarRequest) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var StringFieldSet bool
	var BoolFieldSet bool
	var BinaryFieldSet bool
	var TimestampSet bool
	var EnumFieldSet bool
	var LongFieldSet bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "stringField":
			out.StringField = string(in.String())
			StringFieldSet = true
		case "boolField":
			out.BoolField = bool(in.Bool())
			BoolFieldSet = true
		case "binaryField":
			if in.IsNull() {
				in.Skip()
				out.BinaryField = nil
			} else {
				out.BinaryField = in.Bytes()
			}
			BinaryFieldSet = true
		case "timestamp":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.Timestamp).UnmarshalJSON(data))
			}
			TimestampSet = true
		case "enumField":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.EnumField).UnmarshalJSON(data))
			}
			EnumFieldSet = true
		case "longField":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.LongField).UnmarshalJSON(data))
			}
			LongFieldSet = true
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !StringFieldSet {
		in.AddError(fmt.Errorf("key 'stringField' is required"))
	}
	if !BoolFieldSet {
		in.AddError(fmt.Errorf("key 'boolField' is required"))
	}
	if !BinaryFieldSet {
		in.AddError(fmt.Errorf("key 'binaryField' is required"))
	}
	if !TimestampSet {
		in.AddError(fmt.Errorf("key 'timestamp' is required"))
	}
	if !EnumFieldSet {
		in.AddError(fmt.Errorf("key 'enumField' is required"))
	}
	if !LongFieldSet {
		in.AddError(fmt.Errorf("key 'longField' is required"))
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBar8(out *jwriter.Writer, in BarRequest) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"stringField\":"
		out.RawString(prefix[1:])
		out.String(string(in.StringField))
	}
	{
		const prefix string = ",\"boolField\":"
		out.RawString(prefix)
		out.Bool(bool(in.BoolField))
	}
	{
		const prefix string = ",\"binaryField\":"
		out.RawString(prefix)
		out.Base64Bytes(in.BinaryField)
	}
	{
		const prefix string = ",\"timestamp\":"
		out.RawString(prefix)
		out.Raw((in.Timestamp).MarshalJSON())
	}
	{
		const prefix string = ",\"enumField\":"
		out.RawString(prefix)
		out.Raw((in.EnumField).MarshalJSON())
	}
	{
		const prefix string = ",\"longField\":"
		out.RawString(prefix)
		out.Raw((in.LongField).MarshalJSON())
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v BarRequest) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBar8(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v BarRequest) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBar8(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *BarRequest) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBar8(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *BarRequest) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBar8(l, v)
}
func easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBar9(in *jlexer.Lexer, out *BarException) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var StringFieldSet bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "stringField":
			out.StringField = string(in.String())
			StringFieldSet = true
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !StringFieldSet {
		in.AddError(fmt.Errorf("key 'stringField' is required"))
	}
}
func easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBar9(out *jwriter.Writer, in BarException) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"stringField\":"
		out.RawString(prefix[1:])
		out.String(string(in.StringField))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v BarException) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBar9(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v BarException) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson4347b5c1EncodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBar9(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *BarException) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBar9(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *BarException) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson4347b5c1DecodeGithubComUberZanzibarExamplesSelectiveGatewayBuildGenCodeClientsBarBar9(l, v)
}
