{
	"endpointId": "baz",
	"endpointType": "http",
	"handleId": "trans",
	"thriftFile": "endpoints/baz/baz.thrift",
	"thriftFileSha": "{{placeholder}}",
	"thriftMethodName": "SimpleService::trans",
	"workflowType": "tchannelClient",
	"clientId": "baz",
	"clientMethod": "Trans",
	"middlewares": [
		{
			"name": "transformRequest",
			"options": {
				"transforms": [
					{
						"from": "Arg1.Driver.Msg",
						"to": "Arg2.Rider.Msg",
						"override": true
					},
					{
						"from": "Arg1.Rider",
						"to": "Arg2.Driver",
						"override": false
					}
				]
			}
		},
		{
			"name": "transformResponse",
			"options": {
				"transforms": [
					{
						"from": "Message",
						"to": "Rider.Msg",
						"override": false
					},
					{
						"from": "Message",
						"to": "Driver.Msg",
						"override": false
					}
				]
			}
		}
	],
	"reqHeaderMap": {},
	"resHeaderMap": {},
	"testFixtures": {
		"successfulRequest": {
			"testName": "successfulRequest",
			"endpointId": "baz",
			"handleId": "trans",
			"endpointRequest": {
				"requestType": "http",
				"httpRequest": {
					"method": "POST",
					"body": {
						"bodyType": "json",
						"bodyJson": {
							"arg1": {
								"message": "msg_arg1",
								"rider": {
									"msg": "arg1_rider_msg",
									"check": 1
								},
								"driver": {
									"msg": "arg1_driver_msg",
									"check": 2
								}
							},
							"arg2": {
								"message": "msg_arg2",
								"rider": {
									"msg": "arg2_rider_msg",
									"check": 3
								},
								"driver": {
									"msg": "arg2_driver_msg",
									"check": 4
								}
							},
							"message": "message"
						}
					}
				}
			},
			"endpointReqHeaders": {},
			"endpointResponse": {
				"responseType": "http",
				"httpResponse": {
					"statusCode": 200,
					"body": {
						"bodyType": "json",
						"bodyJson": {
							"message": "tchan_return_msg",
							"rider": {
								"msg": "tchan_return_msg",
								"check": 11
							},
							"driver": {
								"msg": "tchan_return_driver",
								"check": 12
							}
						}
					}
				}
			},
			"endpointResHeaders": {},
			"clientTestFixtures": {
				"baz::call": {
					"clientId": "baz",
					"clientMethod": "trans",
					"clientRequest": {
						"requestType": "tchannel",
						"tchannelRequest": {
							"arg1": {
								"message": "msg_arg1",
								"rider": {
									"msg": "arg1_rider_msg",
									"check": 1
								},
								"driver": {
									"msg": "arg1_driver_msg",
									"check": 2
								}
							},
							"arg2": {
								"message": "msg_arg2",
								"rider": {
									"msg": "arg1_driver_msg",
									"check": 3
								},
								"driver": {
									"msg": "arg2_driver_msg",
									"check": 4
								}
							},
							"message": "message"
						}
					},
					"clientReqHeaders": {},
					"clientResponse": {
						"responseType": "tchannel",
						"tchannelResponse": {
							"message": "tchan_return_msg",
							"rider": {
								"msg": "tchan_return_rider",
								"check": 11
							},
							"driver": {
								"msg": "tchan_return_driver",
								"check": 12
							}
						}
					},
					"clientResHeaders": {}
				}
			},
			"testServiceName": "example-gateway"
		}
	}
}
