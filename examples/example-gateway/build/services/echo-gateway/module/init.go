// Code generated by zanzibar
// @generated

// Copyright (c) 2018 Uber Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

package module

import (
	bazclientgenerated "github.com/uber/zanzibar/examples/example-gateway/build/clients/baz"
	bazclientmodule "github.com/uber/zanzibar/examples/example-gateway/build/clients/baz/module"
	bounceendpointgenerated "github.com/uber/zanzibar/examples/example-gateway/build/endpoints/bounce"
	bounceendpointmodule "github.com/uber/zanzibar/examples/example-gateway/build/endpoints/bounce/module"
	echoendpointgenerated "github.com/uber/zanzibar/examples/example-gateway/build/endpoints/tchannel/echo"
	echoendpointmodule "github.com/uber/zanzibar/examples/example-gateway/build/endpoints/tchannel/echo/module"
	defaultexamplemiddlewaregenerated "github.com/uber/zanzibar/examples/example-gateway/build/middlewares/default/default_example"
	defaultexamplemiddlewaremodule "github.com/uber/zanzibar/examples/example-gateway/build/middlewares/default/default_example/module"
	defaultexample2middlewaregenerated "github.com/uber/zanzibar/examples/example-gateway/build/middlewares/default/default_example2"
	defaultexample2middlewaremodule "github.com/uber/zanzibar/examples/example-gateway/build/middlewares/default/default_example2/module"
	defaultexampletchannelmiddlewaregenerated "github.com/uber/zanzibar/examples/example-gateway/build/middlewares/default/default_example_tchannel"
	defaultexampletchannelmiddlewaremodule "github.com/uber/zanzibar/examples/example-gateway/build/middlewares/default/default_example_tchannel/module"
	echoclientstatic "github.com/uber/zanzibar/examples/example-gateway/clients/echo"

	zanzibar "github.com/uber/zanzibar/runtime"
)

// DependenciesTree contains all deps for this service.
type DependenciesTree struct {
	Client     *ClientDependenciesNodes
	Middleware *MiddlewareDependenciesNodes
	Endpoint   *EndpointDependenciesNodes
}

// ClientDependenciesNodes contains client dependencies
type ClientDependenciesNodes struct {
	Baz  bazclientgenerated.Client
	Echo echoclientstatic.Client
}

// MiddlewareDependenciesNodes contains middleware dependencies
type MiddlewareDependenciesNodes struct {
	DefaultExample         defaultexamplemiddlewaregenerated.Middleware
	DefaultExample2        defaultexample2middlewaregenerated.Middleware
	DefaultExampleTchannel defaultexampletchannelmiddlewaregenerated.Middleware
}

// EndpointDependenciesNodes contains endpoint dependencies
type EndpointDependenciesNodes struct {
	Bounce bounceendpointgenerated.Endpoint
	Echo   echoendpointgenerated.Endpoint
}

// InitializeDependencies fully initializes all dependencies in the dep tree
// for the echo-gateway service
func InitializeDependencies(
	g *zanzibar.Gateway,
) (*DependenciesTree, *Dependencies) {
	tree := &DependenciesTree{}

	initializedDefaultDependencies := &zanzibar.DefaultDependencies{
		Logger:               g.Logger,
		ContextExtractor:     g.ContextExtractor,
		ContextLogger:        g.ContextLogger,
		ContextMetrics:       zanzibar.NewContextMetrics(g.RootScope),
		Scope:                g.RootScope,
		Tracer:               g.Tracer,
		Config:               g.Config,
		ServerTChannel:       g.ServerTChannel,
		Gateway:              g,
		GRPCClientDispatcher: g.GRPCClientDispatcher,
		JSONWrapper:          g.JSONWrapper,
	}

	initializedClientDependencies := &ClientDependenciesNodes{}
	tree.Client = initializedClientDependencies
	initializedClientDependencies.Baz = bazclientgenerated.NewClient(&bazclientmodule.Dependencies{
		Default: initializedDefaultDependencies,
	})
	initializedClientDependencies.Echo = echoclientstatic.NewClient(&echoclientstatic.Dependencies{
		Default: initializedDefaultDependencies,
	})

	initializedMiddlewareDependencies := &MiddlewareDependenciesNodes{}
	tree.Middleware = initializedMiddlewareDependencies
	initializedMiddlewareDependencies.DefaultExample = defaultexamplemiddlewaregenerated.NewMiddleware(&defaultexamplemiddlewaremodule.Dependencies{
		Default: initializedDefaultDependencies,
		Client: &defaultexamplemiddlewaremodule.ClientDependencies{
			Baz: initializedClientDependencies.Baz,
		},
	})
	initializedMiddlewareDependencies.DefaultExample2 = defaultexample2middlewaregenerated.NewMiddleware(&defaultexample2middlewaremodule.Dependencies{
		Default: initializedDefaultDependencies,
		Client: &defaultexample2middlewaremodule.ClientDependencies{
			Baz: initializedClientDependencies.Baz,
		},
	})
	initializedMiddlewareDependencies.DefaultExampleTchannel = defaultexampletchannelmiddlewaregenerated.NewMiddleware(&defaultexampletchannelmiddlewaremodule.Dependencies{
		Default: initializedDefaultDependencies,
	})

	initializedEndpointDependencies := &EndpointDependenciesNodes{}
	tree.Endpoint = initializedEndpointDependencies
	initializedEndpointDependencies.Bounce = bounceendpointgenerated.NewEndpoint(&bounceendpointmodule.Dependencies{
		Default: initializedDefaultDependencies,
		Client: &bounceendpointmodule.ClientDependencies{
			Echo: initializedClientDependencies.Echo,
		},
		Middleware: &bounceendpointmodule.MiddlewareDependencies{
			DefaultExample:         initializedMiddlewareDependencies.DefaultExample,
			DefaultExample2:        initializedMiddlewareDependencies.DefaultExample2,
			DefaultExampleTchannel: initializedMiddlewareDependencies.DefaultExampleTchannel,
		},
	})
	initializedEndpointDependencies.Echo = echoendpointgenerated.NewEndpoint(&echoendpointmodule.Dependencies{
		Default: initializedDefaultDependencies,
		Middleware: &echoendpointmodule.MiddlewareDependencies{
			DefaultExample:         initializedMiddlewareDependencies.DefaultExample,
			DefaultExample2:        initializedMiddlewareDependencies.DefaultExample2,
			DefaultExampleTchannel: initializedMiddlewareDependencies.DefaultExampleTchannel,
		},
	})

	dependencies := &Dependencies{
		Default: initializedDefaultDependencies,
		Endpoint: &EndpointDependencies{
			Bounce: initializedEndpointDependencies.Bounce,
			Echo:   initializedEndpointDependencies.Echo,
		},
	}

	return tree, dependencies
}
