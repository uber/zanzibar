// Code generated by zanzibar
// @generated

// Copyright (c) 2018 Uber Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

package examplegatewayservicegeneratedmock

import (
	"github.com/golang/mock/gomock"
	module "github.com/uber/zanzibar/v2/examples/example-gateway/build/services/example-gateway/module"
	zanzibar "github.com/uber/zanzibar/v2/runtime"

	barclientgenerated "github.com/uber/zanzibar/v2/examples/example-gateway/build/clients/bar/mock-client"
	bazclientgenerated "github.com/uber/zanzibar/v2/examples/example-gateway/build/clients/baz/mock-client"
	contactsclientgenerated "github.com/uber/zanzibar/v2/examples/example-gateway/build/clients/contacts/mock-client"
	echoclientgenerated "github.com/uber/zanzibar/v2/examples/example-gateway/build/clients/echo/mock-client"
	googlenowclientgenerated "github.com/uber/zanzibar/v2/examples/example-gateway/build/clients/google-now/mock-client"
	multiclientgenerated "github.com/uber/zanzibar/v2/examples/example-gateway/build/clients/multi/mock-client"
	quuxclientgenerated "github.com/uber/zanzibar/v2/examples/example-gateway/build/clients/quux/mock-client"
	withexceptionsclientgenerated "github.com/uber/zanzibar/v2/examples/example-gateway/build/clients/withexceptions/mock-client"
	barendpointgenerated "github.com/uber/zanzibar/v2/examples/example-gateway/build/endpoints/bar"
	barendpointmodule "github.com/uber/zanzibar/v2/examples/example-gateway/build/endpoints/bar/module"
	bazendpointgenerated "github.com/uber/zanzibar/v2/examples/example-gateway/build/endpoints/baz"
	bazendpointmodule "github.com/uber/zanzibar/v2/examples/example-gateway/build/endpoints/baz/module"
	clientlessendpointgenerated "github.com/uber/zanzibar/v2/examples/example-gateway/build/endpoints/clientless"
	clientlessendpointmodule "github.com/uber/zanzibar/v2/examples/example-gateway/build/endpoints/clientless/module"
	contactsendpointgenerated "github.com/uber/zanzibar/v2/examples/example-gateway/build/endpoints/contacts"
	contactsendpointmodule "github.com/uber/zanzibar/v2/examples/example-gateway/build/endpoints/contacts/module"
	googlenowendpointgenerated "github.com/uber/zanzibar/v2/examples/example-gateway/build/endpoints/googlenow"
	googlenowendpointmodule "github.com/uber/zanzibar/v2/examples/example-gateway/build/endpoints/googlenow/module"
	multiendpointgenerated "github.com/uber/zanzibar/v2/examples/example-gateway/build/endpoints/multi"
	multiendpointmodule "github.com/uber/zanzibar/v2/examples/example-gateway/build/endpoints/multi/module"
	panicendpointgenerated "github.com/uber/zanzibar/v2/examples/example-gateway/build/endpoints/panic"
	panicendpointmodule "github.com/uber/zanzibar/v2/examples/example-gateway/build/endpoints/panic/module"
	baztchannelendpointgenerated "github.com/uber/zanzibar/v2/examples/example-gateway/build/endpoints/tchannel/baz"
	baztchannelendpointmodule "github.com/uber/zanzibar/v2/examples/example-gateway/build/endpoints/tchannel/baz/module"
	panictchannelendpointgenerated "github.com/uber/zanzibar/v2/examples/example-gateway/build/endpoints/tchannel/panic"
	panictchannelendpointmodule "github.com/uber/zanzibar/v2/examples/example-gateway/build/endpoints/tchannel/panic/module"
	quuxendpointgenerated "github.com/uber/zanzibar/v2/examples/example-gateway/build/endpoints/tchannel/quux"
	quuxendpointmodule "github.com/uber/zanzibar/v2/examples/example-gateway/build/endpoints/tchannel/quux/module"
	withexceptionsendpointgenerated "github.com/uber/zanzibar/v2/examples/example-gateway/build/endpoints/withexceptions"
	withexceptionsendpointmodule "github.com/uber/zanzibar/v2/examples/example-gateway/build/endpoints/withexceptions/module"
	defaultexamplemiddlewaregenerated "github.com/uber/zanzibar/v2/examples/example-gateway/build/middlewares/default/default_example"
	defaultexamplemiddlewaremodule "github.com/uber/zanzibar/v2/examples/example-gateway/build/middlewares/default/default_example/module"
	defaultexample2middlewaregenerated "github.com/uber/zanzibar/v2/examples/example-gateway/build/middlewares/default/default_example2"
	defaultexample2middlewaremodule "github.com/uber/zanzibar/v2/examples/example-gateway/build/middlewares/default/default_example2/module"
	defaultexampletchannelmiddlewaregenerated "github.com/uber/zanzibar/v2/examples/example-gateway/build/middlewares/default/default_example_tchannel"
	defaultexampletchannelmiddlewaremodule "github.com/uber/zanzibar/v2/examples/example-gateway/build/middlewares/default/default_example_tchannel/module"
	examplemiddlewaregenerated "github.com/uber/zanzibar/v2/examples/example-gateway/build/middlewares/example"
	examplemiddlewaremodule "github.com/uber/zanzibar/v2/examples/example-gateway/build/middlewares/example/module"
	exampletchannelmiddlewaregenerated "github.com/uber/zanzibar/v2/examples/example-gateway/build/middlewares/example_tchannel"
	exampletchannelmiddlewaremodule "github.com/uber/zanzibar/v2/examples/example-gateway/build/middlewares/example_tchannel/module"
	fixturecontactsclientgenerated "github.com/uber/zanzibar/v2/examples/example-gateway/clients/contacts/fixture"
	fixturequuxclientstatic "github.com/uber/zanzibar/v2/examples/example-gateway/clients/quux/fixture"
)

// MockClientNodes contains mock client dependencies
type MockClientNodes struct {
	Bar            *barclientgenerated.MockClient
	Baz            *bazclientgenerated.MockClient
	Contacts       *contactsclientgenerated.MockClientWithFixture
	Echo           *echoclientgenerated.MockClient
	GoogleNow      *googlenowclientgenerated.MockClient
	Multi          *multiclientgenerated.MockClient
	Quux           *quuxclientgenerated.MockIClientWithFixture
	Withexceptions *withexceptionsclientgenerated.MockClient
}

// InitializeDependenciesMock fully initializes all dependencies in the dep tree
// for the example-gateway service with leaf nodes being mocks
func InitializeDependenciesMock(
	g *zanzibar.Gateway,
	ctrl *gomock.Controller,
) (*module.DependenciesTree, *module.Dependencies, *MockClientNodes) {
	tree := &module.DependenciesTree{}

	initializedDefaultDependencies := &zanzibar.DefaultDependencies{
		ContextExtractor:     g.ContextExtractor,
		ContextMetrics:       g.ContextMetrics,
		ContextLogger:        g.ContextLogger,
		Logger:               g.Logger,
		Scope:                g.RootScope,
		Config:               g.Config,
		ServerTChannel:       g.ServerTChannel,
		Tracer:               g.Tracer,
		GRPCClientDispatcher: g.GRPCClientDispatcher,
		JSONWrapper:          g.JSONWrapper,
	}

	mockClientNodes := &MockClientNodes{
		Bar:            barclientgenerated.NewMockClient(ctrl),
		Baz:            bazclientgenerated.NewMockClient(ctrl),
		Contacts:       contactsclientgenerated.New(ctrl, fixturecontactsclientgenerated.Fixture),
		Echo:           echoclientgenerated.NewMockClient(ctrl),
		GoogleNow:      googlenowclientgenerated.NewMockClient(ctrl),
		Multi:          multiclientgenerated.NewMockClient(ctrl),
		Quux:           quuxclientgenerated.New(ctrl, fixturequuxclientstatic.Fixture),
		Withexceptions: withexceptionsclientgenerated.NewMockClient(ctrl),
	}
	initializedClientDependencies := &module.ClientDependenciesNodes{}
	tree.Client = initializedClientDependencies
	initializedClientDependencies.Bar = mockClientNodes.Bar
	initializedClientDependencies.Baz = mockClientNodes.Baz
	initializedClientDependencies.Contacts = mockClientNodes.Contacts
	initializedClientDependencies.Echo = mockClientNodes.Echo
	initializedClientDependencies.GoogleNow = mockClientNodes.GoogleNow
	initializedClientDependencies.Multi = mockClientNodes.Multi
	initializedClientDependencies.Quux = mockClientNodes.Quux
	initializedClientDependencies.Withexceptions = mockClientNodes.Withexceptions

	initializedMiddlewareDependencies := &module.MiddlewareDependenciesNodes{}
	tree.Middleware = initializedMiddlewareDependencies
	initializedMiddlewareDependencies.DefaultExample = defaultexamplemiddlewaregenerated.NewMiddleware(&defaultexamplemiddlewaremodule.Dependencies{
		Default: initializedDefaultDependencies,
		Client: &defaultexamplemiddlewaremodule.ClientDependencies{
			Baz: initializedClientDependencies.Baz,
		},
	})
	initializedMiddlewareDependencies.DefaultExample2 = defaultexample2middlewaregenerated.NewMiddleware(&defaultexample2middlewaremodule.Dependencies{
		Default: initializedDefaultDependencies,
		Client: &defaultexample2middlewaremodule.ClientDependencies{
			Baz: initializedClientDependencies.Baz,
		},
	})
	initializedMiddlewareDependencies.DefaultExampleTchannel = defaultexampletchannelmiddlewaregenerated.NewMiddleware(&defaultexampletchannelmiddlewaremodule.Dependencies{
		Default: initializedDefaultDependencies,
	})
	initializedMiddlewareDependencies.Example = examplemiddlewaregenerated.NewMiddleware(&examplemiddlewaremodule.Dependencies{
		Default: initializedDefaultDependencies,
		Client: &examplemiddlewaremodule.ClientDependencies{
			Baz:  initializedClientDependencies.Baz,
			Echo: initializedClientDependencies.Echo,
		},
	})
	initializedMiddlewareDependencies.ExampleTchannel = exampletchannelmiddlewaregenerated.NewMiddleware(&exampletchannelmiddlewaremodule.Dependencies{
		Default: initializedDefaultDependencies,
	})

	initializedEndpointDependencies := &module.EndpointDependenciesNodes{}
	tree.Endpoint = initializedEndpointDependencies
	initializedEndpointDependencies.Bar = barendpointgenerated.NewEndpoint(&barendpointmodule.Dependencies{
		Default: initializedDefaultDependencies,
		Client: &barendpointmodule.ClientDependencies{
			Bar: initializedClientDependencies.Bar,
		},
		Middleware: &barendpointmodule.MiddlewareDependencies{
			DefaultExample:         initializedMiddlewareDependencies.DefaultExample,
			DefaultExample2:        initializedMiddlewareDependencies.DefaultExample2,
			DefaultExampleTchannel: initializedMiddlewareDependencies.DefaultExampleTchannel,
			Example:                initializedMiddlewareDependencies.Example,
		},
	})
	initializedEndpointDependencies.Baz = bazendpointgenerated.NewEndpoint(&bazendpointmodule.Dependencies{
		Default: initializedDefaultDependencies,
		Client: &bazendpointmodule.ClientDependencies{
			Baz: initializedClientDependencies.Baz,
		},
		Middleware: &bazendpointmodule.MiddlewareDependencies{
			DefaultExample:         initializedMiddlewareDependencies.DefaultExample,
			DefaultExample2:        initializedMiddlewareDependencies.DefaultExample2,
			DefaultExampleTchannel: initializedMiddlewareDependencies.DefaultExampleTchannel,
		},
	})
	initializedEndpointDependencies.Clientless = clientlessendpointgenerated.NewEndpoint(&clientlessendpointmodule.Dependencies{
		Default: initializedDefaultDependencies,
		Middleware: &clientlessendpointmodule.MiddlewareDependencies{
			DefaultExample:         initializedMiddlewareDependencies.DefaultExample,
			DefaultExample2:        initializedMiddlewareDependencies.DefaultExample2,
			DefaultExampleTchannel: initializedMiddlewareDependencies.DefaultExampleTchannel,
		},
	})
	initializedEndpointDependencies.Contacts = contactsendpointgenerated.NewEndpoint(&contactsendpointmodule.Dependencies{
		Default: initializedDefaultDependencies,
		Client: &contactsendpointmodule.ClientDependencies{
			Contacts: initializedClientDependencies.Contacts,
		},
		Middleware: &contactsendpointmodule.MiddlewareDependencies{
			DefaultExample:         initializedMiddlewareDependencies.DefaultExample,
			DefaultExample2:        initializedMiddlewareDependencies.DefaultExample2,
			DefaultExampleTchannel: initializedMiddlewareDependencies.DefaultExampleTchannel,
		},
	})
	initializedEndpointDependencies.Googlenow = googlenowendpointgenerated.NewEndpoint(&googlenowendpointmodule.Dependencies{
		Default: initializedDefaultDependencies,
		Client: &googlenowendpointmodule.ClientDependencies{
			GoogleNow: initializedClientDependencies.GoogleNow,
		},
		Middleware: &googlenowendpointmodule.MiddlewareDependencies{
			DefaultExample:         initializedMiddlewareDependencies.DefaultExample,
			DefaultExample2:        initializedMiddlewareDependencies.DefaultExample2,
			DefaultExampleTchannel: initializedMiddlewareDependencies.DefaultExampleTchannel,
		},
	})
	initializedEndpointDependencies.Multi = multiendpointgenerated.NewEndpoint(&multiendpointmodule.Dependencies{
		Default: initializedDefaultDependencies,
		Client: &multiendpointmodule.ClientDependencies{
			Multi: initializedClientDependencies.Multi,
		},
		Middleware: &multiendpointmodule.MiddlewareDependencies{
			DefaultExample:         initializedMiddlewareDependencies.DefaultExample,
			DefaultExample2:        initializedMiddlewareDependencies.DefaultExample2,
			DefaultExampleTchannel: initializedMiddlewareDependencies.DefaultExampleTchannel,
		},
	})
	initializedEndpointDependencies.Panic = panicendpointgenerated.NewEndpoint(&panicendpointmodule.Dependencies{
		Default: initializedDefaultDependencies,
		Client: &panicendpointmodule.ClientDependencies{
			Multi: initializedClientDependencies.Multi,
		},
		Middleware: &panicendpointmodule.MiddlewareDependencies{
			DefaultExample:         initializedMiddlewareDependencies.DefaultExample,
			DefaultExample2:        initializedMiddlewareDependencies.DefaultExample2,
			DefaultExampleTchannel: initializedMiddlewareDependencies.DefaultExampleTchannel,
		},
	})
	initializedEndpointDependencies.BazTChannel = baztchannelendpointgenerated.NewEndpoint(&baztchannelendpointmodule.Dependencies{
		Default: initializedDefaultDependencies,
		Client: &baztchannelendpointmodule.ClientDependencies{
			Baz:  initializedClientDependencies.Baz,
			Quux: initializedClientDependencies.Quux,
		},
		Middleware: &baztchannelendpointmodule.MiddlewareDependencies{
			DefaultExample:         initializedMiddlewareDependencies.DefaultExample,
			DefaultExample2:        initializedMiddlewareDependencies.DefaultExample2,
			DefaultExampleTchannel: initializedMiddlewareDependencies.DefaultExampleTchannel,
			ExampleTchannel:        initializedMiddlewareDependencies.ExampleTchannel,
		},
	})
	initializedEndpointDependencies.PanicTChannel = panictchannelendpointgenerated.NewEndpoint(&panictchannelendpointmodule.Dependencies{
		Default: initializedDefaultDependencies,
		Client: &panictchannelendpointmodule.ClientDependencies{
			Baz: initializedClientDependencies.Baz,
		},
		Middleware: &panictchannelendpointmodule.MiddlewareDependencies{
			DefaultExample:         initializedMiddlewareDependencies.DefaultExample,
			DefaultExample2:        initializedMiddlewareDependencies.DefaultExample2,
			DefaultExampleTchannel: initializedMiddlewareDependencies.DefaultExampleTchannel,
		},
	})
	initializedEndpointDependencies.Quux = quuxendpointgenerated.NewEndpoint(&quuxendpointmodule.Dependencies{
		Default: initializedDefaultDependencies,
		Client: &quuxendpointmodule.ClientDependencies{
			Quux: initializedClientDependencies.Quux,
		},
		Middleware: &quuxendpointmodule.MiddlewareDependencies{
			DefaultExample:         initializedMiddlewareDependencies.DefaultExample,
			DefaultExample2:        initializedMiddlewareDependencies.DefaultExample2,
			DefaultExampleTchannel: initializedMiddlewareDependencies.DefaultExampleTchannel,
		},
	})
	initializedEndpointDependencies.Withexceptions = withexceptionsendpointgenerated.NewEndpoint(&withexceptionsendpointmodule.Dependencies{
		Default: initializedDefaultDependencies,
		Client: &withexceptionsendpointmodule.ClientDependencies{
			Withexceptions: initializedClientDependencies.Withexceptions,
		},
		Middleware: &withexceptionsendpointmodule.MiddlewareDependencies{
			DefaultExample:         initializedMiddlewareDependencies.DefaultExample,
			DefaultExample2:        initializedMiddlewareDependencies.DefaultExample2,
			DefaultExampleTchannel: initializedMiddlewareDependencies.DefaultExampleTchannel,
		},
	})

	dependencies := &module.Dependencies{
		Default: initializedDefaultDependencies,
		Endpoint: &module.EndpointDependencies{
			Bar:            initializedEndpointDependencies.Bar,
			Baz:            initializedEndpointDependencies.Baz,
			Clientless:     initializedEndpointDependencies.Clientless,
			Contacts:       initializedEndpointDependencies.Contacts,
			Googlenow:      initializedEndpointDependencies.Googlenow,
			Multi:          initializedEndpointDependencies.Multi,
			Panic:          initializedEndpointDependencies.Panic,
			BazTChannel:    initializedEndpointDependencies.BazTChannel,
			PanicTChannel:  initializedEndpointDependencies.PanicTChannel,
			Quux:           initializedEndpointDependencies.Quux,
			Withexceptions: initializedEndpointDependencies.Withexceptions,
		},
	}

	return tree, dependencies, mockClientNodes
}
