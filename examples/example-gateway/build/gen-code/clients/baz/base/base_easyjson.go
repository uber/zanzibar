// Code generated by zanzibar
// @generated
// Checksum : aqTSnOvuyIkI0v302hUAdg==
// Code generated by easyjson for marshaling/unmarshaling. DO NOT EDIT.

package base

import (
	json "encoding/json"
	fmt "fmt"

	easyjson "github.com/mailru/easyjson"
	jlexer "github.com/mailru/easyjson/jlexer"
	jwriter "github.com/mailru/easyjson/jwriter"
)

// suppress unused package warning
var (
	_ *json.RawMessage
	_ *jlexer.Lexer
	_ *jwriter.Writer
	_ easyjson.Marshaler
)

func easyjson25720c23DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBase(in *jlexer.Lexer, out *Wrapped) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var N1Set bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "n1":
			if in.IsNull() {
				in.Skip()
				out.N1 = nil
			} else {
				if out.N1 == nil {
					out.N1 = new(NestHeaders)
				}
				(*out.N1).UnmarshalEasyJSON(in)
			}
			N1Set = true
		case "n2":
			if in.IsNull() {
				in.Skip()
				out.N2 = nil
			} else {
				if out.N2 == nil {
					out.N2 = new(NestHeaders)
				}
				(*out.N2).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !N1Set {
		in.AddError(fmt.Errorf("key 'n1' is required"))
	}
}
func easyjson25720c23EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBase(out *jwriter.Writer, in Wrapped) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"n1\":"
		out.RawString(prefix[1:])
		if in.N1 == nil {
			out.RawString("null")
		} else {
			(*in.N1).MarshalEasyJSON(out)
		}
	}
	if in.N2 != nil {
		const prefix string = ",\"n2\":"
		out.RawString(prefix)
		(*in.N2).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Wrapped) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25720c23EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBase(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Wrapped) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25720c23EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBase(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Wrapped) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25720c23DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBase(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Wrapped) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25720c23DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBase(l, v)
}
func easyjson25720c23DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBase1(in *jlexer.Lexer, out *TransStruct) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var MessageSet bool
	var RiderSet bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "message":
			out.Message = string(in.String())
			MessageSet = true
		case "driver":
			if in.IsNull() {
				in.Skip()
				out.Driver = nil
			} else {
				if out.Driver == nil {
					out.Driver = new(NestedStruct)
				}
				(*out.Driver).UnmarshalEasyJSON(in)
			}
		case "rider":
			if in.IsNull() {
				in.Skip()
				out.Rider = nil
			} else {
				if out.Rider == nil {
					out.Rider = new(NestedStruct)
				}
				(*out.Rider).UnmarshalEasyJSON(in)
			}
			RiderSet = true
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !MessageSet {
		in.AddError(fmt.Errorf("key 'message' is required"))
	}
	if !RiderSet {
		in.AddError(fmt.Errorf("key 'rider' is required"))
	}
}
func easyjson25720c23EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBase1(out *jwriter.Writer, in TransStruct) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"message\":"
		out.RawString(prefix[1:])
		out.String(string(in.Message))
	}
	if in.Driver != nil {
		const prefix string = ",\"driver\":"
		out.RawString(prefix)
		(*in.Driver).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"rider\":"
		out.RawString(prefix)
		if in.Rider == nil {
			out.RawString("null")
		} else {
			(*in.Rider).MarshalEasyJSON(out)
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v TransStruct) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25720c23EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBase1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v TransStruct) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25720c23EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBase1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *TransStruct) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25720c23DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBase1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *TransStruct) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25720c23DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBase1(l, v)
}
func easyjson25720c23DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBase2(in *jlexer.Lexer, out *TransHeaders) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var W1Set bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "w1":
			if in.IsNull() {
				in.Skip()
				out.W1 = nil
			} else {
				if out.W1 == nil {
					out.W1 = new(Wrapped)
				}
				(*out.W1).UnmarshalEasyJSON(in)
			}
			W1Set = true
		case "w2":
			if in.IsNull() {
				in.Skip()
				out.W2 = nil
			} else {
				if out.W2 == nil {
					out.W2 = new(Wrapped)
				}
				(*out.W2).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !W1Set {
		in.AddError(fmt.Errorf("key 'w1' is required"))
	}
}
func easyjson25720c23EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBase2(out *jwriter.Writer, in TransHeaders) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"w1\":"
		out.RawString(prefix[1:])
		if in.W1 == nil {
			out.RawString("null")
		} else {
			(*in.W1).MarshalEasyJSON(out)
		}
	}
	if in.W2 != nil {
		const prefix string = ",\"w2\":"
		out.RawString(prefix)
		(*in.W2).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v TransHeaders) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25720c23EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBase2(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v TransHeaders) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25720c23EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBase2(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *TransHeaders) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25720c23DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBase2(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *TransHeaders) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25720c23DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBase2(l, v)
}
func easyjson25720c23DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBase3(in *jlexer.Lexer, out *ServerErr) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var MessageSet bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "message":
			out.Message = string(in.String())
			MessageSet = true
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !MessageSet {
		in.AddError(fmt.Errorf("key 'message' is required"))
	}
}
func easyjson25720c23EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBase3(out *jwriter.Writer, in ServerErr) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"message\":"
		out.RawString(prefix[1:])
		out.String(string(in.Message))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ServerErr) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25720c23EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBase3(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ServerErr) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25720c23EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBase3(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ServerErr) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25720c23DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBase3(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ServerErr) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25720c23DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBase3(l, v)
}
func easyjson25720c23DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBase4(in *jlexer.Lexer, out *NestedStruct) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var MsgSet bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "msg":
			out.Msg = string(in.String())
			MsgSet = true
		case "check":
			if in.IsNull() {
				in.Skip()
				out.Check = nil
			} else {
				if out.Check == nil {
					out.Check = new(int32)
				}
				*out.Check = int32(in.Int32())
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !MsgSet {
		in.AddError(fmt.Errorf("key 'msg' is required"))
	}
}
func easyjson25720c23EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBase4(out *jwriter.Writer, in NestedStruct) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"msg\":"
		out.RawString(prefix[1:])
		out.String(string(in.Msg))
	}
	if in.Check != nil {
		const prefix string = ",\"check\":"
		out.RawString(prefix)
		out.Int32(int32(*in.Check))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v NestedStruct) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25720c23EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBase4(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v NestedStruct) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25720c23EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBase4(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *NestedStruct) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25720c23DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBase4(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *NestedStruct) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25720c23DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBase4(l, v)
}
func easyjson25720c23DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBase5(in *jlexer.Lexer, out *NestHeaders) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var UUIDSet bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "UUID":
			out.UUID = string(in.String())
			UUIDSet = true
		case "token":
			if in.IsNull() {
				in.Skip()
				out.Token = nil
			} else {
				if out.Token == nil {
					out.Token = new(string)
				}
				*out.Token = string(in.String())
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !UUIDSet {
		in.AddError(fmt.Errorf("key 'UUID' is required"))
	}
}
func easyjson25720c23EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBase5(out *jwriter.Writer, in NestHeaders) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"UUID\":"
		out.RawString(prefix[1:])
		out.String(string(in.UUID))
	}
	if in.Token != nil {
		const prefix string = ",\"token\":"
		out.RawString(prefix)
		out.String(string(*in.Token))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v NestHeaders) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25720c23EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBase5(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v NestHeaders) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25720c23EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBase5(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *NestHeaders) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25720c23DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBase5(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *NestHeaders) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25720c23DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBase5(l, v)
}
func easyjson25720c23DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBase6(in *jlexer.Lexer, out *BazResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var MessageSet bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "message":
			out.Message = string(in.String())
			MessageSet = true
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !MessageSet {
		in.AddError(fmt.Errorf("key 'message' is required"))
	}
}
func easyjson25720c23EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBase6(out *jwriter.Writer, in BazResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"message\":"
		out.RawString(prefix[1:])
		out.String(string(in.Message))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v BazResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson25720c23EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBase6(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v BazResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson25720c23EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBase6(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *BazResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson25720c23DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBase6(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *BazResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson25720c23DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBase6(l, v)
}
