// Code generated by zanzibar
// @generated
// Checksum : uBvUPPLq5qDUscypL65fHg==
// Code generated by easyjson for marshaling/unmarshaling. DO NOT EDIT.

package baz

import (
	json "encoding/json"
	fmt "fmt"

	easyjson "github.com/mailru/easyjson"
	jlexer "github.com/mailru/easyjson/jlexer"
	jwriter "github.com/mailru/easyjson/jwriter"
	base "github.com/uber/zanzibar/examples/example-gateway/build/gen-code/clients/baz/base"
)

// suppress unused package warning
var (
	_ *json.RawMessage
	_ *jlexer.Lexer
	_ *jwriter.Writer
	_ easyjson.Marshaler
)

func easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazMapBazResponseStringItem(in *jlexer.Lexer, out *_Map_BazResponse_String_Item_Zapper) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "Key":
			if in.IsNull() {
				in.Skip()
				out.Key = nil
			} else {
				if out.Key == nil {
					out.Key = new(base.BazResponse)
				}
				(*out.Key).UnmarshalEasyJSON(in)
			}
		case "Value":
			out.Value = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazMapBazResponseStringItem(out *jwriter.Writer, in _Map_BazResponse_String_Item_Zapper) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"Key\":"
		out.RawString(prefix[1:])
		if in.Key == nil {
			out.RawString("null")
		} else {
			(*in.Key).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"Value\":"
		out.RawString(prefix)
		out.String(string(in.Value))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v _Map_BazResponse_String_Item_Zapper) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazMapBazResponseStringItem(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v _Map_BazResponse_String_Item_Zapper) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazMapBazResponseStringItem(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *_Map_BazResponse_String_Item_Zapper) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazMapBazResponseStringItem(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *_Map_BazResponse_String_Item_Zapper) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazMapBazResponseStringItem(l, v)
}
func easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBaz(in *jlexer.Lexer, out *TransHeaderType) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var B1Set bool
	var I2Set bool
	var U4Set bool
	var S6Set bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "b1":
			out.B1 = bool(in.Bool())
			B1Set = true
		case "i1":
			if in.IsNull() {
				in.Skip()
				out.I1 = nil
			} else {
				if out.I1 == nil {
					out.I1 = new(int32)
				}
				*out.I1 = int32(in.Int32())
			}
		case "i2":
			out.I2 = int64(in.Int64())
			I2Set = true
		case "f3":
			if in.IsNull() {
				in.Skip()
				out.F3 = nil
			} else {
				if out.F3 == nil {
					out.F3 = new(float64)
				}
				*out.F3 = float64(in.Float64())
			}
		case "u4":
			out.U4 = UUID(in.String())
			U4Set = true
		case "u5":
			if in.IsNull() {
				in.Skip()
				out.U5 = nil
			} else {
				if out.U5 == nil {
					out.U5 = new(UUID)
				}
				*out.U5 = UUID(in.String())
			}
		case "s6":
			out.S6 = string(in.String())
			S6Set = true
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !B1Set {
		in.AddError(fmt.Errorf("key 'b1' is required"))
	}
	if !I2Set {
		in.AddError(fmt.Errorf("key 'i2' is required"))
	}
	if !U4Set {
		in.AddError(fmt.Errorf("key 'u4' is required"))
	}
	if !S6Set {
		in.AddError(fmt.Errorf("key 's6' is required"))
	}
}
func easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBaz(out *jwriter.Writer, in TransHeaderType) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"b1\":"
		out.RawString(prefix[1:])
		out.Bool(bool(in.B1))
	}
	if in.I1 != nil {
		const prefix string = ",\"i1\":"
		out.RawString(prefix)
		out.Int32(int32(*in.I1))
	}
	{
		const prefix string = ",\"i2\":"
		out.RawString(prefix)
		out.Int64(int64(in.I2))
	}
	if in.F3 != nil {
		const prefix string = ",\"f3\":"
		out.RawString(prefix)
		out.Float64(float64(*in.F3))
	}
	{
		const prefix string = ",\"u4\":"
		out.RawString(prefix)
		out.String(string(in.U4))
	}
	if in.U5 != nil {
		const prefix string = ",\"u5\":"
		out.RawString(prefix)
		out.String(string(*in.U5))
	}
	{
		const prefix string = ",\"s6\":"
		out.RawString(prefix)
		out.String(string(in.S6))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v TransHeaderType) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBaz(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v TransHeaderType) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBaz(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *TransHeaderType) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBaz(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *TransHeaderType) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBaz(l, v)
}
func easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceUrlTest(in *jlexer.Lexer, out *SimpleService_UrlTest_Result) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceUrlTest(out *jwriter.Writer, in SimpleService_UrlTest_Result) {
	out.RawByte('{')
	first := true
	_ = first
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SimpleService_UrlTest_Result) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceUrlTest(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SimpleService_UrlTest_Result) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceUrlTest(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SimpleService_UrlTest_Result) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceUrlTest(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SimpleService_UrlTest_Result) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceUrlTest(l, v)
}
func easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceUrlTest1(in *jlexer.Lexer, out *SimpleService_UrlTest_Args) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceUrlTest1(out *jwriter.Writer, in SimpleService_UrlTest_Args) {
	out.RawByte('{')
	first := true
	_ = first
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SimpleService_UrlTest_Args) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceUrlTest1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SimpleService_UrlTest_Args) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceUrlTest1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SimpleService_UrlTest_Args) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceUrlTest1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SimpleService_UrlTest_Args) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceUrlTest1(l, v)
}
func easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceTrans(in *jlexer.Lexer, out *SimpleService_Trans_Result) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "success":
			if in.IsNull() {
				in.Skip()
				out.Success = nil
			} else {
				if out.Success == nil {
					out.Success = new(base.TransStruct)
				}
				(*out.Success).UnmarshalEasyJSON(in)
			}
		case "authErr":
			if in.IsNull() {
				in.Skip()
				out.AuthErr = nil
			} else {
				if out.AuthErr == nil {
					out.AuthErr = new(AuthErr)
				}
				(*out.AuthErr).UnmarshalEasyJSON(in)
			}
		case "otherAuthErr":
			if in.IsNull() {
				in.Skip()
				out.OtherAuthErr = nil
			} else {
				if out.OtherAuthErr == nil {
					out.OtherAuthErr = new(OtherAuthErr)
				}
				(*out.OtherAuthErr).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceTrans(out *jwriter.Writer, in SimpleService_Trans_Result) {
	out.RawByte('{')
	first := true
	_ = first
	if in.Success != nil {
		const prefix string = ",\"success\":"
		first = false
		out.RawString(prefix[1:])
		(*in.Success).MarshalEasyJSON(out)
	}
	if in.AuthErr != nil {
		const prefix string = ",\"authErr\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		(*in.AuthErr).MarshalEasyJSON(out)
	}
	if in.OtherAuthErr != nil {
		const prefix string = ",\"otherAuthErr\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		(*in.OtherAuthErr).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SimpleService_Trans_Result) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceTrans(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SimpleService_Trans_Result) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceTrans(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SimpleService_Trans_Result) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceTrans(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SimpleService_Trans_Result) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceTrans(l, v)
}
func easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceTrans1(in *jlexer.Lexer, out *SimpleService_Trans_Args) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var Arg1Set bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "arg1":
			if in.IsNull() {
				in.Skip()
				out.Arg1 = nil
			} else {
				if out.Arg1 == nil {
					out.Arg1 = new(base.TransStruct)
				}
				(*out.Arg1).UnmarshalEasyJSON(in)
			}
			Arg1Set = true
		case "arg2":
			if in.IsNull() {
				in.Skip()
				out.Arg2 = nil
			} else {
				if out.Arg2 == nil {
					out.Arg2 = new(base.TransStruct)
				}
				(*out.Arg2).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !Arg1Set {
		in.AddError(fmt.Errorf("key 'arg1' is required"))
	}
}
func easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceTrans1(out *jwriter.Writer, in SimpleService_Trans_Args) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"arg1\":"
		out.RawString(prefix[1:])
		if in.Arg1 == nil {
			out.RawString("null")
		} else {
			(*in.Arg1).MarshalEasyJSON(out)
		}
	}
	if in.Arg2 != nil {
		const prefix string = ",\"arg2\":"
		out.RawString(prefix)
		(*in.Arg2).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SimpleService_Trans_Args) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceTrans1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SimpleService_Trans_Args) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceTrans1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SimpleService_Trans_Args) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceTrans1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SimpleService_Trans_Args) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceTrans1(l, v)
}
func easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceTransHeaders(in *jlexer.Lexer, out *SimpleService_TransHeaders_Result) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "success":
			if in.IsNull() {
				in.Skip()
				out.Success = nil
			} else {
				if out.Success == nil {
					out.Success = new(base.TransHeaders)
				}
				(*out.Success).UnmarshalEasyJSON(in)
			}
		case "authErr":
			if in.IsNull() {
				in.Skip()
				out.AuthErr = nil
			} else {
				if out.AuthErr == nil {
					out.AuthErr = new(AuthErr)
				}
				(*out.AuthErr).UnmarshalEasyJSON(in)
			}
		case "otherAuthErr":
			if in.IsNull() {
				in.Skip()
				out.OtherAuthErr = nil
			} else {
				if out.OtherAuthErr == nil {
					out.OtherAuthErr = new(OtherAuthErr)
				}
				(*out.OtherAuthErr).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceTransHeaders(out *jwriter.Writer, in SimpleService_TransHeaders_Result) {
	out.RawByte('{')
	first := true
	_ = first
	if in.Success != nil {
		const prefix string = ",\"success\":"
		first = false
		out.RawString(prefix[1:])
		(*in.Success).MarshalEasyJSON(out)
	}
	if in.AuthErr != nil {
		const prefix string = ",\"authErr\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		(*in.AuthErr).MarshalEasyJSON(out)
	}
	if in.OtherAuthErr != nil {
		const prefix string = ",\"otherAuthErr\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		(*in.OtherAuthErr).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SimpleService_TransHeaders_Result) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceTransHeaders(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SimpleService_TransHeaders_Result) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceTransHeaders(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SimpleService_TransHeaders_Result) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceTransHeaders(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SimpleService_TransHeaders_Result) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceTransHeaders(l, v)
}
func easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceTransHeaders1(in *jlexer.Lexer, out *SimpleService_TransHeaders_Args) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var ReqSet bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "req":
			if in.IsNull() {
				in.Skip()
				out.Req = nil
			} else {
				if out.Req == nil {
					out.Req = new(base.TransHeaders)
				}
				(*out.Req).UnmarshalEasyJSON(in)
			}
			ReqSet = true
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !ReqSet {
		in.AddError(fmt.Errorf("key 'req' is required"))
	}
}
func easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceTransHeaders1(out *jwriter.Writer, in SimpleService_TransHeaders_Args) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"req\":"
		out.RawString(prefix[1:])
		if in.Req == nil {
			out.RawString("null")
		} else {
			(*in.Req).MarshalEasyJSON(out)
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SimpleService_TransHeaders_Args) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceTransHeaders1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SimpleService_TransHeaders_Args) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceTransHeaders1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SimpleService_TransHeaders_Args) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceTransHeaders1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SimpleService_TransHeaders_Args) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceTransHeaders1(l, v)
}
func easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceTransHeadersType(in *jlexer.Lexer, out *SimpleService_TransHeadersType_Result) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "success":
			if in.IsNull() {
				in.Skip()
				out.Success = nil
			} else {
				if out.Success == nil {
					out.Success = new(TransHeaderType)
				}
				(*out.Success).UnmarshalEasyJSON(in)
			}
		case "authErr":
			if in.IsNull() {
				in.Skip()
				out.AuthErr = nil
			} else {
				if out.AuthErr == nil {
					out.AuthErr = new(AuthErr)
				}
				(*out.AuthErr).UnmarshalEasyJSON(in)
			}
		case "otherAuthErr":
			if in.IsNull() {
				in.Skip()
				out.OtherAuthErr = nil
			} else {
				if out.OtherAuthErr == nil {
					out.OtherAuthErr = new(OtherAuthErr)
				}
				(*out.OtherAuthErr).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceTransHeadersType(out *jwriter.Writer, in SimpleService_TransHeadersType_Result) {
	out.RawByte('{')
	first := true
	_ = first
	if in.Success != nil {
		const prefix string = ",\"success\":"
		first = false
		out.RawString(prefix[1:])
		(*in.Success).MarshalEasyJSON(out)
	}
	if in.AuthErr != nil {
		const prefix string = ",\"authErr\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		(*in.AuthErr).MarshalEasyJSON(out)
	}
	if in.OtherAuthErr != nil {
		const prefix string = ",\"otherAuthErr\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		(*in.OtherAuthErr).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SimpleService_TransHeadersType_Result) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceTransHeadersType(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SimpleService_TransHeadersType_Result) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceTransHeadersType(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SimpleService_TransHeadersType_Result) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceTransHeadersType(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SimpleService_TransHeadersType_Result) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceTransHeadersType(l, v)
}
func easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceTransHeadersType1(in *jlexer.Lexer, out *SimpleService_TransHeadersType_Args) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var ReqSet bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "req":
			if in.IsNull() {
				in.Skip()
				out.Req = nil
			} else {
				if out.Req == nil {
					out.Req = new(TransHeaderType)
				}
				(*out.Req).UnmarshalEasyJSON(in)
			}
			ReqSet = true
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !ReqSet {
		in.AddError(fmt.Errorf("key 'req' is required"))
	}
}
func easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceTransHeadersType1(out *jwriter.Writer, in SimpleService_TransHeadersType_Args) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"req\":"
		out.RawString(prefix[1:])
		if in.Req == nil {
			out.RawString("null")
		} else {
			(*in.Req).MarshalEasyJSON(out)
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SimpleService_TransHeadersType_Args) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceTransHeadersType1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SimpleService_TransHeadersType_Args) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceTransHeadersType1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SimpleService_TransHeadersType_Args) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceTransHeadersType1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SimpleService_TransHeadersType_Args) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceTransHeadersType1(l, v)
}
func easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceTransHeadersNoReq(in *jlexer.Lexer, out *SimpleService_TransHeadersNoReq_Result) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "success":
			if in.IsNull() {
				in.Skip()
				out.Success = nil
			} else {
				if out.Success == nil {
					out.Success = new(base.TransHeaders)
				}
				(*out.Success).UnmarshalEasyJSON(in)
			}
		case "authErr":
			if in.IsNull() {
				in.Skip()
				out.AuthErr = nil
			} else {
				if out.AuthErr == nil {
					out.AuthErr = new(AuthErr)
				}
				(*out.AuthErr).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceTransHeadersNoReq(out *jwriter.Writer, in SimpleService_TransHeadersNoReq_Result) {
	out.RawByte('{')
	first := true
	_ = first
	if in.Success != nil {
		const prefix string = ",\"success\":"
		first = false
		out.RawString(prefix[1:])
		(*in.Success).MarshalEasyJSON(out)
	}
	if in.AuthErr != nil {
		const prefix string = ",\"authErr\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		(*in.AuthErr).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SimpleService_TransHeadersNoReq_Result) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceTransHeadersNoReq(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SimpleService_TransHeadersNoReq_Result) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceTransHeadersNoReq(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SimpleService_TransHeadersNoReq_Result) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceTransHeadersNoReq(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SimpleService_TransHeadersNoReq_Result) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceTransHeadersNoReq(l, v)
}
func easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceTransHeadersNoReq1(in *jlexer.Lexer, out *SimpleService_TransHeadersNoReq_Args) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var ReqSet bool
	var I3Set bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "req":
			if in.IsNull() {
				in.Skip()
				out.Req = nil
			} else {
				if out.Req == nil {
					out.Req = new(base.NestedStruct)
				}
				(*out.Req).UnmarshalEasyJSON(in)
			}
			ReqSet = true
		case "s2":
			if in.IsNull() {
				in.Skip()
				out.S2 = nil
			} else {
				if out.S2 == nil {
					out.S2 = new(string)
				}
				*out.S2 = string(in.String())
			}
		case "i3":
			out.I3 = int32(in.Int32())
			I3Set = true
		case "b4":
			if in.IsNull() {
				in.Skip()
				out.B4 = nil
			} else {
				if out.B4 == nil {
					out.B4 = new(bool)
				}
				*out.B4 = bool(in.Bool())
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !ReqSet {
		in.AddError(fmt.Errorf("key 'req' is required"))
	}
	if !I3Set {
		in.AddError(fmt.Errorf("key 'i3' is required"))
	}
}
func easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceTransHeadersNoReq1(out *jwriter.Writer, in SimpleService_TransHeadersNoReq_Args) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"req\":"
		out.RawString(prefix[1:])
		if in.Req == nil {
			out.RawString("null")
		} else {
			(*in.Req).MarshalEasyJSON(out)
		}
	}
	if in.S2 != nil {
		const prefix string = ",\"s2\":"
		out.RawString(prefix)
		out.String(string(*in.S2))
	}
	{
		const prefix string = ",\"i3\":"
		out.RawString(prefix)
		out.Int32(int32(in.I3))
	}
	if in.B4 != nil {
		const prefix string = ",\"b4\":"
		out.RawString(prefix)
		out.Bool(bool(*in.B4))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SimpleService_TransHeadersNoReq_Args) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceTransHeadersNoReq1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SimpleService_TransHeadersNoReq_Args) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceTransHeadersNoReq1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SimpleService_TransHeadersNoReq_Args) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceTransHeadersNoReq1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SimpleService_TransHeadersNoReq_Args) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceTransHeadersNoReq1(l, v)
}
func easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceTestUuid(in *jlexer.Lexer, out *SimpleService_TestUuid_Result) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceTestUuid(out *jwriter.Writer, in SimpleService_TestUuid_Result) {
	out.RawByte('{')
	first := true
	_ = first
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SimpleService_TestUuid_Result) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceTestUuid(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SimpleService_TestUuid_Result) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceTestUuid(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SimpleService_TestUuid_Result) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceTestUuid(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SimpleService_TestUuid_Result) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceTestUuid(l, v)
}
func easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceTestUuid1(in *jlexer.Lexer, out *SimpleService_TestUuid_Args) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceTestUuid1(out *jwriter.Writer, in SimpleService_TestUuid_Args) {
	out.RawByte('{')
	first := true
	_ = first
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SimpleService_TestUuid_Args) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceTestUuid1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SimpleService_TestUuid_Args) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceTestUuid1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SimpleService_TestUuid_Args) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceTestUuid1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SimpleService_TestUuid_Args) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceTestUuid1(l, v)
}
func easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceSillyNoop(in *jlexer.Lexer, out *SimpleService_SillyNoop_Result) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "authErr":
			if in.IsNull() {
				in.Skip()
				out.AuthErr = nil
			} else {
				if out.AuthErr == nil {
					out.AuthErr = new(AuthErr)
				}
				(*out.AuthErr).UnmarshalEasyJSON(in)
			}
		case "serverErr":
			if in.IsNull() {
				in.Skip()
				out.ServerErr = nil
			} else {
				if out.ServerErr == nil {
					out.ServerErr = new(base.ServerErr)
				}
				(*out.ServerErr).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceSillyNoop(out *jwriter.Writer, in SimpleService_SillyNoop_Result) {
	out.RawByte('{')
	first := true
	_ = first
	if in.AuthErr != nil {
		const prefix string = ",\"authErr\":"
		first = false
		out.RawString(prefix[1:])
		(*in.AuthErr).MarshalEasyJSON(out)
	}
	if in.ServerErr != nil {
		const prefix string = ",\"serverErr\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		(*in.ServerErr).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SimpleService_SillyNoop_Result) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceSillyNoop(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SimpleService_SillyNoop_Result) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceSillyNoop(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SimpleService_SillyNoop_Result) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceSillyNoop(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SimpleService_SillyNoop_Result) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceSillyNoop(l, v)
}
func easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceSillyNoop1(in *jlexer.Lexer, out *SimpleService_SillyNoop_Args) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceSillyNoop1(out *jwriter.Writer, in SimpleService_SillyNoop_Args) {
	out.RawByte('{')
	first := true
	_ = first
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SimpleService_SillyNoop_Args) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceSillyNoop1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SimpleService_SillyNoop_Args) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceSillyNoop1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SimpleService_SillyNoop_Args) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceSillyNoop1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SimpleService_SillyNoop_Args) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceSillyNoop1(l, v)
}
func easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServicePing(in *jlexer.Lexer, out *SimpleService_Ping_Result) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "success":
			if in.IsNull() {
				in.Skip()
				out.Success = nil
			} else {
				if out.Success == nil {
					out.Success = new(base.BazResponse)
				}
				(*out.Success).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServicePing(out *jwriter.Writer, in SimpleService_Ping_Result) {
	out.RawByte('{')
	first := true
	_ = first
	if in.Success != nil {
		const prefix string = ",\"success\":"
		first = false
		out.RawString(prefix[1:])
		(*in.Success).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SimpleService_Ping_Result) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServicePing(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SimpleService_Ping_Result) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServicePing(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SimpleService_Ping_Result) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServicePing(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SimpleService_Ping_Result) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServicePing(l, v)
}
func easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServicePing1(in *jlexer.Lexer, out *SimpleService_Ping_Args) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServicePing1(out *jwriter.Writer, in SimpleService_Ping_Args) {
	out.RawByte('{')
	first := true
	_ = first
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SimpleService_Ping_Args) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServicePing1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SimpleService_Ping_Args) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServicePing1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SimpleService_Ping_Args) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServicePing1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SimpleService_Ping_Args) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServicePing1(l, v)
}
func easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceHeaderSchema(in *jlexer.Lexer, out *SimpleService_HeaderSchema_Result) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "success":
			if in.IsNull() {
				in.Skip()
				out.Success = nil
			} else {
				if out.Success == nil {
					out.Success = new(HeaderSchema)
				}
				(*out.Success).UnmarshalEasyJSON(in)
			}
		case "authErr":
			if in.IsNull() {
				in.Skip()
				out.AuthErr = nil
			} else {
				if out.AuthErr == nil {
					out.AuthErr = new(AuthErr)
				}
				(*out.AuthErr).UnmarshalEasyJSON(in)
			}
		case "otherAuthErr":
			if in.IsNull() {
				in.Skip()
				out.OtherAuthErr = nil
			} else {
				if out.OtherAuthErr == nil {
					out.OtherAuthErr = new(OtherAuthErr)
				}
				(*out.OtherAuthErr).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceHeaderSchema(out *jwriter.Writer, in SimpleService_HeaderSchema_Result) {
	out.RawByte('{')
	first := true
	_ = first
	if in.Success != nil {
		const prefix string = ",\"success\":"
		first = false
		out.RawString(prefix[1:])
		(*in.Success).MarshalEasyJSON(out)
	}
	if in.AuthErr != nil {
		const prefix string = ",\"authErr\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		(*in.AuthErr).MarshalEasyJSON(out)
	}
	if in.OtherAuthErr != nil {
		const prefix string = ",\"otherAuthErr\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		(*in.OtherAuthErr).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SimpleService_HeaderSchema_Result) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceHeaderSchema(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SimpleService_HeaderSchema_Result) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceHeaderSchema(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SimpleService_HeaderSchema_Result) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceHeaderSchema(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SimpleService_HeaderSchema_Result) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceHeaderSchema(l, v)
}
func easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceHeaderSchema1(in *jlexer.Lexer, out *SimpleService_HeaderSchema_Args) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var ReqSet bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "req":
			if in.IsNull() {
				in.Skip()
				out.Req = nil
			} else {
				if out.Req == nil {
					out.Req = new(HeaderSchema)
				}
				(*out.Req).UnmarshalEasyJSON(in)
			}
			ReqSet = true
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !ReqSet {
		in.AddError(fmt.Errorf("key 'req' is required"))
	}
}
func easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceHeaderSchema1(out *jwriter.Writer, in SimpleService_HeaderSchema_Args) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"req\":"
		out.RawString(prefix[1:])
		if in.Req == nil {
			out.RawString("null")
		} else {
			(*in.Req).MarshalEasyJSON(out)
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SimpleService_HeaderSchema_Args) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceHeaderSchema1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SimpleService_HeaderSchema_Args) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceHeaderSchema1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SimpleService_HeaderSchema_Args) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceHeaderSchema1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SimpleService_HeaderSchema_Args) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceHeaderSchema1(l, v)
}
func easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceGetProfile(in *jlexer.Lexer, out *SimpleService_GetProfile_Result) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "success":
			if in.IsNull() {
				in.Skip()
				out.Success = nil
			} else {
				if out.Success == nil {
					out.Success = new(GetProfileResponse)
				}
				(*out.Success).UnmarshalEasyJSON(in)
			}
		case "authErr":
			if in.IsNull() {
				in.Skip()
				out.AuthErr = nil
			} else {
				if out.AuthErr == nil {
					out.AuthErr = new(AuthErr)
				}
				(*out.AuthErr).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceGetProfile(out *jwriter.Writer, in SimpleService_GetProfile_Result) {
	out.RawByte('{')
	first := true
	_ = first
	if in.Success != nil {
		const prefix string = ",\"success\":"
		first = false
		out.RawString(prefix[1:])
		(*in.Success).MarshalEasyJSON(out)
	}
	if in.AuthErr != nil {
		const prefix string = ",\"authErr\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		(*in.AuthErr).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SimpleService_GetProfile_Result) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceGetProfile(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SimpleService_GetProfile_Result) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceGetProfile(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SimpleService_GetProfile_Result) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceGetProfile(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SimpleService_GetProfile_Result) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceGetProfile(l, v)
}
func easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceGetProfile1(in *jlexer.Lexer, out *SimpleService_GetProfile_Args) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var RequestSet bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "request":
			if in.IsNull() {
				in.Skip()
				out.Request = nil
			} else {
				if out.Request == nil {
					out.Request = new(GetProfileRequest)
				}
				(*out.Request).UnmarshalEasyJSON(in)
			}
			RequestSet = true
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !RequestSet {
		in.AddError(fmt.Errorf("key 'request' is required"))
	}
}
func easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceGetProfile1(out *jwriter.Writer, in SimpleService_GetProfile_Args) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"request\":"
		out.RawString(prefix[1:])
		if in.Request == nil {
			out.RawString("null")
		} else {
			(*in.Request).MarshalEasyJSON(out)
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SimpleService_GetProfile_Args) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceGetProfile1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SimpleService_GetProfile_Args) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceGetProfile1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SimpleService_GetProfile_Args) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceGetProfile1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SimpleService_GetProfile_Args) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceGetProfile1(l, v)
}
func easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceCompare(in *jlexer.Lexer, out *SimpleService_Compare_Result) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "success":
			if in.IsNull() {
				in.Skip()
				out.Success = nil
			} else {
				if out.Success == nil {
					out.Success = new(base.BazResponse)
				}
				(*out.Success).UnmarshalEasyJSON(in)
			}
		case "authErr":
			if in.IsNull() {
				in.Skip()
				out.AuthErr = nil
			} else {
				if out.AuthErr == nil {
					out.AuthErr = new(AuthErr)
				}
				(*out.AuthErr).UnmarshalEasyJSON(in)
			}
		case "otherAuthErr":
			if in.IsNull() {
				in.Skip()
				out.OtherAuthErr = nil
			} else {
				if out.OtherAuthErr == nil {
					out.OtherAuthErr = new(OtherAuthErr)
				}
				(*out.OtherAuthErr).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceCompare(out *jwriter.Writer, in SimpleService_Compare_Result) {
	out.RawByte('{')
	first := true
	_ = first
	if in.Success != nil {
		const prefix string = ",\"success\":"
		first = false
		out.RawString(prefix[1:])
		(*in.Success).MarshalEasyJSON(out)
	}
	if in.AuthErr != nil {
		const prefix string = ",\"authErr\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		(*in.AuthErr).MarshalEasyJSON(out)
	}
	if in.OtherAuthErr != nil {
		const prefix string = ",\"otherAuthErr\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		(*in.OtherAuthErr).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SimpleService_Compare_Result) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceCompare(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SimpleService_Compare_Result) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceCompare(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SimpleService_Compare_Result) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceCompare(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SimpleService_Compare_Result) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceCompare(l, v)
}
func easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceCompare1(in *jlexer.Lexer, out *SimpleService_Compare_Args) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var Arg1Set bool
	var Arg2Set bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "arg1":
			if in.IsNull() {
				in.Skip()
				out.Arg1 = nil
			} else {
				if out.Arg1 == nil {
					out.Arg1 = new(BazRequest)
				}
				(*out.Arg1).UnmarshalEasyJSON(in)
			}
			Arg1Set = true
		case "arg2":
			if in.IsNull() {
				in.Skip()
				out.Arg2 = nil
			} else {
				if out.Arg2 == nil {
					out.Arg2 = new(BazRequest)
				}
				(*out.Arg2).UnmarshalEasyJSON(in)
			}
			Arg2Set = true
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !Arg1Set {
		in.AddError(fmt.Errorf("key 'arg1' is required"))
	}
	if !Arg2Set {
		in.AddError(fmt.Errorf("key 'arg2' is required"))
	}
}
func easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceCompare1(out *jwriter.Writer, in SimpleService_Compare_Args) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"arg1\":"
		out.RawString(prefix[1:])
		if in.Arg1 == nil {
			out.RawString("null")
		} else {
			(*in.Arg1).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"arg2\":"
		out.RawString(prefix)
		if in.Arg2 == nil {
			out.RawString("null")
		} else {
			(*in.Arg2).MarshalEasyJSON(out)
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SimpleService_Compare_Args) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceCompare1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SimpleService_Compare_Args) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceCompare1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SimpleService_Compare_Args) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceCompare1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SimpleService_Compare_Args) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceCompare1(l, v)
}
func easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceCall(in *jlexer.Lexer, out *SimpleService_Call_Result) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "authErr":
			if in.IsNull() {
				in.Skip()
				out.AuthErr = nil
			} else {
				if out.AuthErr == nil {
					out.AuthErr = new(AuthErr)
				}
				(*out.AuthErr).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceCall(out *jwriter.Writer, in SimpleService_Call_Result) {
	out.RawByte('{')
	first := true
	_ = first
	if in.AuthErr != nil {
		const prefix string = ",\"authErr\":"
		first = false
		out.RawString(prefix[1:])
		(*in.AuthErr).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SimpleService_Call_Result) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceCall(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SimpleService_Call_Result) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceCall(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SimpleService_Call_Result) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceCall(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SimpleService_Call_Result) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceCall(l, v)
}
func easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceCall1(in *jlexer.Lexer, out *SimpleService_Call_Args) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var ArgSet bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "arg":
			if in.IsNull() {
				in.Skip()
				out.Arg = nil
			} else {
				if out.Arg == nil {
					out.Arg = new(BazRequest)
				}
				(*out.Arg).UnmarshalEasyJSON(in)
			}
			ArgSet = true
		case "i64Optional":
			if in.IsNull() {
				in.Skip()
				out.I64Optional = nil
			} else {
				if out.I64Optional == nil {
					out.I64Optional = new(int64)
				}
				*out.I64Optional = int64(in.Int64())
			}
		case "testUUID":
			if in.IsNull() {
				in.Skip()
				out.TestUUID = nil
			} else {
				if out.TestUUID == nil {
					out.TestUUID = new(UUID)
				}
				*out.TestUUID = UUID(in.String())
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !ArgSet {
		in.AddError(fmt.Errorf("key 'arg' is required"))
	}
}
func easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceCall1(out *jwriter.Writer, in SimpleService_Call_Args) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"arg\":"
		out.RawString(prefix[1:])
		if in.Arg == nil {
			out.RawString("null")
		} else {
			(*in.Arg).MarshalEasyJSON(out)
		}
	}
	if in.I64Optional != nil {
		const prefix string = ",\"i64Optional\":"
		out.RawString(prefix)
		out.Int64(int64(*in.I64Optional))
	}
	if in.TestUUID != nil {
		const prefix string = ",\"testUUID\":"
		out.RawString(prefix)
		out.String(string(*in.TestUUID))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SimpleService_Call_Args) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceCall1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SimpleService_Call_Args) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceCall1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SimpleService_Call_Args) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceCall1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SimpleService_Call_Args) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceCall1(l, v)
}
func easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceAnotherCall(in *jlexer.Lexer, out *SimpleService_AnotherCall_Result) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "authErr":
			if in.IsNull() {
				in.Skip()
				out.AuthErr = nil
			} else {
				if out.AuthErr == nil {
					out.AuthErr = new(AuthErr)
				}
				(*out.AuthErr).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceAnotherCall(out *jwriter.Writer, in SimpleService_AnotherCall_Result) {
	out.RawByte('{')
	first := true
	_ = first
	if in.AuthErr != nil {
		const prefix string = ",\"authErr\":"
		first = false
		out.RawString(prefix[1:])
		(*in.AuthErr).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SimpleService_AnotherCall_Result) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceAnotherCall(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SimpleService_AnotherCall_Result) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceAnotherCall(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SimpleService_AnotherCall_Result) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceAnotherCall(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SimpleService_AnotherCall_Result) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceAnotherCall(l, v)
}
func easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceAnotherCall1(in *jlexer.Lexer, out *SimpleService_AnotherCall_Args) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var ArgSet bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "arg":
			if in.IsNull() {
				in.Skip()
				out.Arg = nil
			} else {
				if out.Arg == nil {
					out.Arg = new(BazRequest)
				}
				(*out.Arg).UnmarshalEasyJSON(in)
			}
			ArgSet = true
		case "i64Optional":
			if in.IsNull() {
				in.Skip()
				out.I64Optional = nil
			} else {
				if out.I64Optional == nil {
					out.I64Optional = new(int64)
				}
				*out.I64Optional = int64(in.Int64())
			}
		case "testUUID":
			if in.IsNull() {
				in.Skip()
				out.TestUUID = nil
			} else {
				if out.TestUUID == nil {
					out.TestUUID = new(UUID)
				}
				*out.TestUUID = UUID(in.String())
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !ArgSet {
		in.AddError(fmt.Errorf("key 'arg' is required"))
	}
}
func easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceAnotherCall1(out *jwriter.Writer, in SimpleService_AnotherCall_Args) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"arg\":"
		out.RawString(prefix[1:])
		if in.Arg == nil {
			out.RawString("null")
		} else {
			(*in.Arg).MarshalEasyJSON(out)
		}
	}
	if in.I64Optional != nil {
		const prefix string = ",\"i64Optional\":"
		out.RawString(prefix)
		out.Int64(int64(*in.I64Optional))
	}
	if in.TestUUID != nil {
		const prefix string = ",\"testUUID\":"
		out.RawString(prefix)
		out.String(string(*in.TestUUID))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SimpleService_AnotherCall_Args) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceAnotherCall1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SimpleService_AnotherCall_Args) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceAnotherCall1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SimpleService_AnotherCall_Args) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceAnotherCall1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SimpleService_AnotherCall_Args) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSimpleServiceAnotherCall1(l, v)
}
func easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoTypedef(in *jlexer.Lexer, out *SecondService_EchoTypedef_Result) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "success":
			if in.IsNull() {
				in.Skip()
				out.Success = nil
			} else {
				if out.Success == nil {
					out.Success = new(base.UUID)
				}
				*out.Success = base.UUID(in.String())
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoTypedef(out *jwriter.Writer, in SecondService_EchoTypedef_Result) {
	out.RawByte('{')
	first := true
	_ = first
	if in.Success != nil {
		const prefix string = ",\"success\":"
		first = false
		out.RawString(prefix[1:])
		out.String(string(*in.Success))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SecondService_EchoTypedef_Result) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoTypedef(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SecondService_EchoTypedef_Result) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoTypedef(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SecondService_EchoTypedef_Result) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoTypedef(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SecondService_EchoTypedef_Result) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoTypedef(l, v)
}
func easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoTypedef1(in *jlexer.Lexer, out *SecondService_EchoTypedef_Args) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var ArgSet bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "arg":
			out.Arg = base.UUID(in.String())
			ArgSet = true
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !ArgSet {
		in.AddError(fmt.Errorf("key 'arg' is required"))
	}
}
func easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoTypedef1(out *jwriter.Writer, in SecondService_EchoTypedef_Args) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"arg\":"
		out.RawString(prefix[1:])
		out.String(string(in.Arg))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SecondService_EchoTypedef_Args) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoTypedef1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SecondService_EchoTypedef_Args) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoTypedef1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SecondService_EchoTypedef_Args) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoTypedef1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SecondService_EchoTypedef_Args) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoTypedef1(l, v)
}
func easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoStructSet(in *jlexer.Lexer, out *SecondService_EchoStructSet_Result) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "success":
			if in.IsNull() {
				in.Skip()
				out.Success = nil
			} else {
				in.Delim('[')
				if out.Success == nil {
					if !in.IsDelim(']') {
						out.Success = make([]*base.BazResponse, 0, 8)
					} else {
						out.Success = []*base.BazResponse{}
					}
				} else {
					out.Success = (out.Success)[:0]
				}
				for !in.IsDelim(']') {
					var v1 *base.BazResponse
					if in.IsNull() {
						in.Skip()
						v1 = nil
					} else {
						if v1 == nil {
							v1 = new(base.BazResponse)
						}
						(*v1).UnmarshalEasyJSON(in)
					}
					out.Success = append(out.Success, v1)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoStructSet(out *jwriter.Writer, in SecondService_EchoStructSet_Result) {
	out.RawByte('{')
	first := true
	_ = first
	if len(in.Success) != 0 {
		const prefix string = ",\"success\":"
		first = false
		out.RawString(prefix[1:])
		{
			out.RawByte('[')
			for v2, v3 := range in.Success {
				if v2 > 0 {
					out.RawByte(',')
				}
				if v3 == nil {
					out.RawString("null")
				} else {
					(*v3).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SecondService_EchoStructSet_Result) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoStructSet(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SecondService_EchoStructSet_Result) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoStructSet(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SecondService_EchoStructSet_Result) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoStructSet(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SecondService_EchoStructSet_Result) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoStructSet(l, v)
}
func easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoStructSet1(in *jlexer.Lexer, out *SecondService_EchoStructSet_Args) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var ArgSet bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "arg":
			if in.IsNull() {
				in.Skip()
				out.Arg = nil
			} else {
				in.Delim('[')
				if out.Arg == nil {
					if !in.IsDelim(']') {
						out.Arg = make([]*base.BazResponse, 0, 8)
					} else {
						out.Arg = []*base.BazResponse{}
					}
				} else {
					out.Arg = (out.Arg)[:0]
				}
				for !in.IsDelim(']') {
					var v4 *base.BazResponse
					if in.IsNull() {
						in.Skip()
						v4 = nil
					} else {
						if v4 == nil {
							v4 = new(base.BazResponse)
						}
						(*v4).UnmarshalEasyJSON(in)
					}
					out.Arg = append(out.Arg, v4)
					in.WantComma()
				}
				in.Delim(']')
			}
			ArgSet = true
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !ArgSet {
		in.AddError(fmt.Errorf("key 'arg' is required"))
	}
}
func easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoStructSet1(out *jwriter.Writer, in SecondService_EchoStructSet_Args) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"arg\":"
		out.RawString(prefix[1:])
		if in.Arg == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v5, v6 := range in.Arg {
				if v5 > 0 {
					out.RawByte(',')
				}
				if v6 == nil {
					out.RawString("null")
				} else {
					(*v6).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SecondService_EchoStructSet_Args) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoStructSet1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SecondService_EchoStructSet_Args) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoStructSet1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SecondService_EchoStructSet_Args) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoStructSet1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SecondService_EchoStructSet_Args) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoStructSet1(l, v)
}
func easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoStructMap(in *jlexer.Lexer, out *SecondService_EchoStructMap_Result) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "success":
			if in.IsNull() {
				in.Skip()
				out.Success = nil
			} else {
				in.Delim('[')
				if out.Success == nil {
					if !in.IsDelim(']') {
						out.Success = make([]struct {
							Key   *base.BazResponse
							Value string
						}, 0, 2)
					} else {
						out.Success = []struct {
							Key   *base.BazResponse
							Value string
						}{}
					}
				} else {
					out.Success = (out.Success)[:0]
				}
				for !in.IsDelim(']') {
					var v7 struct {
						Key   *base.BazResponse
						Value string
					}
					easyjson1bcb5839Decode(in, &v7)
					out.Success = append(out.Success, v7)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoStructMap(out *jwriter.Writer, in SecondService_EchoStructMap_Result) {
	out.RawByte('{')
	first := true
	_ = first
	if len(in.Success) != 0 {
		const prefix string = ",\"success\":"
		first = false
		out.RawString(prefix[1:])
		{
			out.RawByte('[')
			for v8, v9 := range in.Success {
				if v8 > 0 {
					out.RawByte(',')
				}
				easyjson1bcb5839Encode(out, v9)
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SecondService_EchoStructMap_Result) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoStructMap(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SecondService_EchoStructMap_Result) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoStructMap(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SecondService_EchoStructMap_Result) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoStructMap(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SecondService_EchoStructMap_Result) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoStructMap(l, v)
}
func easyjson1bcb5839Decode(in *jlexer.Lexer, out *struct {
	Key   *base.BazResponse
	Value string
}) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "Key":
			if in.IsNull() {
				in.Skip()
				out.Key = nil
			} else {
				if out.Key == nil {
					out.Key = new(base.BazResponse)
				}
				(*out.Key).UnmarshalEasyJSON(in)
			}
		case "Value":
			out.Value = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson1bcb5839Encode(out *jwriter.Writer, in struct {
	Key   *base.BazResponse
	Value string
}) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"Key\":"
		out.RawString(prefix[1:])
		if in.Key == nil {
			out.RawString("null")
		} else {
			(*in.Key).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"Value\":"
		out.RawString(prefix)
		out.String(string(in.Value))
	}
	out.RawByte('}')
}
func easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoStructMap1(in *jlexer.Lexer, out *SecondService_EchoStructMap_Args) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var ArgSet bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "arg":
			if in.IsNull() {
				in.Skip()
				out.Arg = nil
			} else {
				in.Delim('[')
				if out.Arg == nil {
					if !in.IsDelim(']') {
						out.Arg = make([]struct {
							Key   *base.BazResponse
							Value string
						}, 0, 2)
					} else {
						out.Arg = []struct {
							Key   *base.BazResponse
							Value string
						}{}
					}
				} else {
					out.Arg = (out.Arg)[:0]
				}
				for !in.IsDelim(']') {
					var v10 struct {
						Key   *base.BazResponse
						Value string
					}
					easyjson1bcb5839Decode(in, &v10)
					out.Arg = append(out.Arg, v10)
					in.WantComma()
				}
				in.Delim(']')
			}
			ArgSet = true
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !ArgSet {
		in.AddError(fmt.Errorf("key 'arg' is required"))
	}
}
func easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoStructMap1(out *jwriter.Writer, in SecondService_EchoStructMap_Args) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"arg\":"
		out.RawString(prefix[1:])
		if in.Arg == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v11, v12 := range in.Arg {
				if v11 > 0 {
					out.RawByte(',')
				}
				easyjson1bcb5839Encode(out, v12)
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SecondService_EchoStructMap_Args) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoStructMap1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SecondService_EchoStructMap_Args) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoStructMap1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SecondService_EchoStructMap_Args) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoStructMap1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SecondService_EchoStructMap_Args) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoStructMap1(l, v)
}
func easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoStructList(in *jlexer.Lexer, out *SecondService_EchoStructList_Result) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "success":
			if in.IsNull() {
				in.Skip()
				out.Success = nil
			} else {
				in.Delim('[')
				if out.Success == nil {
					if !in.IsDelim(']') {
						out.Success = make([]*base.BazResponse, 0, 8)
					} else {
						out.Success = []*base.BazResponse{}
					}
				} else {
					out.Success = (out.Success)[:0]
				}
				for !in.IsDelim(']') {
					var v13 *base.BazResponse
					if in.IsNull() {
						in.Skip()
						v13 = nil
					} else {
						if v13 == nil {
							v13 = new(base.BazResponse)
						}
						(*v13).UnmarshalEasyJSON(in)
					}
					out.Success = append(out.Success, v13)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoStructList(out *jwriter.Writer, in SecondService_EchoStructList_Result) {
	out.RawByte('{')
	first := true
	_ = first
	if len(in.Success) != 0 {
		const prefix string = ",\"success\":"
		first = false
		out.RawString(prefix[1:])
		{
			out.RawByte('[')
			for v14, v15 := range in.Success {
				if v14 > 0 {
					out.RawByte(',')
				}
				if v15 == nil {
					out.RawString("null")
				} else {
					(*v15).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SecondService_EchoStructList_Result) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoStructList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SecondService_EchoStructList_Result) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoStructList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SecondService_EchoStructList_Result) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoStructList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SecondService_EchoStructList_Result) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoStructList(l, v)
}
func easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoStructList1(in *jlexer.Lexer, out *SecondService_EchoStructList_Args) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var ArgSet bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "arg":
			if in.IsNull() {
				in.Skip()
				out.Arg = nil
			} else {
				in.Delim('[')
				if out.Arg == nil {
					if !in.IsDelim(']') {
						out.Arg = make([]*base.BazResponse, 0, 8)
					} else {
						out.Arg = []*base.BazResponse{}
					}
				} else {
					out.Arg = (out.Arg)[:0]
				}
				for !in.IsDelim(']') {
					var v16 *base.BazResponse
					if in.IsNull() {
						in.Skip()
						v16 = nil
					} else {
						if v16 == nil {
							v16 = new(base.BazResponse)
						}
						(*v16).UnmarshalEasyJSON(in)
					}
					out.Arg = append(out.Arg, v16)
					in.WantComma()
				}
				in.Delim(']')
			}
			ArgSet = true
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !ArgSet {
		in.AddError(fmt.Errorf("key 'arg' is required"))
	}
}
func easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoStructList1(out *jwriter.Writer, in SecondService_EchoStructList_Args) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"arg\":"
		out.RawString(prefix[1:])
		if in.Arg == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v17, v18 := range in.Arg {
				if v17 > 0 {
					out.RawByte(',')
				}
				if v18 == nil {
					out.RawString("null")
				} else {
					(*v18).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SecondService_EchoStructList_Args) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoStructList1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SecondService_EchoStructList_Args) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoStructList1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SecondService_EchoStructList_Args) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoStructList1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SecondService_EchoStructList_Args) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoStructList1(l, v)
}
func easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoString(in *jlexer.Lexer, out *SecondService_EchoString_Result) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "success":
			if in.IsNull() {
				in.Skip()
				out.Success = nil
			} else {
				if out.Success == nil {
					out.Success = new(string)
				}
				*out.Success = string(in.String())
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoString(out *jwriter.Writer, in SecondService_EchoString_Result) {
	out.RawByte('{')
	first := true
	_ = first
	if in.Success != nil {
		const prefix string = ",\"success\":"
		first = false
		out.RawString(prefix[1:])
		out.String(string(*in.Success))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SecondService_EchoString_Result) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoString(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SecondService_EchoString_Result) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoString(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SecondService_EchoString_Result) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoString(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SecondService_EchoString_Result) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoString(l, v)
}
func easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoString1(in *jlexer.Lexer, out *SecondService_EchoString_Args) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var ArgSet bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "arg":
			out.Arg = string(in.String())
			ArgSet = true
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !ArgSet {
		in.AddError(fmt.Errorf("key 'arg' is required"))
	}
}
func easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoString1(out *jwriter.Writer, in SecondService_EchoString_Args) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"arg\":"
		out.RawString(prefix[1:])
		out.String(string(in.Arg))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SecondService_EchoString_Args) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoString1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SecondService_EchoString_Args) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoString1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SecondService_EchoString_Args) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoString1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SecondService_EchoString_Args) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoString1(l, v)
}
func easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoStringSet(in *jlexer.Lexer, out *SecondService_EchoStringSet_Result) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "success":
			if in.IsNull() {
				in.Skip()
			} else {
				in.Delim('{')
				if !in.IsDelim('}') {
					out.Success = make(map[string]struct{})
				} else {
					out.Success = nil
				}
				for !in.IsDelim('}') {
					key := string(in.String())
					in.WantColon()
					var v19 struct{}
					easyjson1bcb5839Decode1(in, &v19)
					(out.Success)[key] = v19
					in.WantComma()
				}
				in.Delim('}')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoStringSet(out *jwriter.Writer, in SecondService_EchoStringSet_Result) {
	out.RawByte('{')
	first := true
	_ = first
	if len(in.Success) != 0 {
		const prefix string = ",\"success\":"
		first = false
		out.RawString(prefix[1:])
		{
			out.RawByte('{')
			v20First := true
			for v20Name, v20Value := range in.Success {
				if v20First {
					v20First = false
				} else {
					out.RawByte(',')
				}
				out.String(string(v20Name))
				out.RawByte(':')
				easyjson1bcb5839Encode1(out, v20Value)
			}
			out.RawByte('}')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SecondService_EchoStringSet_Result) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoStringSet(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SecondService_EchoStringSet_Result) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoStringSet(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SecondService_EchoStringSet_Result) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoStringSet(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SecondService_EchoStringSet_Result) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoStringSet(l, v)
}
func easyjson1bcb5839Decode1(in *jlexer.Lexer, out *struct{}) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson1bcb5839Encode1(out *jwriter.Writer, in struct{}) {
	out.RawByte('{')
	first := true
	_ = first
	out.RawByte('}')
}
func easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoStringSet1(in *jlexer.Lexer, out *SecondService_EchoStringSet_Args) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var ArgSet bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "arg":
			if in.IsNull() {
				in.Skip()
			} else {
				in.Delim('{')
				if !in.IsDelim('}') {
					out.Arg = make(map[string]struct{})
				} else {
					out.Arg = nil
				}
				for !in.IsDelim('}') {
					key := string(in.String())
					in.WantColon()
					var v21 struct{}
					easyjson1bcb5839Decode1(in, &v21)
					(out.Arg)[key] = v21
					in.WantComma()
				}
				in.Delim('}')
			}
			ArgSet = true
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !ArgSet {
		in.AddError(fmt.Errorf("key 'arg' is required"))
	}
}
func easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoStringSet1(out *jwriter.Writer, in SecondService_EchoStringSet_Args) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"arg\":"
		out.RawString(prefix[1:])
		if in.Arg == nil && (out.Flags&jwriter.NilMapAsEmpty) == 0 {
			out.RawString(`null`)
		} else {
			out.RawByte('{')
			v22First := true
			for v22Name, v22Value := range in.Arg {
				if v22First {
					v22First = false
				} else {
					out.RawByte(',')
				}
				out.String(string(v22Name))
				out.RawByte(':')
				easyjson1bcb5839Encode1(out, v22Value)
			}
			out.RawByte('}')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SecondService_EchoStringSet_Args) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoStringSet1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SecondService_EchoStringSet_Args) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoStringSet1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SecondService_EchoStringSet_Args) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoStringSet1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SecondService_EchoStringSet_Args) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoStringSet1(l, v)
}
func easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoStringMap(in *jlexer.Lexer, out *SecondService_EchoStringMap_Result) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "success":
			if in.IsNull() {
				in.Skip()
			} else {
				in.Delim('{')
				if !in.IsDelim('}') {
					out.Success = make(map[string]*base.BazResponse)
				} else {
					out.Success = nil
				}
				for !in.IsDelim('}') {
					key := string(in.String())
					in.WantColon()
					var v23 *base.BazResponse
					if in.IsNull() {
						in.Skip()
						v23 = nil
					} else {
						if v23 == nil {
							v23 = new(base.BazResponse)
						}
						(*v23).UnmarshalEasyJSON(in)
					}
					(out.Success)[key] = v23
					in.WantComma()
				}
				in.Delim('}')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoStringMap(out *jwriter.Writer, in SecondService_EchoStringMap_Result) {
	out.RawByte('{')
	first := true
	_ = first
	if len(in.Success) != 0 {
		const prefix string = ",\"success\":"
		first = false
		out.RawString(prefix[1:])
		{
			out.RawByte('{')
			v24First := true
			for v24Name, v24Value := range in.Success {
				if v24First {
					v24First = false
				} else {
					out.RawByte(',')
				}
				out.String(string(v24Name))
				out.RawByte(':')
				if v24Value == nil {
					out.RawString("null")
				} else {
					(*v24Value).MarshalEasyJSON(out)
				}
			}
			out.RawByte('}')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SecondService_EchoStringMap_Result) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoStringMap(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SecondService_EchoStringMap_Result) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoStringMap(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SecondService_EchoStringMap_Result) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoStringMap(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SecondService_EchoStringMap_Result) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoStringMap(l, v)
}
func easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoStringMap1(in *jlexer.Lexer, out *SecondService_EchoStringMap_Args) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var ArgSet bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "arg":
			if in.IsNull() {
				in.Skip()
			} else {
				in.Delim('{')
				if !in.IsDelim('}') {
					out.Arg = make(map[string]*base.BazResponse)
				} else {
					out.Arg = nil
				}
				for !in.IsDelim('}') {
					key := string(in.String())
					in.WantColon()
					var v25 *base.BazResponse
					if in.IsNull() {
						in.Skip()
						v25 = nil
					} else {
						if v25 == nil {
							v25 = new(base.BazResponse)
						}
						(*v25).UnmarshalEasyJSON(in)
					}
					(out.Arg)[key] = v25
					in.WantComma()
				}
				in.Delim('}')
			}
			ArgSet = true
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !ArgSet {
		in.AddError(fmt.Errorf("key 'arg' is required"))
	}
}
func easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoStringMap1(out *jwriter.Writer, in SecondService_EchoStringMap_Args) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"arg\":"
		out.RawString(prefix[1:])
		if in.Arg == nil && (out.Flags&jwriter.NilMapAsEmpty) == 0 {
			out.RawString(`null`)
		} else {
			out.RawByte('{')
			v26First := true
			for v26Name, v26Value := range in.Arg {
				if v26First {
					v26First = false
				} else {
					out.RawByte(',')
				}
				out.String(string(v26Name))
				out.RawByte(':')
				if v26Value == nil {
					out.RawString("null")
				} else {
					(*v26Value).MarshalEasyJSON(out)
				}
			}
			out.RawByte('}')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SecondService_EchoStringMap_Args) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoStringMap1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SecondService_EchoStringMap_Args) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoStringMap1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SecondService_EchoStringMap_Args) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoStringMap1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SecondService_EchoStringMap_Args) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoStringMap1(l, v)
}
func easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoStringList(in *jlexer.Lexer, out *SecondService_EchoStringList_Result) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "success":
			if in.IsNull() {
				in.Skip()
				out.Success = nil
			} else {
				in.Delim('[')
				if out.Success == nil {
					if !in.IsDelim(']') {
						out.Success = make([]string, 0, 4)
					} else {
						out.Success = []string{}
					}
				} else {
					out.Success = (out.Success)[:0]
				}
				for !in.IsDelim(']') {
					var v27 string
					v27 = string(in.String())
					out.Success = append(out.Success, v27)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoStringList(out *jwriter.Writer, in SecondService_EchoStringList_Result) {
	out.RawByte('{')
	first := true
	_ = first
	if len(in.Success) != 0 {
		const prefix string = ",\"success\":"
		first = false
		out.RawString(prefix[1:])
		{
			out.RawByte('[')
			for v28, v29 := range in.Success {
				if v28 > 0 {
					out.RawByte(',')
				}
				out.String(string(v29))
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SecondService_EchoStringList_Result) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoStringList(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SecondService_EchoStringList_Result) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoStringList(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SecondService_EchoStringList_Result) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoStringList(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SecondService_EchoStringList_Result) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoStringList(l, v)
}
func easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoStringList1(in *jlexer.Lexer, out *SecondService_EchoStringList_Args) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var ArgSet bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "arg":
			if in.IsNull() {
				in.Skip()
				out.Arg = nil
			} else {
				in.Delim('[')
				if out.Arg == nil {
					if !in.IsDelim(']') {
						out.Arg = make([]string, 0, 4)
					} else {
						out.Arg = []string{}
					}
				} else {
					out.Arg = (out.Arg)[:0]
				}
				for !in.IsDelim(']') {
					var v30 string
					v30 = string(in.String())
					out.Arg = append(out.Arg, v30)
					in.WantComma()
				}
				in.Delim(']')
			}
			ArgSet = true
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !ArgSet {
		in.AddError(fmt.Errorf("key 'arg' is required"))
	}
}
func easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoStringList1(out *jwriter.Writer, in SecondService_EchoStringList_Args) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"arg\":"
		out.RawString(prefix[1:])
		if in.Arg == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v31, v32 := range in.Arg {
				if v31 > 0 {
					out.RawByte(',')
				}
				out.String(string(v32))
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SecondService_EchoStringList_Args) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoStringList1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SecondService_EchoStringList_Args) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoStringList1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SecondService_EchoStringList_Args) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoStringList1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SecondService_EchoStringList_Args) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoStringList1(l, v)
}
func easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoI8(in *jlexer.Lexer, out *SecondService_EchoI8_Result) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "success":
			if in.IsNull() {
				in.Skip()
				out.Success = nil
			} else {
				if out.Success == nil {
					out.Success = new(int8)
				}
				*out.Success = int8(in.Int8())
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoI8(out *jwriter.Writer, in SecondService_EchoI8_Result) {
	out.RawByte('{')
	first := true
	_ = first
	if in.Success != nil {
		const prefix string = ",\"success\":"
		first = false
		out.RawString(prefix[1:])
		out.Int8(int8(*in.Success))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SecondService_EchoI8_Result) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoI8(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SecondService_EchoI8_Result) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoI8(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SecondService_EchoI8_Result) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoI8(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SecondService_EchoI8_Result) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoI8(l, v)
}
func easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoI81(in *jlexer.Lexer, out *SecondService_EchoI8_Args) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var ArgSet bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "arg":
			out.Arg = int8(in.Int8())
			ArgSet = true
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !ArgSet {
		in.AddError(fmt.Errorf("key 'arg' is required"))
	}
}
func easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoI81(out *jwriter.Writer, in SecondService_EchoI8_Args) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"arg\":"
		out.RawString(prefix[1:])
		out.Int8(int8(in.Arg))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SecondService_EchoI8_Args) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoI81(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SecondService_EchoI8_Args) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoI81(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SecondService_EchoI8_Args) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoI81(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SecondService_EchoI8_Args) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoI81(l, v)
}
func easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoI64(in *jlexer.Lexer, out *SecondService_EchoI64_Result) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "success":
			if in.IsNull() {
				in.Skip()
				out.Success = nil
			} else {
				if out.Success == nil {
					out.Success = new(int64)
				}
				*out.Success = int64(in.Int64())
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoI64(out *jwriter.Writer, in SecondService_EchoI64_Result) {
	out.RawByte('{')
	first := true
	_ = first
	if in.Success != nil {
		const prefix string = ",\"success\":"
		first = false
		out.RawString(prefix[1:])
		out.Int64(int64(*in.Success))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SecondService_EchoI64_Result) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoI64(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SecondService_EchoI64_Result) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoI64(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SecondService_EchoI64_Result) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoI64(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SecondService_EchoI64_Result) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoI64(l, v)
}
func easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoI641(in *jlexer.Lexer, out *SecondService_EchoI64_Args) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var ArgSet bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "arg":
			out.Arg = int64(in.Int64())
			ArgSet = true
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !ArgSet {
		in.AddError(fmt.Errorf("key 'arg' is required"))
	}
}
func easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoI641(out *jwriter.Writer, in SecondService_EchoI64_Args) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"arg\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.Arg))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SecondService_EchoI64_Args) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoI641(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SecondService_EchoI64_Args) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoI641(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SecondService_EchoI64_Args) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoI641(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SecondService_EchoI64_Args) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoI641(l, v)
}
func easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoI32(in *jlexer.Lexer, out *SecondService_EchoI32_Result) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "success":
			if in.IsNull() {
				in.Skip()
				out.Success = nil
			} else {
				if out.Success == nil {
					out.Success = new(int32)
				}
				*out.Success = int32(in.Int32())
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoI32(out *jwriter.Writer, in SecondService_EchoI32_Result) {
	out.RawByte('{')
	first := true
	_ = first
	if in.Success != nil {
		const prefix string = ",\"success\":"
		first = false
		out.RawString(prefix[1:])
		out.Int32(int32(*in.Success))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SecondService_EchoI32_Result) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoI32(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SecondService_EchoI32_Result) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoI32(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SecondService_EchoI32_Result) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoI32(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SecondService_EchoI32_Result) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoI32(l, v)
}
func easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoI321(in *jlexer.Lexer, out *SecondService_EchoI32_Args) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var ArgSet bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "arg":
			out.Arg = int32(in.Int32())
			ArgSet = true
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !ArgSet {
		in.AddError(fmt.Errorf("key 'arg' is required"))
	}
}
func easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoI321(out *jwriter.Writer, in SecondService_EchoI32_Args) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"arg\":"
		out.RawString(prefix[1:])
		out.Int32(int32(in.Arg))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SecondService_EchoI32_Args) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoI321(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SecondService_EchoI32_Args) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoI321(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SecondService_EchoI32_Args) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoI321(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SecondService_EchoI32_Args) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoI321(l, v)
}
func easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoI16(in *jlexer.Lexer, out *SecondService_EchoI16_Result) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "success":
			if in.IsNull() {
				in.Skip()
				out.Success = nil
			} else {
				if out.Success == nil {
					out.Success = new(int16)
				}
				*out.Success = int16(in.Int16())
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoI16(out *jwriter.Writer, in SecondService_EchoI16_Result) {
	out.RawByte('{')
	first := true
	_ = first
	if in.Success != nil {
		const prefix string = ",\"success\":"
		first = false
		out.RawString(prefix[1:])
		out.Int16(int16(*in.Success))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SecondService_EchoI16_Result) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoI16(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SecondService_EchoI16_Result) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoI16(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SecondService_EchoI16_Result) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoI16(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SecondService_EchoI16_Result) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoI16(l, v)
}
func easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoI161(in *jlexer.Lexer, out *SecondService_EchoI16_Args) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var ArgSet bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "arg":
			out.Arg = int16(in.Int16())
			ArgSet = true
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !ArgSet {
		in.AddError(fmt.Errorf("key 'arg' is required"))
	}
}
func easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoI161(out *jwriter.Writer, in SecondService_EchoI16_Args) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"arg\":"
		out.RawString(prefix[1:])
		out.Int16(int16(in.Arg))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SecondService_EchoI16_Args) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoI161(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SecondService_EchoI16_Args) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoI161(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SecondService_EchoI16_Args) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoI161(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SecondService_EchoI16_Args) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoI161(l, v)
}
func easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoEnum(in *jlexer.Lexer, out *SecondService_EchoEnum_Result) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "success":
			if in.IsNull() {
				in.Skip()
				out.Success = nil
			} else {
				if out.Success == nil {
					out.Success = new(Fruit)
				}
				if data := in.Raw(); in.Ok() {
					in.AddError((*out.Success).UnmarshalJSON(data))
				}
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoEnum(out *jwriter.Writer, in SecondService_EchoEnum_Result) {
	out.RawByte('{')
	first := true
	_ = first
	if in.Success != nil {
		const prefix string = ",\"success\":"
		first = false
		out.RawString(prefix[1:])
		out.Raw((*in.Success).MarshalJSON())
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SecondService_EchoEnum_Result) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoEnum(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SecondService_EchoEnum_Result) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoEnum(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SecondService_EchoEnum_Result) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoEnum(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SecondService_EchoEnum_Result) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoEnum(l, v)
}
func easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoEnum1(in *jlexer.Lexer, out *SecondService_EchoEnum_Args) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "arg":
			if in.IsNull() {
				in.Skip()
				out.Arg = nil
			} else {
				if out.Arg == nil {
					out.Arg = new(Fruit)
				}
				if data := in.Raw(); in.Ok() {
					in.AddError((*out.Arg).UnmarshalJSON(data))
				}
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoEnum1(out *jwriter.Writer, in SecondService_EchoEnum_Args) {
	out.RawByte('{')
	first := true
	_ = first
	if in.Arg != nil {
		const prefix string = ",\"arg\":"
		first = false
		out.RawString(prefix[1:])
		out.Raw((*in.Arg).MarshalJSON())
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SecondService_EchoEnum_Args) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoEnum1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SecondService_EchoEnum_Args) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoEnum1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SecondService_EchoEnum_Args) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoEnum1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SecondService_EchoEnum_Args) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoEnum1(l, v)
}
func easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoDouble(in *jlexer.Lexer, out *SecondService_EchoDouble_Result) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "success":
			if in.IsNull() {
				in.Skip()
				out.Success = nil
			} else {
				if out.Success == nil {
					out.Success = new(float64)
				}
				*out.Success = float64(in.Float64())
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoDouble(out *jwriter.Writer, in SecondService_EchoDouble_Result) {
	out.RawByte('{')
	first := true
	_ = first
	if in.Success != nil {
		const prefix string = ",\"success\":"
		first = false
		out.RawString(prefix[1:])
		out.Float64(float64(*in.Success))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SecondService_EchoDouble_Result) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoDouble(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SecondService_EchoDouble_Result) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoDouble(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SecondService_EchoDouble_Result) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoDouble(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SecondService_EchoDouble_Result) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoDouble(l, v)
}
func easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoDouble1(in *jlexer.Lexer, out *SecondService_EchoDouble_Args) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var ArgSet bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "arg":
			out.Arg = float64(in.Float64())
			ArgSet = true
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !ArgSet {
		in.AddError(fmt.Errorf("key 'arg' is required"))
	}
}
func easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoDouble1(out *jwriter.Writer, in SecondService_EchoDouble_Args) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"arg\":"
		out.RawString(prefix[1:])
		out.Float64(float64(in.Arg))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SecondService_EchoDouble_Args) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoDouble1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SecondService_EchoDouble_Args) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoDouble1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SecondService_EchoDouble_Args) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoDouble1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SecondService_EchoDouble_Args) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoDouble1(l, v)
}
func easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoBool(in *jlexer.Lexer, out *SecondService_EchoBool_Result) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "success":
			if in.IsNull() {
				in.Skip()
				out.Success = nil
			} else {
				if out.Success == nil {
					out.Success = new(bool)
				}
				*out.Success = bool(in.Bool())
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoBool(out *jwriter.Writer, in SecondService_EchoBool_Result) {
	out.RawByte('{')
	first := true
	_ = first
	if in.Success != nil {
		const prefix string = ",\"success\":"
		first = false
		out.RawString(prefix[1:])
		out.Bool(bool(*in.Success))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SecondService_EchoBool_Result) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoBool(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SecondService_EchoBool_Result) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoBool(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SecondService_EchoBool_Result) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoBool(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SecondService_EchoBool_Result) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoBool(l, v)
}
func easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoBool1(in *jlexer.Lexer, out *SecondService_EchoBool_Args) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var ArgSet bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "arg":
			out.Arg = bool(in.Bool())
			ArgSet = true
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !ArgSet {
		in.AddError(fmt.Errorf("key 'arg' is required"))
	}
}
func easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoBool1(out *jwriter.Writer, in SecondService_EchoBool_Args) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"arg\":"
		out.RawString(prefix[1:])
		out.Bool(bool(in.Arg))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SecondService_EchoBool_Args) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoBool1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SecondService_EchoBool_Args) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoBool1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SecondService_EchoBool_Args) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoBool1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SecondService_EchoBool_Args) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoBool1(l, v)
}
func easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoBinary(in *jlexer.Lexer, out *SecondService_EchoBinary_Result) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "success":
			if in.IsNull() {
				in.Skip()
				out.Success = nil
			} else {
				out.Success = in.Bytes()
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoBinary(out *jwriter.Writer, in SecondService_EchoBinary_Result) {
	out.RawByte('{')
	first := true
	_ = first
	if len(in.Success) != 0 {
		const prefix string = ",\"success\":"
		first = false
		out.RawString(prefix[1:])
		out.Base64Bytes(in.Success)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SecondService_EchoBinary_Result) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoBinary(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SecondService_EchoBinary_Result) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoBinary(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SecondService_EchoBinary_Result) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoBinary(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SecondService_EchoBinary_Result) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoBinary(l, v)
}
func easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoBinary1(in *jlexer.Lexer, out *SecondService_EchoBinary_Args) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var ArgSet bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "arg":
			if in.IsNull() {
				in.Skip()
				out.Arg = nil
			} else {
				out.Arg = in.Bytes()
			}
			ArgSet = true
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !ArgSet {
		in.AddError(fmt.Errorf("key 'arg' is required"))
	}
}
func easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoBinary1(out *jwriter.Writer, in SecondService_EchoBinary_Args) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"arg\":"
		out.RawString(prefix[1:])
		out.Base64Bytes(in.Arg)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SecondService_EchoBinary_Args) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoBinary1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SecondService_EchoBinary_Args) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoBinary1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SecondService_EchoBinary_Args) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoBinary1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SecondService_EchoBinary_Args) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBazSecondServiceEchoBinary1(l, v)
}
func easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBaz1(in *jlexer.Lexer, out *Recur3) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var Field31Set bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "field31":
			out.Field31 = UUID(in.String())
			Field31Set = true
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !Field31Set {
		in.AddError(fmt.Errorf("key 'field31' is required"))
	}
}
func easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBaz1(out *jwriter.Writer, in Recur3) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"field31\":"
		out.RawString(prefix[1:])
		out.String(string(in.Field31))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Recur3) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBaz1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Recur3) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBaz1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Recur3) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBaz1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Recur3) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBaz1(l, v)
}
func easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBaz2(in *jlexer.Lexer, out *Recur2) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var Field21Set bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "field21":
			if in.IsNull() {
				in.Skip()
				out.Field21 = nil
			} else {
				if out.Field21 == nil {
					out.Field21 = new(Recur3)
				}
				(*out.Field21).UnmarshalEasyJSON(in)
			}
			Field21Set = true
		case "field22":
			if in.IsNull() {
				in.Skip()
				out.Field22 = nil
			} else {
				if out.Field22 == nil {
					out.Field22 = new(Recur3)
				}
				(*out.Field22).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !Field21Set {
		in.AddError(fmt.Errorf("key 'field21' is required"))
	}
}
func easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBaz2(out *jwriter.Writer, in Recur2) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"field21\":"
		out.RawString(prefix[1:])
		if in.Field21 == nil {
			out.RawString("null")
		} else {
			(*in.Field21).MarshalEasyJSON(out)
		}
	}
	if in.Field22 != nil {
		const prefix string = ",\"field22\":"
		out.RawString(prefix)
		(*in.Field22).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Recur2) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBaz2(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Recur2) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBaz2(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Recur2) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBaz2(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Recur2) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBaz2(l, v)
}
func easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBaz3(in *jlexer.Lexer, out *Recur1) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var Field1Set bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "field1":
			if in.IsNull() {
				in.Skip()
			} else {
				in.Delim('{')
				if !in.IsDelim('}') {
					out.Field1 = make(map[UUID]*Recur2)
				} else {
					out.Field1 = nil
				}
				for !in.IsDelim('}') {
					key := UUID(in.String())
					in.WantColon()
					var v39 *Recur2
					if in.IsNull() {
						in.Skip()
						v39 = nil
					} else {
						if v39 == nil {
							v39 = new(Recur2)
						}
						(*v39).UnmarshalEasyJSON(in)
					}
					(out.Field1)[key] = v39
					in.WantComma()
				}
				in.Delim('}')
			}
			Field1Set = true
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !Field1Set {
		in.AddError(fmt.Errorf("key 'field1' is required"))
	}
}
func easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBaz3(out *jwriter.Writer, in Recur1) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"field1\":"
		out.RawString(prefix[1:])
		if in.Field1 == nil && (out.Flags&jwriter.NilMapAsEmpty) == 0 {
			out.RawString(`null`)
		} else {
			out.RawByte('{')
			v40First := true
			for v40Name, v40Value := range in.Field1 {
				if v40First {
					v40First = false
				} else {
					out.RawByte(',')
				}
				out.String(string(v40Name))
				out.RawByte(':')
				if v40Value == nil {
					out.RawString("null")
				} else {
					(*v40Value).MarshalEasyJSON(out)
				}
			}
			out.RawByte('}')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Recur1) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBaz3(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Recur1) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBaz3(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Recur1) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBaz3(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Recur1) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBaz3(l, v)
}
func easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBaz4(in *jlexer.Lexer, out *Profile) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var Recur1Set bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "recur1":
			if in.IsNull() {
				in.Skip()
				out.Recur1 = nil
			} else {
				if out.Recur1 == nil {
					out.Recur1 = new(Recur1)
				}
				(*out.Recur1).UnmarshalEasyJSON(in)
			}
			Recur1Set = true
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !Recur1Set {
		in.AddError(fmt.Errorf("key 'recur1' is required"))
	}
}
func easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBaz4(out *jwriter.Writer, in Profile) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"recur1\":"
		out.RawString(prefix[1:])
		if in.Recur1 == nil {
			out.RawString("null")
		} else {
			(*in.Recur1).MarshalEasyJSON(out)
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Profile) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBaz4(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Profile) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBaz4(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Profile) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBaz4(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Profile) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBaz4(l, v)
}
func easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBaz5(in *jlexer.Lexer, out *OtherAuthErr) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var MessageSet bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "message":
			out.Message = string(in.String())
			MessageSet = true
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !MessageSet {
		in.AddError(fmt.Errorf("key 'message' is required"))
	}
}
func easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBaz5(out *jwriter.Writer, in OtherAuthErr) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"message\":"
		out.RawString(prefix[1:])
		out.String(string(in.Message))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v OtherAuthErr) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBaz5(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v OtherAuthErr) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBaz5(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *OtherAuthErr) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBaz5(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *OtherAuthErr) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBaz5(l, v)
}
func easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBaz6(in *jlexer.Lexer, out *HeaderSchema) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBaz6(out *jwriter.Writer, in HeaderSchema) {
	out.RawByte('{')
	first := true
	_ = first
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v HeaderSchema) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBaz6(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v HeaderSchema) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBaz6(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *HeaderSchema) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBaz6(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *HeaderSchema) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBaz6(l, v)
}
func easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBaz7(in *jlexer.Lexer, out *GetProfileResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var PayloadsSet bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "payloads":
			if in.IsNull() {
				in.Skip()
				out.Payloads = nil
			} else {
				in.Delim('[')
				if out.Payloads == nil {
					if !in.IsDelim(']') {
						out.Payloads = make([]*Profile, 0, 8)
					} else {
						out.Payloads = []*Profile{}
					}
				} else {
					out.Payloads = (out.Payloads)[:0]
				}
				for !in.IsDelim(']') {
					var v41 *Profile
					if in.IsNull() {
						in.Skip()
						v41 = nil
					} else {
						if v41 == nil {
							v41 = new(Profile)
						}
						(*v41).UnmarshalEasyJSON(in)
					}
					out.Payloads = append(out.Payloads, v41)
					in.WantComma()
				}
				in.Delim(']')
			}
			PayloadsSet = true
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !PayloadsSet {
		in.AddError(fmt.Errorf("key 'payloads' is required"))
	}
}
func easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBaz7(out *jwriter.Writer, in GetProfileResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"payloads\":"
		out.RawString(prefix[1:])
		if in.Payloads == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v42, v43 := range in.Payloads {
				if v42 > 0 {
					out.RawByte(',')
				}
				if v43 == nil {
					out.RawString("null")
				} else {
					(*v43).MarshalEasyJSON(out)
				}
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v GetProfileResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBaz7(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v GetProfileResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBaz7(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *GetProfileResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBaz7(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *GetProfileResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBaz7(l, v)
}
func easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBaz8(in *jlexer.Lexer, out *GetProfileRequest) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var TargetSet bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "target":
			out.Target = UUID(in.String())
			TargetSet = true
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !TargetSet {
		in.AddError(fmt.Errorf("key 'target' is required"))
	}
}
func easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBaz8(out *jwriter.Writer, in GetProfileRequest) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"target\":"
		out.RawString(prefix[1:])
		out.String(string(in.Target))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v GetProfileRequest) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBaz8(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v GetProfileRequest) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBaz8(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *GetProfileRequest) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBaz8(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *GetProfileRequest) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBaz8(l, v)
}
func easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBaz9(in *jlexer.Lexer, out *BazRequest) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var B1Set bool
	var S2Set bool
	var I3Set bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "b1":
			out.B1 = bool(in.Bool())
			B1Set = true
		case "s2":
			out.S2 = string(in.String())
			S2Set = true
		case "i3":
			out.I3 = int32(in.Int32())
			I3Set = true
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !B1Set {
		in.AddError(fmt.Errorf("key 'b1' is required"))
	}
	if !S2Set {
		in.AddError(fmt.Errorf("key 's2' is required"))
	}
	if !I3Set {
		in.AddError(fmt.Errorf("key 'i3' is required"))
	}
}
func easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBaz9(out *jwriter.Writer, in BazRequest) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"b1\":"
		out.RawString(prefix[1:])
		out.Bool(bool(in.B1))
	}
	{
		const prefix string = ",\"s2\":"
		out.RawString(prefix)
		out.String(string(in.S2))
	}
	{
		const prefix string = ",\"i3\":"
		out.RawString(prefix)
		out.Int32(int32(in.I3))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v BazRequest) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBaz9(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v BazRequest) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBaz9(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *BazRequest) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBaz9(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *BazRequest) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBaz9(l, v)
}
func easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBaz10(in *jlexer.Lexer, out *AuthErr) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var MessageSet bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "message":
			out.Message = string(in.String())
			MessageSet = true
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !MessageSet {
		in.AddError(fmt.Errorf("key 'message' is required"))
	}
}
func easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBaz10(out *jwriter.Writer, in AuthErr) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"message\":"
		out.RawString(prefix[1:])
		out.String(string(in.Message))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v AuthErr) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBaz10(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v AuthErr) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson1bcb5839EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBaz10(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *AuthErr) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBaz10(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *AuthErr) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson1bcb5839DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBazBaz10(l, v)
}
