// Code generated by zanzibar
// @generated
// Checksum : JnlD75sfDEVr+Wxq3kjtzw==
// Code generated by easyjson for marshaling/unmarshaling. DO NOT EDIT.

package bar

import (
	json "encoding/json"
	fmt "fmt"
	easyjson "github.com/mailru/easyjson"
	jlexer "github.com/mailru/easyjson/jlexer"
	jwriter "github.com/mailru/easyjson/jwriter"
)

// suppress unused package warning
var (
	_ *json.RawMessage
	_ *jlexer.Lexer
	_ *jwriter.Writer
	_ easyjson.Marshaler
)

func easyjsonC7ba4253DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBarBarMapI32BarResponseItem(in *jlexer.Lexer, out *_Map_I32_BarResponse_Item_Zapper) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "Key":
			out.Key = int32(in.Int32())
		case "Value":
			if in.IsNull() {
				in.Skip()
				out.Value = nil
			} else {
				if out.Value == nil {
					out.Value = new(BarResponse)
				}
				(*out.Value).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC7ba4253EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBarBarMapI32BarResponseItem(out *jwriter.Writer, in _Map_I32_BarResponse_Item_Zapper) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"Key\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.Int32(int32(in.Key))
	}
	{
		const prefix string = ",\"Value\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		if in.Value == nil {
			out.RawString("null")
		} else {
			(*in.Value).MarshalEasyJSON(out)
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v _Map_I32_BarResponse_Item_Zapper) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC7ba4253EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBarBarMapI32BarResponseItem(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v _Map_I32_BarResponse_Item_Zapper) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC7ba4253EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBarBarMapI32BarResponseItem(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *_Map_I32_BarResponse_Item_Zapper) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC7ba4253DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBarBarMapI32BarResponseItem(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *_Map_I32_BarResponse_Item_Zapper) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC7ba4253DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBarBarMapI32BarResponseItem(l, v)
}
func easyjsonC7ba4253DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBarBarEchoEchoI32Map(in *jlexer.Lexer, out *Echo_EchoI32Map_Result) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "success":
			if in.IsNull() {
				in.Skip()
			} else {
				in.Delim('{')
				if !in.IsDelim('}') {
					out.Success = make(map[int32]*BarResponse)
				} else {
					out.Success = nil
				}
				for !in.IsDelim('}') {
					key := int32(in.Int32Str())
					in.WantColon()
					var v1 *BarResponse
					if in.IsNull() {
						in.Skip()
						v1 = nil
					} else {
						if v1 == nil {
							v1 = new(BarResponse)
						}
						(*v1).UnmarshalEasyJSON(in)
					}
					(out.Success)[key] = v1
					in.WantComma()
				}
				in.Delim('}')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC7ba4253EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBarBarEchoEchoI32Map(out *jwriter.Writer, in Echo_EchoI32Map_Result) {
	out.RawByte('{')
	first := true
	_ = first
	if len(in.Success) != 0 {
		const prefix string = ",\"success\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		{
			out.RawByte('{')
			v2First := true
			for v2Name, v2Value := range in.Success {
				if v2First {
					v2First = false
				} else {
					out.RawByte(',')
				}
				out.Int32Str(int32(v2Name))
				out.RawByte(':')
				if v2Value == nil {
					out.RawString("null")
				} else {
					(*v2Value).MarshalEasyJSON(out)
				}
			}
			out.RawByte('}')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Echo_EchoI32Map_Result) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC7ba4253EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBarBarEchoEchoI32Map(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Echo_EchoI32Map_Result) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC7ba4253EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBarBarEchoEchoI32Map(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Echo_EchoI32Map_Result) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC7ba4253DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBarBarEchoEchoI32Map(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Echo_EchoI32Map_Result) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC7ba4253DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBarBarEchoEchoI32Map(l, v)
}
func easyjsonC7ba4253DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBarBarEchoEchoI32Map1(in *jlexer.Lexer, out *Echo_EchoI32Map_Args) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	var ArgSet bool
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "arg":
			if in.IsNull() {
				in.Skip()
			} else {
				in.Delim('{')
				if !in.IsDelim('}') {
					out.Arg = make(map[int32]*BarResponse)
				} else {
					out.Arg = nil
				}
				for !in.IsDelim('}') {
					key := int32(in.Int32Str())
					in.WantColon()
					var v3 *BarResponse
					if in.IsNull() {
						in.Skip()
						v3 = nil
					} else {
						if v3 == nil {
							v3 = new(BarResponse)
						}
						(*v3).UnmarshalEasyJSON(in)
					}
					(out.Arg)[key] = v3
					in.WantComma()
				}
				in.Delim('}')
			}
			ArgSet = true
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
	if !ArgSet {
		in.AddError(fmt.Errorf("key 'arg' is required"))
	}
}
func easyjsonC7ba4253EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBarBarEchoEchoI32Map1(out *jwriter.Writer, in Echo_EchoI32Map_Args) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"arg\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		if in.Arg == nil && (out.Flags&jwriter.NilMapAsEmpty) == 0 {
			out.RawString(`null`)
		} else {
			out.RawByte('{')
			v4First := true
			for v4Name, v4Value := range in.Arg {
				if v4First {
					v4First = false
				} else {
					out.RawByte(',')
				}
				out.Int32Str(int32(v4Name))
				out.RawByte(':')
				if v4Value == nil {
					out.RawString("null")
				} else {
					(*v4Value).MarshalEasyJSON(out)
				}
			}
			out.RawByte('}')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Echo_EchoI32Map_Args) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC7ba4253EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBarBarEchoEchoI32Map1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Echo_EchoI32Map_Args) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC7ba4253EncodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBarBarEchoEchoI32Map1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Echo_EchoI32Map_Args) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC7ba4253DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBarBarEchoEchoI32Map1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Echo_EchoI32Map_Args) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC7ba4253DecodeGithubComUberZanzibarExamplesExampleGatewayBuildGenCodeClientsBarBarEchoEchoI32Map1(l, v)
}
