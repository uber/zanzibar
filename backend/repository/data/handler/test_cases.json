[
	{
		"name": "get the config for one endpoint by ID",
		"request": {
			"method": "GET",
			"url": "/endpoint/googlenow.addCredentials",
			"header": {
				"gateway-id": "example-gateway"
			}
		},
		"response": {
			"code": 200,
			"body": {
				"clientId": "google-now",
				"clientMethod": "AddCredentials",
				"endpointId": "googlenow",
				"endpointType": "http",
				"handleId": "addCredentials",
				"middlewares": null,
				"reqHeaderMap": null,
				"resHeaderMap": null,
				"testFixtures": null,
				"thriftFile": "endpoints/googlenow/googlenow.thrift",
				"thriftMethodName": "GoogleNow::addCredentials",
				"workflowType": "httpClient"
			}
		}
	},
	{
		"name": "get the config for client bar",
		"request": {
			"method": "GET",
			"url": "/client/bar",
			"header": {
				"gateway-id": "example-gateway"
			}
		},
		"response": {
			"code": 200,
			"body": {
				"exposedMethods": {
					"ArgNotStruct": "Bar::argNotStruct",
					"ArgWithHeaders": "Bar::argWithHeaders",
					"ArgWithManyQueryParams": "Bar::argWithManyQueryParams",
					"ArgWithNestedQueryParams": "Bar::argWithNestedQueryParams",
					"ArgWithParams": "Bar::argWithParams",
					"ArgWithQueryHeader": "Bar::argWithQueryHeader",
					"ArgWithQueryParams": "Bar::argWithQueryParams",
					"EchoBinary": "Echo::echoBinary",
					"EchoBool": "Echo::echoBool",
					"EchoDouble": "Echo::echoDouble",
					"EchoEnum": "Echo::echoEnum",
					"EchoI16": "Echo::echoI16",
					"EchoI32": "Echo::echoI32",
					"EchoI32Map": "Echo::echoI32Map",
					"EchoI64": "Echo::echoI64",
					"EchoI8": "Echo::echoI8",
					"EchoString": "Echo::echoString",
					"EchoStringList": "Echo::echoStringList",
					"EchoStringMap": "Echo::echoStringMap",
					"EchoStringSet": "Echo::echoStringSet",
					"EchoStructList": "Echo::echoStructList",
					"EchoStructMap": "Echo::echoStructMap",
					"EchoStructSet": "Echo::echoStructSet",
					"EchoTypedef": "Echo::echoTypedef",
					"Hello": "Bar::helloWorld",
					"MissingArg": "Bar::missingArg",
					"NoRequest": "Bar::noRequest",
					"Normal": "Bar::normal",
					"NormalRecur": "Bar::normalRecur",
					"TooManyArgs": "Bar::tooManyArgs"
				},
				"ip": "127.0.0.1",
				"name": "bar",
				"port": 4001,
				"routingKey": "",
				"thriftFile": "clients/bar/bar.thrift",
				"type": "http"
			}
		}
	},
	{
		"name": "get the config for all clients",
		"request": {
			"method": "GET",
			"url": "/clients",
			"header": {
				"gateway-id": "example-gateway"
			}
		},
		"response": {
			"code": 200,
			"body": {
				"bar": {
					"exposedMethods": {
						"ArgNotStruct": "Bar::argNotStruct",
						"ArgWithHeaders": "Bar::argWithHeaders",
						"ArgWithManyQueryParams": "Bar::argWithManyQueryParams",
						"ArgWithNestedQueryParams": "Bar::argWithNestedQueryParams",
						"ArgWithParams": "Bar::argWithParams",
						"ArgWithQueryHeader": "Bar::argWithQueryHeader",
						"ArgWithQueryParams": "Bar::argWithQueryParams",
						"EchoBinary": "Echo::echoBinary",
						"EchoBool": "Echo::echoBool",
						"EchoDouble": "Echo::echoDouble",
						"EchoEnum": "Echo::echoEnum",
						"EchoI16": "Echo::echoI16",
						"EchoI32": "Echo::echoI32",
						"EchoI32Map": "Echo::echoI32Map",
						"EchoI64": "Echo::echoI64",
						"EchoI8": "Echo::echoI8",
						"EchoString": "Echo::echoString",
						"EchoStringList": "Echo::echoStringList",
						"EchoStringMap": "Echo::echoStringMap",
						"EchoStringSet": "Echo::echoStringSet",
						"EchoStructList": "Echo::echoStructList",
						"EchoStructMap": "Echo::echoStructMap",
						"EchoStructSet": "Echo::echoStructSet",
						"EchoTypedef": "Echo::echoTypedef",
						"Hello": "Bar::helloWorld",
						"MissingArg": "Bar::missingArg",
						"NoRequest": "Bar::noRequest",
						"Normal": "Bar::normal",
						"NormalRecur": "Bar::normalRecur",
						"TooManyArgs": "Bar::tooManyArgs"
					},
					"ip": "127.0.0.1",
					"name": "bar",
					"port": 4001,
					"routingKey": "",
					"thriftFile": "clients/bar/bar.thrift",
					"type": "http"
				},
				"baz": {
					"clientTimeout": 10000,
					"clientTimeoutPerAttempt": 2000,
					"exposedMethods": {
						"Call": "SimpleService::call",
						"Compare": "SimpleService::compare",
						"DeliberateDiffNoop": "SimpleService::sillyNoop",
						"EchoBinary": "SecondService::echoBinary",
						"EchoBool": "SecondService::echoBool",
						"EchoDouble": "SecondService::echoDouble",
						"EchoEnum": "SecondService::echoEnum",
						"EchoI16": "SecondService::echoI16",
						"EchoI32": "SecondService::echoI32",
						"EchoI64": "SecondService::echoI64",
						"EchoI8": "SecondService::echoI8",
						"EchoString": "SecondService::echoString",
						"EchoStringList": "SecondService::echoStringList",
						"EchoStringMap": "SecondService::echoStringMap",
						"EchoStringSet": "SecondService::echoStringSet",
						"EchoStructList": "SecondService::echoStructList",
						"EchoStructMap": "SecondService::echoStructMap",
						"EchoStructSet": "SecondService::echoStructSet",
						"EchoTypedef": "SecondService::echoTypedef",
						"Ping": "SimpleService::ping",
						"TestUUID": "SimpleService::testUuid",
						"Trans": "SimpleService::trans",
						"URLTest": "SimpleService::urlTest"
					},
					"ip": "127.0.0.1",
					"name": "baz",
					"port": 4002,
					"routingKey": "",
					"serviceName": "Qux",
					"thriftFile": "clients/baz/baz.thrift",
					"type": "tchannel"
				},
				"contacts": {
					"exposedMethods": {
						"SaveContacts": "Contacts::saveContacts",
						"TestURLURL": "Contacts::testUrlUrl"
					},
					"ip": "127.0.0.1",
					"name": "contacts",
					"port": 4000,
					"routingKey": "",
					"thriftFile": "clients/contacts/contacts.thrift",
					"type": "http"
				},
				"corge": {
					"clientTimeout": 10000,
					"clientTimeoutPerAttempt": 2000,
					"exposedMethods": {
						"EchoString": "Corge::echoString"
					},
					"ip": "127.0.0.1",
					"name": "corge",
					"port": 5000,
					"routingKey": "",
					"serviceName": "Corge",
					"thriftFile": "clients/corge/corge.thrift",
					"type": "tchannel"
				},
				"google-now": {
					"exposedMethods": {
						"AddCredentials": "GoogleNowService::addCredentials",
						"CheckCredentials": "GoogleNowService::checkCredentials"
					},
					"ip": "127.0.0.1",
					"name": "google-now",
					"port": 14120,
					"routingKey": "",
					"thriftFile": "clients/googlenow/googlenow.thrift",
					"type": "http"
				},
				"quux": {
					"name": "quux",
					"routingKey": "",
					"type": "custom"
				}
			}
		}
	},
	{
		"name": "get the config for all middlewares",
		"request": {
			"method": "GET",
			"url": "/middlewares",
			"header": {
				"gateway-id": "example-gateway"
			}
		},
		"response": {
			"code": 200,
			"body": {
				"example": {
					"$schema": "http://json-schema.org/schema#",
					"properties": {
						"Bar": {
							"type": "integer"
						},
						"Baz": {
							"items": {
								"type": "string"
							},
							"type": "array"
						},
						"Foo": {
							"type": "string"
						}
					},
					"required": [
						"Foo"
					],
					"type": "object"
				},
				"example_reader": {
					"$schema": "http://json-schema.org/schema#",
					"properties": {
						"Foo": {
							"type": "string"
						}
					},
					"required": [
						"Foo"
					],
					"type": "object"
				}
			}
		}
	},
	{
		"name": "get the list of all thrift files in a gateway",
		"request": {
			"method": "GET",
			"url": "/thrift-list",
			"header": {
				"gateway-id": "example-gateway"
			}
		},
		"response": {
			"code": 200,
			"body": {
				"clients/bar/bar.thrift": {
					"path": "clients/bar/bar.thrift",
					"version": "v1"
				},
				"clients/baz/base.thrift": {
					"path": "clients/baz/base.thrift",
					"version": "v1"
				},
				"clients/baz/baz.thrift": {
					"path": "clients/baz/baz.thrift",
					"version": "v1"
				},
				"clients/contacts/contacts.thrift": {
					"path": "clients/contacts/contacts.thrift",
					"version": "v1"
				},
				"clients/corge/corge.thrift": {
					"path": "clients/corge/corge.thrift",
					"version": "v1"
				},
				"clients/foo/foo.thrift": {
					"path": "clients/foo/foo.thrift",
					"version": "v1"
				},
				"clients/googlenow/googlenow.thrift": {
					"path": "clients/googlenow/googlenow.thrift",
					"version": "v1"
				},
				"endpoints/bar/bar.thrift": {
					"path": "endpoints/bar/bar.thrift",
					"version": "v1"
				},
				"endpoints/baz/baz.thrift": {
					"path": "endpoints/baz/baz.thrift",
					"version": "v1"
				},
				"endpoints/contacts/contacts.thrift": {
					"path": "endpoints/contacts/contacts.thrift",
					"version": "v1"
				},
				"endpoints/foo/foo.thrift": {
					"path": "endpoints/foo/foo.thrift",
					"version": "v1"
				},
				"endpoints/googlenow/googlenow.thrift": {
					"path": "endpoints/googlenow/googlenow.thrift",
					"version": "v1"
				},
				"endpoints/tchannel/baz/baz.thrift": {
					"path": "endpoints/tchannel/baz/baz.thrift",
					"version": "v1"
				}
			}
		}
	},
	{
		"name": "get the services in all thrift files in a gateway",
		"request": {
			"method": "GET",
			"url": "/thrift-services",
			"header": {
				"gateway-id": "example-gateway"
			}
		},
		"response": {
			"code": 200,
			"body": {
				"clients/bar/bar.thrift": {
					"Bar": {
						"Methods": [
							{
								"Name": "argNotStruct",
								"Type": "http"
							},
							{
								"Name": "argWithHeaders",
								"Type": "http"
							},
							{
								"Name": "argWithManyQueryParams",
								"Type": "http"
							},
							{
								"Name": "argWithNestedQueryParams",
								"Type": "http"
							},
							{
								"Name": "argWithParams",
								"Type": "http"
							},
							{
								"Name": "argWithQueryHeader",
								"Type": "http"
							},
							{
								"Name": "argWithQueryParams",
								"Type": "http"
							},
							{
								"Name": "helloWorld",
								"Type": "http"
							},
							{
								"Name": "missingArg",
								"Type": "http"
							},
							{
								"Name": "noRequest",
								"Type": "http"
							},
							{
								"Name": "normal",
								"Type": "http"
							},
							{
								"Name": "normalRecur",
								"Type": "http"
							},
							{
								"Name": "tooManyArgs",
								"Type": "http"
							}
						],
						"Name": "Bar",
						"Path": "clients/bar/bar.thrift"
					},
					"Echo": {
						"Methods": [
							{
								"Name": "echoBinary",
								"Type": "http"
							},
							{
								"Name": "echoBool",
								"Type": "http"
							},
							{
								"Name": "echoDouble",
								"Type": "http"
							},
							{
								"Name": "echoEnum",
								"Type": "http"
							},
							{
								"Name": "echoI16",
								"Type": "http"
							},
							{
								"Name": "echoI32",
								"Type": "http"
							},
							{
								"Name": "echoI32Map",
								"Type": "http"
							},
							{
								"Name": "echoI64",
								"Type": "http"
							},
							{
								"Name": "echoI8",
								"Type": "http"
							},
							{
								"Name": "echoString",
								"Type": "http"
							},
							{
								"Name": "echoStringList",
								"Type": "http"
							},
							{
								"Name": "echoStringMap",
								"Type": "http"
							},
							{
								"Name": "echoStringSet",
								"Type": "http"
							},
							{
								"Name": "echoStructList",
								"Type": "http"
							},
							{
								"Name": "echoStructMap",
								"Type": "http"
							},
							{
								"Name": "echoStructSet",
								"Type": "http"
							},
							{
								"Name": "echoTypedef",
								"Type": "http"
							}
						],
						"Name": "Echo",
						"Path": "clients/bar/bar.thrift"
					}
				},
				"clients/baz/base.thrift": {},
				"clients/baz/baz.thrift": {
					"SecondService": {
						"Methods": [
							{
								"Name": "echoBinary",
								"Type": "tchannel"
							},
							{
								"Name": "echoBool",
								"Type": "tchannel"
							},
							{
								"Name": "echoDouble",
								"Type": "tchannel"
							},
							{
								"Name": "echoEnum",
								"Type": "tchannel"
							},
							{
								"Name": "echoI16",
								"Type": "tchannel"
							},
							{
								"Name": "echoI32",
								"Type": "tchannel"
							},
							{
								"Name": "echoI64",
								"Type": "tchannel"
							},
							{
								"Name": "echoI8",
								"Type": "tchannel"
							},
							{
								"Name": "echoString",
								"Type": "tchannel"
							},
							{
								"Name": "echoStringList",
								"Type": "tchannel"
							},
							{
								"Name": "echoStringMap",
								"Type": "tchannel"
							},
							{
								"Name": "echoStringSet",
								"Type": "tchannel"
							},
							{
								"Name": "echoStructList",
								"Type": "tchannel"
							},
							{
								"Name": "echoStructMap",
								"Type": "tchannel"
							},
							{
								"Name": "echoStructSet",
								"Type": "tchannel"
							},
							{
								"Name": "echoTypedef",
								"Type": "tchannel"
							}
						],
						"Name": "SecondService",
						"Path": "clients/baz/baz.thrift"
					},
					"SimpleService": {
						"Methods": [
							{
								"Name": "call",
								"Type": "tchannel"
							},
							{
								"Name": "compare",
								"Type": "tchannel"
							},
							{
								"Name": "ping",
								"Type": "tchannel"
							},
							{
								"Name": "sillyNoop",
								"Type": "tchannel"
							},
							{
								"Name": "testUuid",
								"Type": "tchannel"
							},
							{
								"Name": "trans",
								"Type": "tchannel"
							},
							{
								"Name": "urlTest",
								"Type": "tchannel"
							}
						],
						"Name": "SimpleService",
						"Path": "clients/baz/baz.thrift"
					}
				},
				"clients/contacts/contacts.thrift": {
					"Contacts": {
						"Methods": [
							{
								"Name": "saveContacts",
								"Type": "http"
							},
							{
								"Name": "testUrlUrl",
								"Type": "http"
							}
						],
						"Name": "Contacts",
						"Path": "clients/contacts/contacts.thrift"
					}
				},
				"clients/corge/corge.thrift": {
					"Corge": {
						"Methods": [
							{
								"Name": "echoBool",
								"Type": "tchannel"
							},
							{
								"Name": "echoString",
								"Type": "tchannel"
							}
						],
						"Name": "Corge",
						"Path": "clients/corge/corge.thrift"
					}
				},
				"clients/foo/base/base.thrift": {},
				"clients/foo/foo.thrift": {},
				"clients/googlenow/googlenow.thrift": {
					"GoogleNowService": {
						"Methods": [
							{
								"Name": "addCredentials",
								"Type": "http"
							},
							{
								"Name": "checkCredentials",
								"Type": "http"
							}
						],
						"Name": "GoogleNowService",
						"Path": "clients/googlenow/googlenow.thrift"
					}
				},
				"endpoints/bar/bar.thrift": {
					"Bar": {
						"Methods": [
							{
								"Name": "argNotStruct",
								"Type": "http"
							},
							{
								"Name": "argWithHeaders",
								"Type": "http"
							},
							{
								"Name": "argWithManyQueryParams",
								"Type": "http"
							},
							{
								"Name": "argWithNestedQueryParams",
								"Type": "http"
							},
							{
								"Name": "argWithParams",
								"Type": "http"
							},
							{
								"Name": "argWithQueryHeader",
								"Type": "http"
							},
							{
								"Name": "argWithQueryParams",
								"Type": "http"
							},
							{
								"Name": "helloWorld",
								"Type": "http"
							},
							{
								"Name": "missingArg",
								"Type": "http"
							},
							{
								"Name": "noRequest",
								"Type": "http"
							},
							{
								"Name": "normal",
								"Type": "http"
							},
							{
								"Name": "tooManyArgs",
								"Type": "http"
							}
						],
						"Name": "Bar",
						"Path": "endpoints/bar/bar.thrift"
					}
				},
				"endpoints/baz/baz.thrift": {
					"SimpleService": {
						"Methods": [
							{
								"Name": "call",
								"Type": "http"
							},
							{
								"Name": "compare",
								"Type": "http"
							},
							{
								"Name": "ping",
								"Type": "http"
							},
							{
								"Name": "sillyNoop",
								"Type": "http"
							},
							{
								"Name": "testUuid",
								"Type": "http"
							},
							{
								"Name": "trans",
								"Type": "http"
							},
							{
								"Name": "urlTest",
								"Type": "http"
							}
						],
						"Name": "SimpleService",
						"Path": "endpoints/baz/baz.thrift"
					}
				},
				"endpoints/contacts/contacts.thrift": {
					"Contacts": {
						"Methods": [
							{
								"Name": "saveContacts",
								"Type": "http"
							},
							{
								"Name": "testUrlUrl",
								"Type": "http"
							}
						],
						"Name": "Contacts",
						"Path": "endpoints/contacts/contacts.thrift"
					}
				},
				"endpoints/foo/base/base.thrift": {},
				"endpoints/foo/foo.thrift": {},
				"endpoints/googlenow/googlenow.thrift": {
					"GoogleNow": {
						"Methods": [
							{
								"Name": "addCredentials",
								"Type": "http"
							},
							{
								"Name": "checkCredentials",
								"Type": "http"
							}
						],
						"Name": "GoogleNow",
						"Path": "endpoints/googlenow/googlenow.thrift"
					}
				},
				"endpoints/tchannel/baz/baz.thrift": {
					"SimpleService": {
						"Methods": [
							{
								"Name": "Call",
								"Type": "http"
							},
							{
								"Name": "Compare",
								"Type": "http"
							},
							{
								"Name": "Ping",
								"Type": "http"
							},
							{
								"Name": "SillyNoop",
								"Type": "http"
							}
						],
						"Name": "SimpleService",
						"Path": "endpoints/tchannel/baz/baz.thrift"
					}
				}
			}
		}
	},
	{
		"name": "get the http serives in a thrift file in a gateway",
		"request": {
			"method": "GET",
			"url": "/thrift-service/endpoints/googlenow/googlenow.thrift",
			"header": {
				"gateway-id": "example-gateway"
			}
		},
		"response": {
			"code": 200,
			"body": {
				"GoogleNow": {
					"Methods": [
						{
							"Name": "addCredentials",
							"Type": "http"
						},
						{
							"Name": "checkCredentials",
							"Type": "http"
						}
					],
					"Name": "GoogleNow",
					"Path": "endpoints/googlenow/googlenow.thrift"
				}
			}
		}
	},
	{
		"name": "get the thrift serives in a thrift file in a gateway",
		"request": {
			"method": "GET",
			"url": "/thrift-service/clients/baz/baz.thrift",
			"header": {
				"gateway-id": "example-gateway"
			}
		},
		"response": {
			"code": 200,
			"body": {
				"SecondService": {
					"Methods": [
						{
							"Name": "echoBinary",
							"Type": "tchannel"
						},
						{
							"Name": "echoBool",
							"Type": "tchannel"
						},
						{
							"Name": "echoDouble",
							"Type": "tchannel"
						},
						{
							"Name": "echoEnum",
							"Type": "tchannel"
						},
						{
							"Name": "echoI16",
							"Type": "tchannel"
						},
						{
							"Name": "echoI32",
							"Type": "tchannel"
						},
						{
							"Name": "echoI64",
							"Type": "tchannel"
						},
						{
							"Name": "echoI8",
							"Type": "tchannel"
						},
						{
							"Name": "echoString",
							"Type": "tchannel"
						},
						{
							"Name": "echoStringList",
							"Type": "tchannel"
						},
						{
							"Name": "echoStringMap",
							"Type": "tchannel"
						},
						{
							"Name": "echoStringSet",
							"Type": "tchannel"
						},
						{
							"Name": "echoStructList",
							"Type": "tchannel"
						},
						{
							"Name": "echoStructMap",
							"Type": "tchannel"
						},
						{
							"Name": "echoStructSet",
							"Type": "tchannel"
						},
						{
							"Name": "echoTypedef",
							"Type": "tchannel"
						}
					],
					"Name": "SecondService",
					"Path": "clients/baz/baz.thrift"
				},
				"SimpleService": {
					"Methods": [
						{
							"Name": "call",
							"Type": "tchannel"
						},
						{
							"Name": "compare",
							"Type": "tchannel"
						},
						{
							"Name": "ping",
							"Type": "tchannel"
						},
						{
							"Name": "sillyNoop",
							"Type": "tchannel"
						},
						{
							"Name": "testUuid",
							"Type": "tchannel"
						},
						{
							"Name": "trans",
							"Type": "tchannel"
						},
						{
							"Name": "urlTest",
							"Type": "tchannel"
						}
					],
					"Name": "SimpleService",
					"Path": "clients/baz/baz.thrift"
				}
			}
		}
	},
	{
		"name": "get the meta of a thrift file in a gateway",
		"request": {
			"method": "GET",
			"url": "/thrift-file/clients/baz/baz.thrift",
			"header": {
				"gateway-id": "example-gateway"
			}
		},
		"response": {
			"code": 200,
			"body": {
				"content": "namespace java com.uber.zanzibar.clients.baz\ninclude \"base.thrift\"\n\nenum Fruit {\n   APPLE,\n   BANANA\n}\n\nstruct BazRequest {\n    1: required bool b1\n    2: required string s2\n    3: required i32 i3\n}\n\nexception AuthErr {\n    1: required string message\n}\n\nexception OtherAuthErr {\n  1: required string message\n}\n\nservice SimpleService {\n    base.BazResponse compare(\n        1: required BazRequest arg1\n        2: required BazRequest arg2\n    ) throws (\n        1: AuthErr authErr\n        2: OtherAuthErr otherAuthErr\n    )\n\n    base.TransStruct trans(\n        1: required base.TransStruct arg1\n        2: optional base.TransStruct arg2\n    ) throws (\n        1: AuthErr authErr\n        2: OtherAuthErr otherAuthErr\n    )\n\n    void call(\n        1: required BazRequest arg\n    ) throws (\n        1: AuthErr authErr\n    ) (\n        zanzibar.http.reqHeaders = \"x-uuid,x-token\"\n        zanzibar.http.resHeaders = \"some-res-header\"\n    )\n\n    base.BazResponse ping() ()\n\n    void sillyNoop() throws (\n        1: AuthErr authErr\n        2: base.ServerErr serverErr\n    )\n\n    void testUuid()\n    void urlTest()\n}\n\nservice SecondService {\n    i8 echoI8 (\n        1: required i8 arg\n    )\n\n    i16 echoI16(\n        1: required i16 arg\n    )\n\n    i32 echoI32(\n        1: required i32 arg\n    )\n\n    i64 echoI64(\n        1: required i64 arg\n    )\n\n    double echoDouble(\n        1: required double arg\n    )\n\n    bool echoBool (\n        1: required bool arg\n    )\n\n    binary echoBinary (\n        1: required binary arg\n    )\n\n    string echoString(\n        1: required string arg\n    )\n\n    Fruit echoEnum (\n        1: required Fruit arg = Fruit.APPLE\n    )\n\n    base.UUID echoTypedef(\n        1: required base.UUID arg\n    )\n\n    set\u003cstring\u003e echoStringSet(\n        1: required set\u003cstring\u003e arg\n    )\n\n    // value is unhashable\n    set\u003cbase.BazResponse\u003e echoStructSet(\n        1: required set\u003cbase.BazResponse\u003e arg\n    )\n\n    list\u003cstring\u003e echoStringList (\n        1: required list\u003cstring\u003e arg\n    )\n\n    list\u003cbase.BazResponse\u003e echoStructList (\n        1: required list\u003cbase.BazResponse\u003e arg\n    )\n\n    map\u003cstring, base.BazResponse\u003e echoStringMap (\n        1: required map\u003cstring, base.BazResponse\u003e arg\n    )\n\n    // key is unhashable\n    map\u003cbase.BazResponse, string\u003e echoStructMap (\n        1: required map\u003cbase.BazResponse, string\u003e arg\n    )\n}\n",
				"path": "clients/baz/baz.thrift",
				"version": "v1"
			}
		}
	},
	{
		"name": "get the module structure of thrift code",
		"request": {
			"method": "POST",
			"url": "/thrift-file-code/clients/baz/baz.thrift",
			"header": {
				"gateway-id": "example-gateway"
			},
			"body": {
				"content": "namespace java com.uber.zanzibar.clients.baz\ninclude \"base.thrift\"\ntypedef base.UUID SomeThing\nconst SomeThing theThing = 'ABC'\n"
			}
		},
		"response": {
			"code": 200,
			"body": {
				"constants": {
					"theThing": {
						"file": "clients/baz/baz.thrift",
						"line": 4,
						"name": "theThing",
						"type": {
							"name": "SomeThing"
						},
						"value": "\"ABC\""
					}
				},
				"includes": {
					"base": {
						"line": 2,
						"module": {
							"name": "base",
							"namespace": [
								{
									"line": 1,
									"name": "com.uber.zanzibar.clients.baz",
									"scope": "java"
								}
							],
							"thrift_path": "clients/baz/base.thrift",
							"types": {
								"BazResponse": {
									"file": "clients/baz/base.thrift",
									"line": 10,
									"name": "BazResponse",
									"struct_type": {
										"fields": [
											{
												"id": 1,
												"line": 11,
												"name": "message",
												"required": true,
												"type": {
													"name": "string"
												}
											}
										],
										"kind": "struct"
									}
								},
								"NestedStruct": {
									"file": "clients/baz/base.thrift",
									"line": 5,
									"name": "NestedStruct",
									"struct_type": {
										"fields": [
											{
												"id": 1,
												"line": 6,
												"name": "msg",
												"required": true,
												"type": {
													"name": "string"
												}
											},
											{
												"id": 2,
												"line": 7,
												"name": "check",
												"required": false,
												"type": {
													"name": "i32"
												}
											}
										],
										"kind": "struct"
									}
								},
								"ServerErr": {
									"file": "clients/baz/base.thrift",
									"line": 20,
									"name": "ServerErr",
									"struct_type": {
										"fields": [
											{
												"id": 1,
												"line": 21,
												"name": "message",
												"required": true,
												"type": {
													"name": "string"
												}
											}
										],
										"kind": "exception"
									}
								},
								"TransStruct": {
									"file": "clients/baz/base.thrift",
									"line": 14,
									"name": "TransStruct",
									"struct_type": {
										"fields": [
											{
												"id": 1,
												"line": 15,
												"name": "message",
												"required": true,
												"type": {
													"name": "string"
												}
											},
											{
												"id": 2,
												"line": 16,
												"name": "driver",
												"required": false,
												"type": {
													"name": "NestedStruct"
												}
											},
											{
												"id": 3,
												"line": 17,
												"name": "rider",
												"required": true,
												"type": {
													"name": "NestedStruct"
												}
											}
										],
										"kind": "struct"
									}
								},
								"UUID": {
									"file": "clients/baz/base.thrift",
									"line": 3,
									"name": "UUID",
									"type_def_target": {
										"name": "string"
									}
								}
							}
						},
						"name": "base"
					}
				},
				"name": "baz",
				"namespace": [
					{
						"line": 1,
						"name": "com.uber.zanzibar.clients.baz",
						"scope": "java"
					}
				],
				"thrift_path": "clients/baz/baz.thrift",
				"types": {
					"SomeThing": {
						"file": "clients/baz/baz.thrift",
						"line": 3,
						"name": "SomeThing",
						"type_def_target": {
							"name": "base.UUID"
						}
					}
				}
			}
		}
	},
	{
		"name": "get the module structure of a thrift file in a gateway",
		"request": {
			"method": "GET",
			"url": "/thrift-file-compiled/clients/baz/baz.thrift",
			"header": {
				"gateway-id": "example-gateway"
			}
		},
		"response": {
			"code": 200,
			"body": {
				"includes": {
					"base": {
						"line": 2,
						"module": {
							"name": "base",
							"namespace": [
								{
									"line": 1,
									"name": "com.uber.zanzibar.clients.baz",
									"scope": "java"
								}
							],
							"thrift_path": "clients/baz/base.thrift",
							"types": {
								"BazResponse": {
									"file": "clients/baz/base.thrift",
									"line": 10,
									"name": "BazResponse",
									"struct_type": {
										"fields": [
											{
												"id": 1,
												"line": 11,
												"name": "message",
												"required": true,
												"type": {
													"name": "string"
												}
											}
										],
										"kind": "struct"
									}
								},
								"NestedStruct": {
									"file": "clients/baz/base.thrift",
									"line": 5,
									"name": "NestedStruct",
									"struct_type": {
										"fields": [
											{
												"id": 1,
												"line": 6,
												"name": "msg",
												"required": true,
												"type": {
													"name": "string"
												}
											},
											{
												"id": 2,
												"line": 7,
												"name": "check",
												"required": false,
												"type": {
													"name": "i32"
												}
											}
										],
										"kind": "struct"
									}
								},
								"ServerErr": {
									"file": "clients/baz/base.thrift",
									"line": 20,
									"name": "ServerErr",
									"struct_type": {
										"fields": [
											{
												"id": 1,
												"line": 21,
												"name": "message",
												"required": true,
												"type": {
													"name": "string"
												}
											}
										],
										"kind": "exception"
									}
								},
								"TransStruct": {
									"file": "clients/baz/base.thrift",
									"line": 14,
									"name": "TransStruct",
									"struct_type": {
										"fields": [
											{
												"id": 1,
												"line": 15,
												"name": "message",
												"required": true,
												"type": {
													"name": "string"
												}
											},
											{
												"id": 2,
												"line": 16,
												"name": "driver",
												"required": false,
												"type": {
													"name": "NestedStruct"
												}
											},
											{
												"id": 3,
												"line": 17,
												"name": "rider",
												"required": true,
												"type": {
													"name": "NestedStruct"
												}
											}
										],
										"kind": "struct"
									}
								},
								"UUID": {
									"file": "clients/baz/base.thrift",
									"line": 3,
									"name": "UUID",
									"type_def_target": {
										"name": "string"
									}
								}
							}
						},
						"name": "base"
					}
				},
				"name": "baz",
				"namespace": [
					{
						"line": 1,
						"name": "com.uber.zanzibar.clients.baz",
						"scope": "java"
					}
				],
				"services": {
					"SecondService": {
						"file": "clients/baz/baz.thrift",
						"functions": {
							"echoBinary": {
								"args_spec": [
									{
										"id": 1,
										"line": 86,
										"name": "arg",
										"required": true,
										"type": {
											"name": "binary"
										}
									}
								],
								"line": 85,
								"name": "echoBinary",
								"one_way": false,
								"result_spec": {
									"return_type": {
										"name": "binary"
									}
								}
							},
							"echoBool": {
								"args_spec": [
									{
										"id": 1,
										"line": 82,
										"name": "arg",
										"required": true,
										"type": {
											"name": "bool"
										}
									}
								],
								"line": 81,
								"name": "echoBool",
								"one_way": false,
								"result_spec": {
									"return_type": {
										"name": "bool"
									}
								}
							},
							"echoDouble": {
								"args_spec": [
									{
										"id": 1,
										"line": 78,
										"name": "arg",
										"required": true,
										"type": {
											"name": "double"
										}
									}
								],
								"line": 77,
								"name": "echoDouble",
								"one_way": false,
								"result_spec": {
									"return_type": {
										"name": "double"
									}
								}
							},
							"echoEnum": {
								"args_spec": [
									{
										"default": "Fruit.APPLE",
										"id": 1,
										"line": 94,
										"name": "arg",
										"required": true,
										"type": {
											"name": "Fruit"
										}
									}
								],
								"line": 93,
								"name": "echoEnum",
								"one_way": false,
								"result_spec": {
									"return_type": {
										"name": "Fruit"
									}
								}
							},
							"echoI16": {
								"args_spec": [
									{
										"id": 1,
										"line": 66,
										"name": "arg",
										"required": true,
										"type": {
											"name": "i16"
										}
									}
								],
								"line": 65,
								"name": "echoI16",
								"one_way": false,
								"result_spec": {
									"return_type": {
										"name": "i16"
									}
								}
							},
							"echoI32": {
								"args_spec": [
									{
										"id": 1,
										"line": 70,
										"name": "arg",
										"required": true,
										"type": {
											"name": "i32"
										}
									}
								],
								"line": 69,
								"name": "echoI32",
								"one_way": false,
								"result_spec": {
									"return_type": {
										"name": "i32"
									}
								}
							},
							"echoI64": {
								"args_spec": [
									{
										"id": 1,
										"line": 74,
										"name": "arg",
										"required": true,
										"type": {
											"name": "i64"
										}
									}
								],
								"line": 73,
								"name": "echoI64",
								"one_way": false,
								"result_spec": {
									"return_type": {
										"name": "i64"
									}
								}
							},
							"echoI8": {
								"args_spec": [
									{
										"id": 1,
										"line": 62,
										"name": "arg",
										"required": true,
										"type": {
											"name": "byte"
										}
									}
								],
								"line": 61,
								"name": "echoI8",
								"one_way": false,
								"result_spec": {
									"return_type": {
										"name": "byte"
									}
								}
							},
							"echoString": {
								"args_spec": [
									{
										"id": 1,
										"line": 90,
										"name": "arg",
										"required": true,
										"type": {
											"name": "string"
										}
									}
								],
								"line": 89,
								"name": "echoString",
								"one_way": false,
								"result_spec": {
									"return_type": {
										"name": "string"
									}
								}
							},
							"echoStringList": {
								"args_spec": [
									{
										"id": 1,
										"line": 111,
										"name": "arg",
										"required": true,
										"type": {
											"list_value_type": {
												"name": "string"
											},
											"name": "list\u003cstring\u003e"
										}
									}
								],
								"line": 110,
								"name": "echoStringList",
								"one_way": false,
								"result_spec": {
									"return_type": {
										"list_value_type": {
											"name": "string"
										},
										"name": "list\u003cstring\u003e"
									}
								}
							},
							"echoStringMap": {
								"args_spec": [
									{
										"id": 1,
										"line": 119,
										"name": "arg",
										"required": true,
										"type": {
											"map_type": {
												"key_type": {
													"name": "string"
												},
												"value_type": {
													"name": "base.BazResponse"
												}
											},
											"name": "map\u003cstring, base.BazResponse\u003e"
										}
									}
								],
								"line": 118,
								"name": "echoStringMap",
								"one_way": false,
								"result_spec": {
									"return_type": {
										"map_type": {
											"key_type": {
												"name": "string"
											},
											"value_type": {
												"name": "base.BazResponse"
											}
										},
										"name": "map\u003cstring, base.BazResponse\u003e"
									}
								}
							},
							"echoStringSet": {
								"args_spec": [
									{
										"id": 1,
										"line": 102,
										"name": "arg",
										"required": true,
										"type": {
											"name": "set\u003cstring\u003e",
											"set_value_type": {
												"name": "string"
											}
										}
									}
								],
								"line": 101,
								"name": "echoStringSet",
								"one_way": false,
								"result_spec": {
									"return_type": {
										"name": "set\u003cstring\u003e",
										"set_value_type": {
											"name": "string"
										}
									}
								}
							},
							"echoStructList": {
								"args_spec": [
									{
										"id": 1,
										"line": 115,
										"name": "arg",
										"required": true,
										"type": {
											"list_value_type": {
												"name": "base.BazResponse"
											},
											"name": "list\u003cbase.BazResponse\u003e"
										}
									}
								],
								"line": 114,
								"name": "echoStructList",
								"one_way": false,
								"result_spec": {
									"return_type": {
										"list_value_type": {
											"name": "base.BazResponse"
										},
										"name": "list\u003cbase.BazResponse\u003e"
									}
								}
							},
							"echoStructMap": {
								"args_spec": [
									{
										"id": 1,
										"line": 124,
										"name": "arg",
										"required": true,
										"type": {
											"map_type": {
												"key_type": {
													"name": "base.BazResponse"
												},
												"value_type": {
													"name": "string"
												}
											},
											"name": "map\u003cbase.BazResponse, string\u003e"
										}
									}
								],
								"line": 123,
								"name": "echoStructMap",
								"one_way": false,
								"result_spec": {
									"return_type": {
										"map_type": {
											"key_type": {
												"name": "base.BazResponse"
											},
											"value_type": {
												"name": "string"
											}
										},
										"name": "map\u003cbase.BazResponse, string\u003e"
									}
								}
							},
							"echoStructSet": {
								"args_spec": [
									{
										"id": 1,
										"line": 107,
										"name": "arg",
										"required": true,
										"type": {
											"name": "set\u003cbase.BazResponse\u003e",
											"set_value_type": {
												"name": "base.BazResponse"
											}
										}
									}
								],
								"line": 106,
								"name": "echoStructSet",
								"one_way": false,
								"result_spec": {
									"return_type": {
										"name": "set\u003cbase.BazResponse\u003e",
										"set_value_type": {
											"name": "base.BazResponse"
										}
									}
								}
							},
							"echoTypedef": {
								"args_spec": [
									{
										"id": 1,
										"line": 98,
										"name": "arg",
										"required": true,
										"type": {
											"name": "base.UUID"
										}
									}
								],
								"line": 97,
								"name": "echoTypedef",
								"one_way": false,
								"result_spec": {
									"return_type": {
										"name": "base.UUID"
									}
								}
							}
						},
						"line": 60,
						"name": "SecondService"
					},
					"SimpleService": {
						"file": "clients/baz/baz.thrift",
						"functions": {
							"call": {
								"annotations": {
									"zanzibar.http.reqHeaders": "x-uuid,x-token",
									"zanzibar.http.resHeaders": "some-res-header"
								},
								"args_spec": [
									{
										"id": 1,
										"line": 41,
										"name": "arg",
										"required": true,
										"type": {
											"name": "BazRequest"
										}
									}
								],
								"line": 40,
								"name": "call",
								"one_way": false,
								"result_spec": {
									"exceptions": [
										{
											"id": 1,
											"line": 43,
											"name": "authErr",
											"required": false,
											"type": {
												"name": "AuthErr"
											}
										}
									],
									"return_type": null
								}
							},
							"compare": {
								"args_spec": [
									{
										"id": 1,
										"line": 25,
										"name": "arg1",
										"required": true,
										"type": {
											"name": "BazRequest"
										}
									},
									{
										"id": 2,
										"line": 26,
										"name": "arg2",
										"required": true,
										"type": {
											"name": "BazRequest"
										}
									}
								],
								"line": 24,
								"name": "compare",
								"one_way": false,
								"result_spec": {
									"exceptions": [
										{
											"id": 1,
											"line": 28,
											"name": "authErr",
											"required": false,
											"type": {
												"name": "AuthErr"
											}
										},
										{
											"id": 2,
											"line": 29,
											"name": "otherAuthErr",
											"required": false,
											"type": {
												"name": "OtherAuthErr"
											}
										}
									],
									"return_type": {
										"name": "base.BazResponse"
									}
								}
							},
							"ping": {
								"line": 49,
								"name": "ping",
								"one_way": false,
								"result_spec": {
									"return_type": {
										"name": "base.BazResponse"
									}
								}
							},
							"sillyNoop": {
								"line": 51,
								"name": "sillyNoop",
								"one_way": false,
								"result_spec": {
									"exceptions": [
										{
											"id": 1,
											"line": 52,
											"name": "authErr",
											"required": false,
											"type": {
												"name": "AuthErr"
											}
										},
										{
											"id": 2,
											"line": 53,
											"name": "serverErr",
											"required": false,
											"type": {
												"name": "base.ServerErr"
											}
										}
									],
									"return_type": null
								}
							},
							"testUuid": {
								"line": 56,
								"name": "testUuid",
								"one_way": false
							},
							"trans": {
								"args_spec": [
									{
										"id": 1,
										"line": 33,
										"name": "arg1",
										"required": true,
										"type": {
											"name": "base.TransStruct"
										}
									},
									{
										"id": 2,
										"line": 34,
										"name": "arg2",
										"required": false,
										"type": {
											"name": "base.TransStruct"
										}
									}
								],
								"line": 32,
								"name": "trans",
								"one_way": false,
								"result_spec": {
									"exceptions": [
										{
											"id": 1,
											"line": 36,
											"name": "authErr",
											"required": false,
											"type": {
												"name": "AuthErr"
											}
										},
										{
											"id": 2,
											"line": 37,
											"name": "otherAuthErr",
											"required": false,
											"type": {
												"name": "OtherAuthErr"
											}
										}
									],
									"return_type": {
										"name": "base.TransStruct"
									}
								}
							},
							"urlTest": {
								"line": 57,
								"name": "urlTest",
								"one_way": false
							}
						},
						"line": 23,
						"name": "SimpleService"
					}
				},
				"thrift_path": "clients/baz/baz.thrift",
				"types": {
					"AuthErr": {
						"file": "clients/baz/baz.thrift",
						"line": 15,
						"name": "AuthErr",
						"struct_type": {
							"fields": [
								{
									"id": 1,
									"line": 16,
									"name": "message",
									"required": true,
									"type": {
										"name": "string"
									}
								}
							],
							"kind": "exception"
						}
					},
					"BazRequest": {
						"file": "clients/baz/baz.thrift",
						"line": 9,
						"name": "BazRequest",
						"struct_type": {
							"fields": [
								{
									"id": 1,
									"line": 10,
									"name": "b1",
									"required": true,
									"type": {
										"name": "bool"
									}
								},
								{
									"id": 2,
									"line": 11,
									"name": "s2",
									"required": true,
									"type": {
										"name": "string"
									}
								},
								{
									"id": 3,
									"line": 12,
									"name": "i3",
									"required": true,
									"type": {
										"name": "i32"
									}
								}
							],
							"kind": "struct"
						}
					},
					"Fruit": {
						"enum_type": {
							"file": "clients/baz/baz.thrift",
							"items": [
								{
									"name": "APPLE"
								},
								{
									"name": "BANANA"
								}
							],
							"name": "Fruit"
						},
						"file": "clients/baz/baz.thrift",
						"line": 4,
						"name": "Fruit"
					},
					"OtherAuthErr": {
						"file": "clients/baz/baz.thrift",
						"line": 19,
						"name": "OtherAuthErr",
						"struct_type": {
							"fields": [
								{
									"id": 1,
									"line": 20,
									"name": "message",
									"required": true,
									"type": {
										"name": "string"
									}
								}
							],
							"kind": "exception"
						}
					}
				}
			}
		}
	},
	{
		"name": "get the list of all files in IDL registry",
		"request": {
			"method": "GET",
			"url": "/idl-registry-list"
		},
		"response": {
			"code": 200,
			"body": {
				"clients/baz/base.thrift": {
					"path": "clients/baz/base.thrift",
					"version": "e0729d2985ec0aeb95891cba969f1fadecedb648"
				},
				"clients/baz/baz.thrift": {
					"path": "clients/baz/baz.thrift",
					"version": "e0729d2985ec0aeb95891cba969f1fadecedb648"
				},
				"clients/googlenow/googlenow.thrift": {
					"path": "clients/googlenow/googlenow.thrift",
					"version": "815ae46357b5712b51e2499e7c1eb7c09c34d5f1"
				},
				"endpoints/baz/baz.thrift": {
					"path": "endpoints/baz/baz.thrift",
					"version": "v2"
				},
				"endpoints/googlenow/googlenow.thrift": {
					"path": "endpoints/googlenow/googlenow.thrift",
					"version": "v2"
				}
			}
		}
	},
	{
		"name": "get the http services of a thrift in IDL registry",
		"request": {
			"method": "GET",
			"url": "/idl-registry-service/clients/googlenow/googlenow.thrift"
		},
		"response": {
			"code": 200,
			"body": {
				"GoogleNowService": {
					"Methods": [
						{
							"Name": "addCredentials",
							"Type": "http"
						},
						{
							"Name": "checkCredentials",
							"Type": "http"
						}
					],
					"Name": "GoogleNowService",
					"Path": "clients/googlenow/googlenow.thrift"
				}
			}
		}
	},
	{
		"name": "get the tchannel services of a thrift in IDL registry",
		"request": {
			"method": "GET",
			"url": "/idl-registry-service/clients/baz/baz.thrift"
		},
		"response": {
			"code": 200,
			"body": {
				"SecondService": {
					"Methods": [
						{
							"Name": "echoBinary",
							"Type": "tchannel"
						},
						{
							"Name": "echoBool",
							"Type": "tchannel"
						},
						{
							"Name": "echoDouble",
							"Type": "tchannel"
						},
						{
							"Name": "echoEnum",
							"Type": "tchannel"
						},
						{
							"Name": "echoI16",
							"Type": "tchannel"
						},
						{
							"Name": "echoI32",
							"Type": "tchannel"
						},
						{
							"Name": "echoI64",
							"Type": "tchannel"
						},
						{
							"Name": "echoI8",
							"Type": "tchannel"
						},
						{
							"Name": "echoString",
							"Type": "tchannel"
						},
						{
							"Name": "echoStringList",
							"Type": "tchannel"
						},
						{
							"Name": "echoStringMap",
							"Type": "tchannel"
						},
						{
							"Name": "echoStringSet",
							"Type": "tchannel"
						},
						{
							"Name": "echoStructList",
							"Type": "tchannel"
						},
						{
							"Name": "echoStructMap",
							"Type": "tchannel"
						},
						{
							"Name": "echoStructSet",
							"Type": "tchannel"
						},
						{
							"Name": "echoTypedef",
							"Type": "tchannel"
						}
					],
					"Name": "SecondService",
					"Path": "clients/baz/baz.thrift"
				},
				"SimpleService": {
					"Methods": [
						{
							"Name": "call",
							"Type": "tchannel"
						},
						{
							"Name": "compare",
							"Type": "tchannel"
						},
						{
							"Name": "ping",
							"Type": "tchannel"
						},
						{
							"Name": "sillyNoop",
							"Type": "tchannel"
						},
						{
							"Name": "testUuid",
							"Type": "tchannel"
						},
						{
							"Name": "trans",
							"Type": "tchannel"
						},
						{
							"Name": "urlTest",
							"Type": "tchannel"
						}
					],
					"Name": "SimpleService",
					"Path": "clients/baz/baz.thrift"
				}
			}
		}
	},
	{
		"name": "get the meta data of a thrift file in IDL registry",
		"request": {
			"method": "GET",
			"url": "/idl-registry/clients/baz/baz.thrift"
		},
		"response": {
			"code": 200,
			"body": {
				"content": "namespace java com.uber.zanzibar.clients.baz\ninclude \"base.thrift\"\n\nenum Fruit {\n   APPLE,\n   BANANA\n}\n\nstruct BazRequest {\n    1: required bool b1\n    2: required string s2\n    3: required i32 i3\n}\n\nexception AuthErr {\n    1: required string message\n}\n\nexception OtherAuthErr {\n  1: required string message\n}\n\nservice SimpleService {\n    base.BazResponse compare(\n        1: required BazRequest arg1\n        2: required BazRequest arg2\n    ) throws (\n        1: AuthErr authErr\n        2: OtherAuthErr otherAuthErr\n    )\n\n    base.TransStruct trans(\n        1: required base.TransStruct arg1\n        2: optional base.TransStruct arg2\n    ) throws (\n        1: AuthErr authErr\n        2: OtherAuthErr otherAuthErr\n    )\n\n    void call(\n        1: required BazRequest arg\n    ) throws (\n        1: AuthErr authErr\n    ) (\n        zanzibar.http.reqHeaders = \"x-uuid,x-token\"\n        zanzibar.http.resHeaders = \"some-res-header\"\n    )\n\n    base.BazResponse ping() ()\n\n    void sillyNoop() throws (\n        1: AuthErr authErr\n        2: base.ServerErr serverErr\n    )\n\n    void testUuid()\n    void urlTest()\n}\n\nservice SecondService {\n    i8 echoI8 (\n        1: required i8 arg\n    )\n\n    i16 echoI16(\n        1: required i16 arg\n    )\n\n    i32 echoI32(\n        1: required i32 arg\n    )\n\n    i64 echoI64(\n        1: required i64 arg\n    )\n\n    double echoDouble(\n        1: required double arg\n    )\n\n    bool echoBool (\n        1: required bool arg\n    )\n\n    binary echoBinary (\n        1: required binary arg\n    )\n\n    string echoString(\n        1: required string arg\n    )\n\n    Fruit echoEnum (\n        1: required Fruit arg = Fruit.APPLE\n    )\n\n    base.UUID echoTypedef(\n        1: required base.UUID arg\n    )\n\n    set\u003cstring\u003e echoStringSet(\n        1: required set\u003cstring\u003e arg\n    )\n\n    // value is unhashable\n    set\u003cbase.BazResponse\u003e echoStructSet(\n        1: required set\u003cbase.BazResponse\u003e arg\n    )\n\n    list\u003cstring\u003e echoStringList (\n        1: required list\u003cstring\u003e arg\n    )\n\n    list\u003cbase.BazResponse\u003e echoStructList (\n        1: required list\u003cbase.BazResponse\u003e arg\n    )\n\n    map\u003cstring, base.BazResponse\u003e echoStringMap (\n        1: required map\u003cstring, base.BazResponse\u003e arg\n    )\n\n    // key is unhashable\n    map\u003cbase.BazResponse, string\u003e echoStructMap (\n        1: required map\u003cbase.BazResponse, string\u003e arg\n    )\n}\n",
				"path": "clients/baz/baz.thrift",
				"version": "e0729d2985ec0aeb95891cba969f1fadecedb648"
			}
		}
	},
	{
		"name": "validate updates",
		"request": {
			"method": "POST",
			"url": "/validate-updates",
			"header": {
				"gateway-id": "example-gateway"
			},
			"body": {
				"client_updates": [
					{
						"clientTimeout": 10000,
						"clientTimeoutPerAttempt": 2000,
						"exposedMethods": {
							"Call": "SimpleService::call",
							"Compare": "SimpleService::compare",
							"DeliberateDiffNoop": "SimpleService::sillyNoop",
							"EchoBinary": "SecondService::echoBinary",
							"EchoBool": "SecondService::echoBool",
							"EchoDouble": "SecondService::echoDouble",
							"EchoEnum": "SecondService::echoEnum",
							"EchoI16": "SecondService::echoI16",
							"EchoI32": "SecondService::echoI32",
							"EchoI64": "SecondService::echoI64",
							"EchoI8": "SecondService::echoI8",
							"EchoString": "SecondService::echoString",
							"EchoStringList": "SecondService::echoStringList",
							"EchoStringMap": "SecondService::echoStringMap",
							"EchoStringSet": "SecondService::echoStringSet",
							"EchoStructList": "SecondService::echoStructList",
							"EchoStructMap": "SecondService::echoStructMap",
							"EchoStructSet": "SecondService::echoStructSet",
							"EchoTypedef": "SecondService::echoTypedef",
							"Ping": "SimpleService::ping",
							"Trans": "SimpleService::trans"
						},
						"ip": "127.0.0.1",
						"name": "baz",
						"port": 4002,
						"serviceName": "Qux",
						"thriftFile": "clients/baz/baz.thrift",
						"type": "tchannel"
					}
				],
				"endpoint_updates": [
					{
						"clientId": "baz",
						"clientMethod": "Compare",
						"endpointId": "baz",
						"endpointType": "http",
						"handleId": "compare",
						"middlewares": [
							{
								"name": "example_reader",
								"options": {
									"Foo": "test"
								}
							}
						],
						"reqHeaderMap": {},
						"resHeaderMap": {},
						"testFixtures": {},
						"thriftFile": "endpoints/baz/baz.thrift",
						"thriftFileSha": "{{placeholder}}",
						"thriftMethodName": "SimpleService::compare",
						"workflowType": "tchannelClient"
					}
				],
				"thrift_files": [
					"clients/baz/baz.thrift"
				]
			}
		},
		"response": {
			"code": 200,
			"body": {
				"Status": "OK"
			}
		}
	},
	{
		"name": "create-diff",
		"request": {
			"method": "POST",
			"url": "/create-diff",
			"header": {
				"gateway-id": "example-gateway"
			},
			"body": {
				"client_updates": [
					{
						"clientTimeout": 10000,
						"clientTimeoutPerAttempt": 2000,
						"exposedMethods": {
							"Call": "SimpleService::call",
							"Compare": "SimpleService::compare",
							"DeliberateDiffNoop": "SimpleService::sillyNoop",
							"EchoBinary": "SecondService::echoBinary",
							"EchoBool": "SecondService::echoBool",
							"EchoDouble": "SecondService::echoDouble",
							"EchoEnum": "SecondService::echoEnum",
							"EchoI16": "SecondService::echoI16",
							"EchoI32": "SecondService::echoI32",
							"EchoI64": "SecondService::echoI64",
							"EchoI8": "SecondService::echoI8",
							"EchoString": "SecondService::echoString",
							"EchoStringList": "SecondService::echoStringList",
							"EchoStringMap": "SecondService::echoStringMap",
							"EchoStringSet": "SecondService::echoStringSet",
							"EchoStructList": "SecondService::echoStructList",
							"EchoStructMap": "SecondService::echoStructMap",
							"EchoStructSet": "SecondService::echoStructSet",
							"EchoTypedef": "SecondService::echoTypedef",
							"Ping": "SimpleService::ping",
							"Trans": "SimpleService::trans"
						},
						"ip": "127.0.0.1",
						"name": "baz",
						"port": 4002,
						"serviceName": "Qux",
						"thriftFile": "clients/baz/baz.thrift",
						"type": "tchannel"
					}
				],
				"endpoint_updates": [
					{
						"clientId": "baz",
						"clientMethod": "Compare",
						"endpointId": "baz",
						"endpointType": "http",
						"handleId": "compare",
						"middlewares": [],
						"reqHeaderMap": {},
						"resHeaderMap": {},
						"testFixtures": {
							"successfulRequest": {
								"clientTestFixtures": {
									"baz::compare": {
										"clientId": "baz",
										"clientMethod": "compare",
										"clientReqHeaders": {},
										"clientRequest": {
											"httpRequest": {
												"method": "GET"
											},
											"requestType": "http"
										},
										"clientResHeaders": {},
										"clientResponse": {
											"httpResponse": {
												"body": {
													"bodyJson": {
														"message": "different"
													},
													"bodyType": "json"
												},
												"statusCode": 200
											},
											"responseType": "http"
										}
									}
								},
								"endpointId": "baz",
								"endpointReqHeaders": {},
								"endpointRequest": {
									"requestType": "tchannel",
									"tchannelRequest": {
										"arg1": {
											"b1": true,
											"i3": 42,
											"s2": "hello"
										},
										"arg2": {
											"b1": true,
											"i3": 42,
											"s2": "hola"
										}
									}
								},
								"endpointResHeaders": {},
								"endpointResponse": {
									"responseType": "tchannel",
									"tchannelResponse": {
										"message": "different"
									}
								},
								"handleId": "compare",
								"testName": "successfulRequest",
								"testServiceName": "example-gateway"
							}
						},
						"thriftFile": "endpoints/baz/baz.thrift",
						"thriftFileSha": "{{placeholder}}",
						"thriftMethodName": "SimpleService::compare",
						"workflowType": "tchannelClient"
					}
				],
				"thrift_files": [
					"clients/baz/baz.thrift"
				]
			}
		},
		"response": {
			"code": 200,
			"body": {
				"diff_uri": "http://diff-for-example-gateway"
			}
		}
	},
	{
		"name": "create-diff-sidecar",
		"request": {
			"method": "POST",
			"url": "/create-diff",
			"header": {
				"gateway-id": "example-gateway"
			},
			"body": {
				"client_updates": [
					{
						"clientTimeout": 10000,
						"clientTimeoutPerAttempt": 2000,
						"exposedMethods": {
							"Call": "SimpleService::call",
							"Compare": "SimpleService::compare",
							"DeliberateDiffNoop": "SimpleService::sillyNoop",
							"EchoBinary": "SecondService::echoBinary",
							"EchoBool": "SecondService::echoBool",
							"EchoDouble": "SecondService::echoDouble",
							"EchoEnum": "SecondService::echoEnum",
							"EchoI16": "SecondService::echoI16",
							"EchoI32": "SecondService::echoI32",
							"EchoI64": "SecondService::echoI64",
							"EchoI8": "SecondService::echoI8",
							"EchoString": "SecondService::echoString",
							"EchoStringList": "SecondService::echoStringList",
							"EchoStringMap": "SecondService::echoStringMap",
							"EchoStringSet": "SecondService::echoStringSet",
							"EchoStructList": "SecondService::echoStructList",
							"EchoStructMap": "SecondService::echoStructMap",
							"EchoStructSet": "SecondService::echoStructSet",
							"EchoTypedef": "SecondService::echoTypedef",
							"Ping": "SimpleService::ping",
							"Trans": "SimpleService::trans"
						},
						"ip": "127.0.0.1",
						"name": "baz",
						"sidecarRouter": "default",
						"serviceName": "Qux",
						"thriftFile": "clients/baz/baz.thrift",
						"type": "tchannel"
					}
				],
				"endpoint_updates": [
					{
						"clientId": "baz",
						"clientMethod": "Compare",
						"endpointId": "baz",
						"endpointType": "http",
						"handleId": "compare",
						"middlewares": [],
						"reqHeaderMap": {},
						"resHeaderMap": {},
						"testFixtures": {},
						"thriftFile": "endpoints/baz/baz.thrift",
						"thriftFileSha": "{{placeholder}}",
						"thriftMethodName": "SimpleService::compare",
						"workflowType": "tchannelClient"
					}
				],
				"thrift_files": [
					"clients/baz/baz.thrift"
				]
			}
		},
		"response": {
			"code": 200,
			"body": {
				"diff_uri": "http://diff-for-example-gateway"
			}
		}
	},
	{
		"name": "create-diff-managed-thrift",
		"request": {
			"method": "POST",
			"url": "/create-diff",
			"header": {
				"gateway-id": "example-gateway"
			},
			"body": {
				"managed_thrift_files": [
					{
						"filename": "bar/my-thrift.thrift",
						"source_code": "namespace java com.uber.zanzibar.clients.baz\n\ntypedef string UUID\n\nstruct BazResponse {\n\t1: required string message\n}\n\nexception ServerErr {\n\t1: required string message\n}\n"
					}
				]
			}
		},
		"response": {
			"code": 200,
			"body": {
				"diff_uri": "http://diff-for-example-gateway"
			}
		}
	},
	{
		"name": "invalid create-diff request with unknown client ID",
		"request": {
			"method": "POST",
			"url": "/create-diff",
			"header": {
				"gateway-id": "example-gateway"
			},
			"body": {
				"client_updates": [
					{
						"clientTimeout": 10000,
						"clientTimeoutPerAttempt": 2000,
						"exposedMethods": {
							"Call": "SimpleService::call",
							"Compare": "SimpleService::compare",
							"DeliberateDiffNoop": "SimpleService::sillyNoop",
							"EchoBinary": "SecondService::echoBinary",
							"EchoBool": "SecondService::echoBool",
							"EchoDouble": "SecondService::echoDouble",
							"EchoEnum": "SecondService::echoEnum",
							"EchoI16": "SecondService::echoI16",
							"EchoI32": "SecondService::echoI32",
							"EchoI64": "SecondService::echoI64",
							"EchoI8": "SecondService::echoI8",
							"EchoString": "SecondService::echoString",
							"EchoStringList": "SecondService::echoStringList",
							"EchoStringMap": "SecondService::echoStringMap",
							"EchoStringSet": "SecondService::echoStringSet",
							"EchoStructList": "SecondService::echoStructList",
							"EchoStructMap": "SecondService::echoStructMap",
							"EchoStructSet": "SecondService::echoStructSet",
							"EchoTypedef": "SecondService::echoTypedef",
							"Ping": "SimpleService::ping",
							"Trans": "SimpleService::trans"
						},
						"ip": "127.0.0.1",
						"name": "baz",
						"port": 4002,
						"serviceName": "Qux",
						"thriftFile": "clients/baz/baz.thrift",
						"type": "tchannel"
					}
				],
				"endpoint_updates": [
					{
						"clientId": "bazzzzzzzz",
						"clientMethod": "Compare",
						"endpointId": "baz",
						"endpointType": "http",
						"handleId": "compare",
						"middlewares": [],
						"reqHeaderMap": {},
						"resHeaderMap": {},
						"testFixtures": {},
						"thriftFile": "endpoints/baz/baz.thrift",
						"thriftFileSha": "{{placeholder}}",
						"thriftMethodName": "SimpleService::compare",
						"workflowType": "tchannelClient"
					}
				],
				"thrift_files": [
					"clients/baz/baz.thrift"
				]
			}
		},
		"response": {
			"code": 400,
			"body": {
				"cause": "can't find client \"bazzzzzzzz\"",
				"field_name": "client_id"
			}
		}
	},
	{
		"name": "land-diff",
		"request": {
			"method": "POST",
			"url": "/land-diff",
			"header": {
				"gateway-id": "example-gateway"
			},
			"body": {
				"diff_url": "https://some-diff-uri"
			}
		},
		"response": {
			"code": 200,
			"body": {
				"Status": "OK"
			}
		}
	},
	{
		"name": "land-diff",
		"request": {
			"method": "POST",
			"url": "/land-diff",
			"header": {
				"gateway-id": "example-gateway"
			},
			"body": {
				"diff_url": "https://panic"
			}
		},
		"response": {
			"code": 500,
			"body": {
				"message": "backend handler panic: dummy panic for testing"
			}
		}
	},
	{
		"name": "get-all-gateway-config",
		"request": {
			"method": "GET",
			"url": "/gateways"
		},
		"response": {
			"code": 200,
			"body": {
				"example-gateway": {
					"ClientConfigDir": "./clients",
					"Clients": {
						"bar": {
							"exposedMethods": {
								"ArgNotStruct": "Bar::argNotStruct",
								"ArgWithHeaders": "Bar::argWithHeaders",
								"ArgWithManyQueryParams": "Bar::argWithManyQueryParams",
								"ArgWithNestedQueryParams": "Bar::argWithNestedQueryParams",
								"ArgWithParams": "Bar::argWithParams",
								"ArgWithQueryHeader": "Bar::argWithQueryHeader",
								"ArgWithQueryParams": "Bar::argWithQueryParams",
								"EchoBinary": "Echo::echoBinary",
								"EchoBool": "Echo::echoBool",
								"EchoDouble": "Echo::echoDouble",
								"EchoEnum": "Echo::echoEnum",
								"EchoI16": "Echo::echoI16",
								"EchoI32": "Echo::echoI32",
								"EchoI32Map": "Echo::echoI32Map",
								"EchoI64": "Echo::echoI64",
								"EchoI8": "Echo::echoI8",
								"EchoString": "Echo::echoString",
								"EchoStringList": "Echo::echoStringList",
								"EchoStringMap": "Echo::echoStringMap",
								"EchoStringSet": "Echo::echoStringSet",
								"EchoStructList": "Echo::echoStructList",
								"EchoStructMap": "Echo::echoStructMap",
								"EchoStructSet": "Echo::echoStructSet",
								"EchoTypedef": "Echo::echoTypedef",
								"Hello": "Bar::helloWorld",
								"MissingArg": "Bar::missingArg",
								"NoRequest": "Bar::noRequest",
								"Normal": "Bar::normal",
								"NormalRecur": "Bar::normalRecur",
								"TooManyArgs": "Bar::tooManyArgs"
							},
							"ip": "127.0.0.1",
							"name": "bar",
							"port": 4001,
							"routingKey": "",
							"thriftFile": "clients/bar/bar.thrift",
							"type": "http"
						},
						"baz": {
							"clientTimeout": 10000,
							"clientTimeoutPerAttempt": 2000,
							"exposedMethods": {
								"Call": "SimpleService::call",
								"Compare": "SimpleService::compare",
								"DeliberateDiffNoop": "SimpleService::sillyNoop",
								"EchoBinary": "SecondService::echoBinary",
								"EchoBool": "SecondService::echoBool",
								"EchoDouble": "SecondService::echoDouble",
								"EchoEnum": "SecondService::echoEnum",
								"EchoI16": "SecondService::echoI16",
								"EchoI32": "SecondService::echoI32",
								"EchoI64": "SecondService::echoI64",
								"EchoI8": "SecondService::echoI8",
								"EchoString": "SecondService::echoString",
								"EchoStringList": "SecondService::echoStringList",
								"EchoStringMap": "SecondService::echoStringMap",
								"EchoStringSet": "SecondService::echoStringSet",
								"EchoStructList": "SecondService::echoStructList",
								"EchoStructMap": "SecondService::echoStructMap",
								"EchoStructSet": "SecondService::echoStructSet",
								"EchoTypedef": "SecondService::echoTypedef",
								"Ping": "SimpleService::ping",
								"TestUUID": "SimpleService::testUuid",
								"Trans": "SimpleService::trans",
								"URLTest": "SimpleService::urlTest"
							},
							"ip": "127.0.0.1",
							"name": "baz",
							"port": 4002,
							"routingKey": "",
							"serviceName": "Qux",
							"thriftFile": "clients/baz/baz.thrift",
							"type": "tchannel"
						},
						"contacts": {
							"exposedMethods": {
								"SaveContacts": "Contacts::saveContacts",
								"TestURLURL": "Contacts::testUrlUrl"
							},
							"ip": "127.0.0.1",
							"name": "contacts",
							"port": 4000,
							"routingKey": "",
							"thriftFile": "clients/contacts/contacts.thrift",
							"type": "http"
						},
						"corge": {
							"clientTimeout": 10000,
							"clientTimeoutPerAttempt": 2000,
							"exposedMethods": {
								"EchoString": "Corge::echoString"
							},
							"ip": "127.0.0.1",
							"name": "corge",
							"port": 5000,
							"routingKey": "",
							"serviceName": "Corge",
							"thriftFile": "clients/corge/corge.thrift",
							"type": "tchannel"
						},
						"google-now": {
							"exposedMethods": {
								"AddCredentials": "GoogleNowService::addCredentials",
								"CheckCredentials": "GoogleNowService::checkCredentials"
							},
							"ip": "127.0.0.1",
							"name": "google-now",
							"port": 14120,
							"routingKey": "",
							"thriftFile": "clients/googlenow/googlenow.thrift",
							"type": "http"
						},
						"quux": {
							"name": "quux",
							"routingKey": "",
							"type": "custom"
						}
					},
					"EndpointConfigDir": "./endpoints",
					"Endpoints": {
						"bar.argNotStruct": {
							"clientId": "bar",
							"clientMethod": "ArgNotStruct",
							"endpointId": "bar",
							"endpointType": "http",
							"handleId": "argNotStruct",
							"middlewares": null,
							"reqHeaderMap": null,
							"resHeaderMap": null,
							"testFixtures": null,
							"thriftFile": "endpoints/bar/bar.thrift",
							"thriftMethodName": "Bar::argNotStruct",
							"workflowType": "httpClient"
						},
						"bar.argWithHeaders": {
							"clientId": "bar",
							"clientMethod": "ArgWithHeaders",
							"endpointId": "bar",
							"endpointType": "http",
							"handleId": "argWithHeaders",
							"middlewares": null,
							"reqHeaderMap": null,
							"resHeaderMap": null,
							"testFixtures": null,
							"thriftFile": "endpoints/bar/bar.thrift",
							"thriftMethodName": "Bar::argWithHeaders",
							"workflowType": "httpClient"
						},
						"bar.argWithManyQueryParams": {
							"clientId": "bar",
							"clientMethod": "ArgWithManyQueryParams",
							"endpointId": "bar",
							"endpointType": "http",
							"handleId": "argWithManyQueryParams",
							"middlewares": null,
							"reqHeaderMap": null,
							"resHeaderMap": null,
							"testFixtures": null,
							"thriftFile": "endpoints/bar/bar.thrift",
							"thriftMethodName": "Bar::argWithManyQueryParams",
							"workflowType": "httpClient"
						},
						"bar.argWithNestedQueryParams": {
							"clientId": "bar",
							"clientMethod": "ArgWithNestedQueryParams",
							"endpointId": "bar",
							"endpointType": "http",
							"handleId": "argWithNestedQueryParams",
							"middlewares": null,
							"reqHeaderMap": null,
							"resHeaderMap": null,
							"testFixtures": null,
							"thriftFile": "endpoints/bar/bar.thrift",
							"thriftMethodName": "Bar::argWithNestedQueryParams",
							"workflowType": "httpClient"
						},
						"bar.argWithParams": {
							"clientId": "bar",
							"clientMethod": "ArgWithParams",
							"endpointId": "bar",
							"endpointType": "http",
							"handleId": "argWithParams",
							"middlewares": null,
							"reqHeaderMap": null,
							"resHeaderMap": null,
							"testFixtures": null,
							"thriftFile": "endpoints/bar/bar.thrift",
							"thriftMethodName": "Bar::argWithParams",
							"workflowType": "httpClient"
						},
						"bar.argWithQueryHeader": {
							"clientId": "bar",
							"clientMethod": "ArgWithQueryHeader",
							"endpointId": "bar",
							"endpointType": "http",
							"handleId": "argWithQueryHeader",
							"middlewares": null,
							"reqHeaderMap": null,
							"resHeaderMap": null,
							"testFixtures": null,
							"thriftFile": "endpoints/bar/bar.thrift",
							"thriftMethodName": "Bar::argWithQueryHeader",
							"workflowType": "httpClient"
						},
						"bar.argWithQueryParams": {
							"clientId": "bar",
							"clientMethod": "ArgWithQueryParams",
							"endpointId": "bar",
							"endpointType": "http",
							"handleId": "argWithQueryParams",
							"middlewares": null,
							"reqHeaderMap": null,
							"resHeaderMap": null,
							"testFixtures": null,
							"thriftFile": "endpoints/bar/bar.thrift",
							"thriftMethodName": "Bar::argWithQueryParams",
							"workflowType": "httpClient"
						},
						"bar.helloWorld": {
							"clientId": "bar",
							"clientMethod": "Hello",
							"endpointId": "bar",
							"endpointType": "http",
							"handleId": "helloWorld",
							"middlewares": null,
							"reqHeaderMap": null,
							"resHeaderMap": null,
							"testFixtures": null,
							"thriftFile": "endpoints/bar/bar.thrift",
							"thriftMethodName": "Bar::helloWorld",
							"workflowType": "httpClient"
						},
						"bar.missingArg": {
							"clientId": "bar",
							"clientMethod": "MissingArg",
							"endpointId": "bar",
							"endpointType": "http",
							"handleId": "missingArg",
							"middlewares": null,
							"reqHeaderMap": null,
							"resHeaderMap": null,
							"testFixtures": null,
							"thriftFile": "endpoints/bar/bar.thrift",
							"thriftMethodName": "Bar::missingArg",
							"workflowType": "httpClient"
						},
						"bar.noRequest": {
							"clientId": "bar",
							"clientMethod": "NoRequest",
							"endpointId": "bar",
							"endpointType": "http",
							"handleId": "noRequest",
							"middlewares": null,
							"reqHeaderMap": null,
							"resHeaderMap": null,
							"testFixtures": null,
							"thriftFile": "endpoints/bar/bar.thrift",
							"thriftMethodName": "Bar::noRequest",
							"workflowType": "httpClient"
						},
						"bar.normal": {
							"clientId": "bar",
							"clientMethod": "Normal",
							"endpointId": "bar",
							"endpointType": "http",
							"handleId": "normal",
							"middlewares": null,
							"reqHeaderMap": null,
							"resHeaderMap": null,
							"testFixtures": null,
							"thriftFile": "endpoints/bar/bar.thrift",
							"thriftMethodName": "Bar::normal",
							"workflowType": "httpClient"
						},
						"bar.tooManyArgs": {
							"clientId": "bar",
							"clientMethod": "TooManyArgs",
							"endpointId": "bar",
							"endpointType": "http",
							"handleId": "tooManyArgs",
							"middlewares": null,
							"reqHeaderMap": null,
							"resHeaderMap": null,
							"testFixtures": null,
							"thriftFile": "endpoints/bar/bar.thrift",
							"thriftMethodName": "Bar::tooManyArgs",
							"workflowType": "httpClient"
						},
						"baz.call": {
							"clientId": "baz",
							"clientMethod": "Call",
							"endpointId": "baz",
							"endpointType": "http",
							"handleId": "call",
							"middlewares": null,
							"reqHeaderMap": null,
							"resHeaderMap": null,
							"testFixtures": null,
							"thriftFile": "endpoints/baz/baz.thrift",
							"thriftMethodName": "SimpleService::call",
							"workflowType": "tchannelClient"
						},
						"baz.compare": {
							"clientId": "baz",
							"clientMethod": "Compare",
							"endpointId": "baz",
							"endpointType": "http",
							"handleId": "compare",
							"middlewares": null,
							"reqHeaderMap": null,
							"resHeaderMap": null,
							"testFixtures": null,
							"thriftFile": "endpoints/baz/baz.thrift",
							"thriftMethodName": "SimpleService::compare",
							"workflowType": "tchannelClient"
						},
						"baz.ping": {
							"clientId": "baz",
							"clientMethod": "Ping",
							"endpointId": "baz",
							"endpointType": "http",
							"handleId": "ping",
							"middlewares": null,
							"reqHeaderMap": null,
							"resHeaderMap": null,
							"testFixtures": null,
							"thriftFile": "endpoints/baz/baz.thrift",
							"thriftMethodName": "SimpleService::ping",
							"workflowType": "tchannelClient"
						},
						"baz.sillyNoop": {
							"clientId": "baz",
							"clientMethod": "DeliberateDiffNoop",
							"endpointId": "baz",
							"endpointType": "http",
							"handleId": "sillyNoop",
							"middlewares": null,
							"reqHeaderMap": null,
							"resHeaderMap": null,
							"testFixtures": null,
							"thriftFile": "endpoints/baz/baz.thrift",
							"thriftMethodName": "SimpleService::sillyNoop",
							"workflowType": "tchannelClient"
						},
						"baz.trans": {
							"clientId": "baz",
							"clientMethod": "Trans",
							"endpointId": "baz",
							"endpointType": "http",
							"handleId": "trans",
							"middlewares": null,
							"reqHeaderMap": null,
							"resHeaderMap": null,
							"testFixtures": null,
							"thriftFile": "endpoints/baz/baz.thrift",
							"thriftMethodName": "SimpleService::trans",
							"workflowType": "tchannelClient"
						},
						"bazTChannel.call": {
							"clientId": "",
							"clientMethod": "",
							"endpointId": "bazTChannel",
							"endpointType": "tchannel",
							"handleId": "call",
							"middlewares": null,
							"reqHeaderMap": null,
							"resHeaderMap": null,
							"testFixtures": null,
							"thriftFile": "endpoints/tchannel/baz/baz.thrift",
							"thriftMethodName": "SimpleService::Call",
							"workflowType": "custom"
						},
						"contacts.saveContacts": {
							"clientId": "",
							"clientMethod": "",
							"endpointId": "contacts",
							"endpointType": "http",
							"handleId": "saveContacts",
							"middlewares": null,
							"reqHeaderMap": null,
							"resHeaderMap": null,
							"testFixtures": null,
							"thriftFile": "endpoints/contacts/contacts.thrift",
							"thriftMethodName": "Contacts::saveContacts",
							"workflowType": "custom"
						},
						"googlenow.addCredentials": {
							"clientId": "google-now",
							"clientMethod": "AddCredentials",
							"endpointId": "googlenow",
							"endpointType": "http",
							"handleId": "addCredentials",
							"middlewares": null,
							"reqHeaderMap": null,
							"resHeaderMap": null,
							"testFixtures": null,
							"thriftFile": "endpoints/googlenow/googlenow.thrift",
							"thriftMethodName": "GoogleNow::addCredentials",
							"workflowType": "httpClient"
						},
						"googlenow.checkCredentials": {
							"clientId": "google-now",
							"clientMethod": "CheckCredentials",
							"endpointId": "googlenow",
							"endpointType": "http",
							"handleId": "checkCredentials",
							"middlewares": null,
							"reqHeaderMap": null,
							"resHeaderMap": null,
							"testFixtures": null,
							"thriftFile": "endpoints/googlenow/googlenow.thrift",
							"thriftMethodName": "GoogleNow::checkCredentials",
							"workflowType": "httpClient"
						}
					},
					"GenCodePackage": "github.com/uber/zanzibar/examples/example-gateway/build/gen-code",
					"ID": "example-gateway",
					"ManagedThriftFolder": "./github.com/uber/zanzibar",
					"MiddlewareConfigDir": "./middlewares",
					"Middlewares": {
						"example": {
							"$schema": "http://json-schema.org/schema#",
							"properties": {
								"Bar": {
									"type": "integer"
								},
								"Baz": {
									"items": {
										"type": "string"
									},
									"type": "array"
								},
								"Foo": {
									"type": "string"
								}
							},
							"required": [
								"Foo"
							],
							"type": "object"
						},
						"example_reader": {
							"$schema": "http://json-schema.org/schema#",
							"properties": {
								"Foo": {
									"type": "string"
								}
							},
							"required": [
								"Foo"
							],
							"type": "object"
						}
					},
					"PackageRoot": "github.com/uber/zanzibar/examples/example-gateway",
					"RawMiddlewares": {
						"example": {
							"importPath": "github.com/uber/zanzibar/examples/example-gateway/middlewares/example",
							"name": "example",
							"schema": "./middlewares/example/example_schema.json"
						},
						"example_reader": {
							"importPath": "github.com/uber/zanzibar/examples/example-gateway/middlewares/example_reader",
							"name": "example_reader",
							"schema": "./middlewares/example_reader/example_reader_schema.json"
						}
					},
					"Repository": "example-gateway",
					"TargetGenDir": "./build",
					"Team": "",
					"ThriftRootDir": "./idl",
					"ThriftServices": {
						"clients/bar/bar.thrift": {
							"Bar": {
								"Methods": [
									{
										"Name": "argNotStruct",
										"Type": "http"
									},
									{
										"Name": "argWithHeaders",
										"Type": "http"
									},
									{
										"Name": "argWithManyQueryParams",
										"Type": "http"
									},
									{
										"Name": "argWithNestedQueryParams",
										"Type": "http"
									},
									{
										"Name": "argWithParams",
										"Type": "http"
									},
									{
										"Name": "argWithQueryHeader",
										"Type": "http"
									},
									{
										"Name": "argWithQueryParams",
										"Type": "http"
									},
									{
										"Name": "helloWorld",
										"Type": "http"
									},
									{
										"Name": "missingArg",
										"Type": "http"
									},
									{
										"Name": "noRequest",
										"Type": "http"
									},
									{
										"Name": "normal",
										"Type": "http"
									},
									{
										"Name": "normalRecur",
										"Type": "http"
									},
									{
										"Name": "tooManyArgs",
										"Type": "http"
									}
								],
								"Name": "Bar",
								"Path": "clients/bar/bar.thrift"
							},
							"Echo": {
								"Methods": [
									{
										"Name": "echoBinary",
										"Type": "http"
									},
									{
										"Name": "echoBool",
										"Type": "http"
									},
									{
										"Name": "echoDouble",
										"Type": "http"
									},
									{
										"Name": "echoEnum",
										"Type": "http"
									},
									{
										"Name": "echoI16",
										"Type": "http"
									},
									{
										"Name": "echoI32",
										"Type": "http"
									},
									{
										"Name": "echoI32Map",
										"Type": "http"
									},
									{
										"Name": "echoI64",
										"Type": "http"
									},
									{
										"Name": "echoI8",
										"Type": "http"
									},
									{
										"Name": "echoString",
										"Type": "http"
									},
									{
										"Name": "echoStringList",
										"Type": "http"
									},
									{
										"Name": "echoStringMap",
										"Type": "http"
									},
									{
										"Name": "echoStringSet",
										"Type": "http"
									},
									{
										"Name": "echoStructList",
										"Type": "http"
									},
									{
										"Name": "echoStructMap",
										"Type": "http"
									},
									{
										"Name": "echoStructSet",
										"Type": "http"
									},
									{
										"Name": "echoTypedef",
										"Type": "http"
									}
								],
								"Name": "Echo",
								"Path": "clients/bar/bar.thrift"
							}
						},
						"clients/baz/base.thrift": {},
						"clients/baz/baz.thrift": {
							"SecondService": {
								"Methods": [
									{
										"Name": "echoBinary",
										"Type": "tchannel"
									},
									{
										"Name": "echoBool",
										"Type": "tchannel"
									},
									{
										"Name": "echoDouble",
										"Type": "tchannel"
									},
									{
										"Name": "echoEnum",
										"Type": "tchannel"
									},
									{
										"Name": "echoI16",
										"Type": "tchannel"
									},
									{
										"Name": "echoI32",
										"Type": "tchannel"
									},
									{
										"Name": "echoI64",
										"Type": "tchannel"
									},
									{
										"Name": "echoI8",
										"Type": "tchannel"
									},
									{
										"Name": "echoString",
										"Type": "tchannel"
									},
									{
										"Name": "echoStringList",
										"Type": "tchannel"
									},
									{
										"Name": "echoStringMap",
										"Type": "tchannel"
									},
									{
										"Name": "echoStringSet",
										"Type": "tchannel"
									},
									{
										"Name": "echoStructList",
										"Type": "tchannel"
									},
									{
										"Name": "echoStructMap",
										"Type": "tchannel"
									},
									{
										"Name": "echoStructSet",
										"Type": "tchannel"
									},
									{
										"Name": "echoTypedef",
										"Type": "tchannel"
									}
								],
								"Name": "SecondService",
								"Path": "clients/baz/baz.thrift"
							},
							"SimpleService": {
								"Methods": [
									{
										"Name": "call",
										"Type": "tchannel"
									},
									{
										"Name": "compare",
										"Type": "tchannel"
									},
									{
										"Name": "ping",
										"Type": "tchannel"
									},
									{
										"Name": "sillyNoop",
										"Type": "tchannel"
									},
									{
										"Name": "testUuid",
										"Type": "tchannel"
									},
									{
										"Name": "trans",
										"Type": "tchannel"
									},
									{
										"Name": "urlTest",
										"Type": "tchannel"
									}
								],
								"Name": "SimpleService",
								"Path": "clients/baz/baz.thrift"
							}
						},
						"clients/contacts/contacts.thrift": {
							"Contacts": {
								"Methods": [
									{
										"Name": "saveContacts",
										"Type": "http"
									},
									{
										"Name": "testUrlUrl",
										"Type": "http"
									}
								],
								"Name": "Contacts",
								"Path": "clients/contacts/contacts.thrift"
							}
						},
						"clients/corge/corge.thrift": {
							"Corge": {
								"Methods": [
									{
										"Name": "echoBool",
										"Type": "tchannel"
									},
									{
										"Name": "echoString",
										"Type": "tchannel"
									}
								],
								"Name": "Corge",
								"Path": "clients/corge/corge.thrift"
							}
						},
						"clients/foo/base/base.thrift": {},
						"clients/foo/foo.thrift": {},
						"clients/googlenow/googlenow.thrift": {
							"GoogleNowService": {
								"Methods": [
									{
										"Name": "addCredentials",
										"Type": "http"
									},
									{
										"Name": "checkCredentials",
										"Type": "http"
									}
								],
								"Name": "GoogleNowService",
								"Path": "clients/googlenow/googlenow.thrift"
							}
						},
						"endpoints/bar/bar.thrift": {
							"Bar": {
								"Methods": [
									{
										"Name": "argNotStruct",
										"Type": "http"
									},
									{
										"Name": "argWithHeaders",
										"Type": "http"
									},
									{
										"Name": "argWithManyQueryParams",
										"Type": "http"
									},
									{
										"Name": "argWithNestedQueryParams",
										"Type": "http"
									},
									{
										"Name": "argWithParams",
										"Type": "http"
									},
									{
										"Name": "argWithQueryHeader",
										"Type": "http"
									},
									{
										"Name": "argWithQueryParams",
										"Type": "http"
									},
									{
										"Name": "helloWorld",
										"Type": "http"
									},
									{
										"Name": "missingArg",
										"Type": "http"
									},
									{
										"Name": "noRequest",
										"Type": "http"
									},
									{
										"Name": "normal",
										"Type": "http"
									},
									{
										"Name": "tooManyArgs",
										"Type": "http"
									}
								],
								"Name": "Bar",
								"Path": "endpoints/bar/bar.thrift"
							}
						},
						"endpoints/baz/baz.thrift": {
							"SimpleService": {
								"Methods": [
									{
										"Name": "call",
										"Type": "http"
									},
									{
										"Name": "compare",
										"Type": "http"
									},
									{
										"Name": "ping",
										"Type": "http"
									},
									{
										"Name": "sillyNoop",
										"Type": "http"
									},
									{
										"Name": "testUuid",
										"Type": "http"
									},
									{
										"Name": "trans",
										"Type": "http"
									},
									{
										"Name": "urlTest",
										"Type": "http"
									}
								],
								"Name": "SimpleService",
								"Path": "endpoints/baz/baz.thrift"
							}
						},
						"endpoints/contacts/contacts.thrift": {
							"Contacts": {
								"Methods": [
									{
										"Name": "saveContacts",
										"Type": "http"
									},
									{
										"Name": "testUrlUrl",
										"Type": "http"
									}
								],
								"Name": "Contacts",
								"Path": "endpoints/contacts/contacts.thrift"
							}
						},
						"endpoints/foo/base/base.thrift": {},
						"endpoints/foo/foo.thrift": {},
						"endpoints/googlenow/googlenow.thrift": {
							"GoogleNow": {
								"Methods": [
									{
										"Name": "addCredentials",
										"Type": "http"
									},
									{
										"Name": "checkCredentials",
										"Type": "http"
									}
								],
								"Name": "GoogleNow",
								"Path": "endpoints/googlenow/googlenow.thrift"
							}
						},
						"endpoints/tchannel/baz/baz.thrift": {
							"SimpleService": {
								"Methods": [
									{
										"Name": "Call",
										"Type": "http"
									},
									{
										"Name": "Compare",
										"Type": "http"
									},
									{
										"Name": "Ping",
										"Type": "http"
									},
									{
										"Name": "SillyNoop",
										"Type": "http"
									}
								],
								"Name": "SimpleService",
								"Path": "endpoints/tchannel/baz/baz.thrift"
							}
						}
					},
					"Tier": 0
				}
			}
		}
	},
	{
		"name": "get-one-gateway-config",
		"request": {
			"method": "GET",
			"url": "/gateway/no-such-gateway"
		},
		"response": {
			"code": 404,
			"body": {
				"error": "Gateway \"no-such-gateway\" is not found."
			}
		}
	},
	{
		"name": "get-one-gateway-config",
		"request": {
			"method": "GET",
			"url": "/gateway/example-gateway"
		},
		"response": {
			"code": 200,
			"body": {
				"ClientConfigDir": "./clients",
				"Clients": {
					"bar": {
						"exposedMethods": {
							"ArgNotStruct": "Bar::argNotStruct",
							"ArgWithHeaders": "Bar::argWithHeaders",
							"ArgWithManyQueryParams": "Bar::argWithManyQueryParams",
							"ArgWithNestedQueryParams": "Bar::argWithNestedQueryParams",
							"ArgWithParams": "Bar::argWithParams",
							"ArgWithQueryHeader": "Bar::argWithQueryHeader",
							"ArgWithQueryParams": "Bar::argWithQueryParams",
							"EchoBinary": "Echo::echoBinary",
							"EchoBool": "Echo::echoBool",
							"EchoDouble": "Echo::echoDouble",
							"EchoEnum": "Echo::echoEnum",
							"EchoI16": "Echo::echoI16",
							"EchoI32": "Echo::echoI32",
							"EchoI32Map": "Echo::echoI32Map",
							"EchoI64": "Echo::echoI64",
							"EchoI8": "Echo::echoI8",
							"EchoString": "Echo::echoString",
							"EchoStringList": "Echo::echoStringList",
							"EchoStringMap": "Echo::echoStringMap",
							"EchoStringSet": "Echo::echoStringSet",
							"EchoStructList": "Echo::echoStructList",
							"EchoStructMap": "Echo::echoStructMap",
							"EchoStructSet": "Echo::echoStructSet",
							"EchoTypedef": "Echo::echoTypedef",
							"Hello": "Bar::helloWorld",
							"MissingArg": "Bar::missingArg",
							"NoRequest": "Bar::noRequest",
							"Normal": "Bar::normal",
							"NormalRecur": "Bar::normalRecur",
							"TooManyArgs": "Bar::tooManyArgs"
						},
						"ip": "127.0.0.1",
						"name": "bar",
						"port": 4001,
						"routingKey": "",
						"thriftFile": "clients/bar/bar.thrift",
						"type": "http"
					},
					"baz": {
						"clientTimeout": 10000,
						"clientTimeoutPerAttempt": 2000,
						"exposedMethods": {
							"Call": "SimpleService::call",
							"Compare": "SimpleService::compare",
							"DeliberateDiffNoop": "SimpleService::sillyNoop",
							"EchoBinary": "SecondService::echoBinary",
							"EchoBool": "SecondService::echoBool",
							"EchoDouble": "SecondService::echoDouble",
							"EchoEnum": "SecondService::echoEnum",
							"EchoI16": "SecondService::echoI16",
							"EchoI32": "SecondService::echoI32",
							"EchoI64": "SecondService::echoI64",
							"EchoI8": "SecondService::echoI8",
							"EchoString": "SecondService::echoString",
							"EchoStringList": "SecondService::echoStringList",
							"EchoStringMap": "SecondService::echoStringMap",
							"EchoStringSet": "SecondService::echoStringSet",
							"EchoStructList": "SecondService::echoStructList",
							"EchoStructMap": "SecondService::echoStructMap",
							"EchoStructSet": "SecondService::echoStructSet",
							"EchoTypedef": "SecondService::echoTypedef",
							"Ping": "SimpleService::ping",
							"TestUUID": "SimpleService::testUuid",
							"Trans": "SimpleService::trans",
							"URLTest": "SimpleService::urlTest"
						},
						"ip": "127.0.0.1",
						"name": "baz",
						"port": 4002,
						"routingKey": "",
						"serviceName": "Qux",
						"thriftFile": "clients/baz/baz.thrift",
						"type": "tchannel"
					},
					"contacts": {
						"exposedMethods": {
							"SaveContacts": "Contacts::saveContacts",
							"TestURLURL": "Contacts::testUrlUrl"
						},
						"ip": "127.0.0.1",
						"name": "contacts",
						"port": 4000,
						"routingKey": "",
						"thriftFile": "clients/contacts/contacts.thrift",
						"type": "http"
					},
					"corge": {
						"clientTimeout": 10000,
						"clientTimeoutPerAttempt": 2000,
						"exposedMethods": {
							"EchoString": "Corge::echoString"
						},
						"ip": "127.0.0.1",
						"name": "corge",
						"port": 5000,
						"routingKey": "",
						"serviceName": "Corge",
						"thriftFile": "clients/corge/corge.thrift",
						"type": "tchannel"
					},
					"google-now": {
						"exposedMethods": {
							"AddCredentials": "GoogleNowService::addCredentials",
							"CheckCredentials": "GoogleNowService::checkCredentials"
						},
						"ip": "127.0.0.1",
						"name": "google-now",
						"port": 14120,
						"routingKey": "",
						"thriftFile": "clients/googlenow/googlenow.thrift",
						"type": "http"
					},
					"quux": {
						"name": "quux",
						"routingKey": "",
						"type": "custom"
					}
				},
				"EndpointConfigDir": "./endpoints",
				"Endpoints": {
					"bar.argNotStruct": {
						"clientId": "bar",
						"clientMethod": "ArgNotStruct",
						"endpointId": "bar",
						"endpointType": "http",
						"handleId": "argNotStruct",
						"middlewares": null,
						"reqHeaderMap": null,
						"resHeaderMap": null,
						"testFixtures": null,
						"thriftFile": "endpoints/bar/bar.thrift",
						"thriftMethodName": "Bar::argNotStruct",
						"workflowType": "httpClient"
					},
					"bar.argWithHeaders": {
						"clientId": "bar",
						"clientMethod": "ArgWithHeaders",
						"endpointId": "bar",
						"endpointType": "http",
						"handleId": "argWithHeaders",
						"middlewares": null,
						"reqHeaderMap": null,
						"resHeaderMap": null,
						"testFixtures": null,
						"thriftFile": "endpoints/bar/bar.thrift",
						"thriftMethodName": "Bar::argWithHeaders",
						"workflowType": "httpClient"
					},
					"bar.argWithManyQueryParams": {
						"clientId": "bar",
						"clientMethod": "ArgWithManyQueryParams",
						"endpointId": "bar",
						"endpointType": "http",
						"handleId": "argWithManyQueryParams",
						"middlewares": null,
						"reqHeaderMap": null,
						"resHeaderMap": null,
						"testFixtures": null,
						"thriftFile": "endpoints/bar/bar.thrift",
						"thriftMethodName": "Bar::argWithManyQueryParams",
						"workflowType": "httpClient"
					},
					"bar.argWithNestedQueryParams": {
						"clientId": "bar",
						"clientMethod": "ArgWithNestedQueryParams",
						"endpointId": "bar",
						"endpointType": "http",
						"handleId": "argWithNestedQueryParams",
						"middlewares": null,
						"reqHeaderMap": null,
						"resHeaderMap": null,
						"testFixtures": null,
						"thriftFile": "endpoints/bar/bar.thrift",
						"thriftMethodName": "Bar::argWithNestedQueryParams",
						"workflowType": "httpClient"
					},
					"bar.argWithParams": {
						"clientId": "bar",
						"clientMethod": "ArgWithParams",
						"endpointId": "bar",
						"endpointType": "http",
						"handleId": "argWithParams",
						"middlewares": null,
						"reqHeaderMap": null,
						"resHeaderMap": null,
						"testFixtures": null,
						"thriftFile": "endpoints/bar/bar.thrift",
						"thriftMethodName": "Bar::argWithParams",
						"workflowType": "httpClient"
					},
					"bar.argWithQueryHeader": {
						"clientId": "bar",
						"clientMethod": "ArgWithQueryHeader",
						"endpointId": "bar",
						"endpointType": "http",
						"handleId": "argWithQueryHeader",
						"middlewares": null,
						"reqHeaderMap": null,
						"resHeaderMap": null,
						"testFixtures": null,
						"thriftFile": "endpoints/bar/bar.thrift",
						"thriftMethodName": "Bar::argWithQueryHeader",
						"workflowType": "httpClient"
					},
					"bar.argWithQueryParams": {
						"clientId": "bar",
						"clientMethod": "ArgWithQueryParams",
						"endpointId": "bar",
						"endpointType": "http",
						"handleId": "argWithQueryParams",
						"middlewares": null,
						"reqHeaderMap": null,
						"resHeaderMap": null,
						"testFixtures": null,
						"thriftFile": "endpoints/bar/bar.thrift",
						"thriftMethodName": "Bar::argWithQueryParams",
						"workflowType": "httpClient"
					},
					"bar.helloWorld": {
						"clientId": "bar",
						"clientMethod": "Hello",
						"endpointId": "bar",
						"endpointType": "http",
						"handleId": "helloWorld",
						"middlewares": null,
						"reqHeaderMap": null,
						"resHeaderMap": null,
						"testFixtures": null,
						"thriftFile": "endpoints/bar/bar.thrift",
						"thriftMethodName": "Bar::helloWorld",
						"workflowType": "httpClient"
					},
					"bar.missingArg": {
						"clientId": "bar",
						"clientMethod": "MissingArg",
						"endpointId": "bar",
						"endpointType": "http",
						"handleId": "missingArg",
						"middlewares": null,
						"reqHeaderMap": null,
						"resHeaderMap": null,
						"testFixtures": null,
						"thriftFile": "endpoints/bar/bar.thrift",
						"thriftMethodName": "Bar::missingArg",
						"workflowType": "httpClient"
					},
					"bar.noRequest": {
						"clientId": "bar",
						"clientMethod": "NoRequest",
						"endpointId": "bar",
						"endpointType": "http",
						"handleId": "noRequest",
						"middlewares": null,
						"reqHeaderMap": null,
						"resHeaderMap": null,
						"testFixtures": null,
						"thriftFile": "endpoints/bar/bar.thrift",
						"thriftMethodName": "Bar::noRequest",
						"workflowType": "httpClient"
					},
					"bar.normal": {
						"clientId": "bar",
						"clientMethod": "Normal",
						"endpointId": "bar",
						"endpointType": "http",
						"handleId": "normal",
						"middlewares": null,
						"reqHeaderMap": null,
						"resHeaderMap": null,
						"testFixtures": null,
						"thriftFile": "endpoints/bar/bar.thrift",
						"thriftMethodName": "Bar::normal",
						"workflowType": "httpClient"
					},
					"bar.tooManyArgs": {
						"clientId": "bar",
						"clientMethod": "TooManyArgs",
						"endpointId": "bar",
						"endpointType": "http",
						"handleId": "tooManyArgs",
						"middlewares": null,
						"reqHeaderMap": null,
						"resHeaderMap": null,
						"testFixtures": null,
						"thriftFile": "endpoints/bar/bar.thrift",
						"thriftMethodName": "Bar::tooManyArgs",
						"workflowType": "httpClient"
					},
					"baz.call": {
						"clientId": "baz",
						"clientMethod": "Call",
						"endpointId": "baz",
						"endpointType": "http",
						"handleId": "call",
						"middlewares": null,
						"reqHeaderMap": null,
						"resHeaderMap": null,
						"testFixtures": null,
						"thriftFile": "endpoints/baz/baz.thrift",
						"thriftMethodName": "SimpleService::call",
						"workflowType": "tchannelClient"
					},
					"baz.compare": {
						"clientId": "baz",
						"clientMethod": "Compare",
						"endpointId": "baz",
						"endpointType": "http",
						"handleId": "compare",
						"middlewares": null,
						"reqHeaderMap": null,
						"resHeaderMap": null,
						"testFixtures": null,
						"thriftFile": "endpoints/baz/baz.thrift",
						"thriftMethodName": "SimpleService::compare",
						"workflowType": "tchannelClient"
					},
					"baz.ping": {
						"clientId": "baz",
						"clientMethod": "Ping",
						"endpointId": "baz",
						"endpointType": "http",
						"handleId": "ping",
						"middlewares": null,
						"reqHeaderMap": null,
						"resHeaderMap": null,
						"testFixtures": null,
						"thriftFile": "endpoints/baz/baz.thrift",
						"thriftMethodName": "SimpleService::ping",
						"workflowType": "tchannelClient"
					},
					"baz.sillyNoop": {
						"clientId": "baz",
						"clientMethod": "DeliberateDiffNoop",
						"endpointId": "baz",
						"endpointType": "http",
						"handleId": "sillyNoop",
						"middlewares": null,
						"reqHeaderMap": null,
						"resHeaderMap": null,
						"testFixtures": null,
						"thriftFile": "endpoints/baz/baz.thrift",
						"thriftMethodName": "SimpleService::sillyNoop",
						"workflowType": "tchannelClient"
					},
					"baz.trans": {
						"clientId": "baz",
						"clientMethod": "Trans",
						"endpointId": "baz",
						"endpointType": "http",
						"handleId": "trans",
						"middlewares": null,
						"reqHeaderMap": null,
						"resHeaderMap": null,
						"testFixtures": null,
						"thriftFile": "endpoints/baz/baz.thrift",
						"thriftMethodName": "SimpleService::trans",
						"workflowType": "tchannelClient"
					},
					"bazTChannel.call": {
						"clientId": "",
						"clientMethod": "",
						"endpointId": "bazTChannel",
						"endpointType": "tchannel",
						"handleId": "call",
						"middlewares": null,
						"reqHeaderMap": null,
						"resHeaderMap": null,
						"testFixtures": null,
						"thriftFile": "endpoints/tchannel/baz/baz.thrift",
						"thriftMethodName": "SimpleService::Call",
						"workflowType": "custom"
					},
					"contacts.saveContacts": {
						"clientId": "",
						"clientMethod": "",
						"endpointId": "contacts",
						"endpointType": "http",
						"handleId": "saveContacts",
						"middlewares": null,
						"reqHeaderMap": null,
						"resHeaderMap": null,
						"testFixtures": null,
						"thriftFile": "endpoints/contacts/contacts.thrift",
						"thriftMethodName": "Contacts::saveContacts",
						"workflowType": "custom"
					},
					"googlenow.addCredentials": {
						"clientId": "google-now",
						"clientMethod": "AddCredentials",
						"endpointId": "googlenow",
						"endpointType": "http",
						"handleId": "addCredentials",
						"middlewares": null,
						"reqHeaderMap": null,
						"resHeaderMap": null,
						"testFixtures": null,
						"thriftFile": "endpoints/googlenow/googlenow.thrift",
						"thriftMethodName": "GoogleNow::addCredentials",
						"workflowType": "httpClient"
					},
					"googlenow.checkCredentials": {
						"clientId": "google-now",
						"clientMethod": "CheckCredentials",
						"endpointId": "googlenow",
						"endpointType": "http",
						"handleId": "checkCredentials",
						"middlewares": null,
						"reqHeaderMap": null,
						"resHeaderMap": null,
						"testFixtures": null,
						"thriftFile": "endpoints/googlenow/googlenow.thrift",
						"thriftMethodName": "GoogleNow::checkCredentials",
						"workflowType": "httpClient"
					}
				},
				"GenCodePackage": "github.com/uber/zanzibar/examples/example-gateway/build/gen-code",
				"ID": "example-gateway",
				"ManagedThriftFolder": "./github.com/uber/zanzibar",
				"MiddlewareConfigDir": "./middlewares",
				"Middlewares": {
					"example": {
						"$schema": "http://json-schema.org/schema#",
						"properties": {
							"Bar": {
								"type": "integer"
							},
							"Baz": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"Foo": {
								"type": "string"
							}
						},
						"required": [
							"Foo"
						],
						"type": "object"
					},
					"example_reader": {
						"$schema": "http://json-schema.org/schema#",
						"properties": {
							"Foo": {
								"type": "string"
							}
						},
						"required": [
							"Foo"
						],
						"type": "object"
					}
				},
				"PackageRoot": "github.com/uber/zanzibar/examples/example-gateway",
				"RawMiddlewares": {
					"example": {
						"importPath": "github.com/uber/zanzibar/examples/example-gateway/middlewares/example",
						"name": "example",
						"schema": "./middlewares/example/example_schema.json"
					},
					"example_reader": {
						"importPath": "github.com/uber/zanzibar/examples/example-gateway/middlewares/example_reader",
						"name": "example_reader",
						"schema": "./middlewares/example_reader/example_reader_schema.json"
					}
				},
				"Repository": "example-gateway",
				"TargetGenDir": "./build",
				"Team": "",
				"ThriftRootDir": "./idl",
				"ThriftServices": {
					"clients/bar/bar.thrift": {
						"Bar": {
							"Methods": [
								{
									"Name": "argNotStruct",
									"Type": "http"
								},
								{
									"Name": "argWithHeaders",
									"Type": "http"
								},
								{
									"Name": "argWithManyQueryParams",
									"Type": "http"
								},
								{
									"Name": "argWithNestedQueryParams",
									"Type": "http"
								},
								{
									"Name": "argWithParams",
									"Type": "http"
								},
								{
									"Name": "argWithQueryHeader",
									"Type": "http"
								},
								{
									"Name": "argWithQueryParams",
									"Type": "http"
								},
								{
									"Name": "helloWorld",
									"Type": "http"
								},
								{
									"Name": "missingArg",
									"Type": "http"
								},
								{
									"Name": "noRequest",
									"Type": "http"
								},
								{
									"Name": "normal",
									"Type": "http"
								},
								{
									"Name": "normalRecur",
									"Type": "http"
								},
								{
									"Name": "tooManyArgs",
									"Type": "http"
								}
							],
							"Name": "Bar",
							"Path": "clients/bar/bar.thrift"
						},
						"Echo": {
							"Methods": [
								{
									"Name": "echoBinary",
									"Type": "http"
								},
								{
									"Name": "echoBool",
									"Type": "http"
								},
								{
									"Name": "echoDouble",
									"Type": "http"
								},
								{
									"Name": "echoEnum",
									"Type": "http"
								},
								{
									"Name": "echoI16",
									"Type": "http"
								},
								{
									"Name": "echoI32",
									"Type": "http"
								},
								{
									"Name": "echoI32Map",
									"Type": "http"
								},
								{
									"Name": "echoI64",
									"Type": "http"
								},
								{
									"Name": "echoI8",
									"Type": "http"
								},
								{
									"Name": "echoString",
									"Type": "http"
								},
								{
									"Name": "echoStringList",
									"Type": "http"
								},
								{
									"Name": "echoStringMap",
									"Type": "http"
								},
								{
									"Name": "echoStringSet",
									"Type": "http"
								},
								{
									"Name": "echoStructList",
									"Type": "http"
								},
								{
									"Name": "echoStructMap",
									"Type": "http"
								},
								{
									"Name": "echoStructSet",
									"Type": "http"
								},
								{
									"Name": "echoTypedef",
									"Type": "http"
								}
							],
							"Name": "Echo",
							"Path": "clients/bar/bar.thrift"
						}
					},
					"clients/baz/base.thrift": {},
					"clients/baz/baz.thrift": {
						"SecondService": {
							"Methods": [
								{
									"Name": "echoBinary",
									"Type": "tchannel"
								},
								{
									"Name": "echoBool",
									"Type": "tchannel"
								},
								{
									"Name": "echoDouble",
									"Type": "tchannel"
								},
								{
									"Name": "echoEnum",
									"Type": "tchannel"
								},
								{
									"Name": "echoI16",
									"Type": "tchannel"
								},
								{
									"Name": "echoI32",
									"Type": "tchannel"
								},
								{
									"Name": "echoI64",
									"Type": "tchannel"
								},
								{
									"Name": "echoI8",
									"Type": "tchannel"
								},
								{
									"Name": "echoString",
									"Type": "tchannel"
								},
								{
									"Name": "echoStringList",
									"Type": "tchannel"
								},
								{
									"Name": "echoStringMap",
									"Type": "tchannel"
								},
								{
									"Name": "echoStringSet",
									"Type": "tchannel"
								},
								{
									"Name": "echoStructList",
									"Type": "tchannel"
								},
								{
									"Name": "echoStructMap",
									"Type": "tchannel"
								},
								{
									"Name": "echoStructSet",
									"Type": "tchannel"
								},
								{
									"Name": "echoTypedef",
									"Type": "tchannel"
								}
							],
							"Name": "SecondService",
							"Path": "clients/baz/baz.thrift"
						},
						"SimpleService": {
							"Methods": [
								{
									"Name": "call",
									"Type": "tchannel"
								},
								{
									"Name": "compare",
									"Type": "tchannel"
								},
								{
									"Name": "ping",
									"Type": "tchannel"
								},
								{
									"Name": "sillyNoop",
									"Type": "tchannel"
								},
								{
									"Name": "testUuid",
									"Type": "tchannel"
								},
								{
									"Name": "trans",
									"Type": "tchannel"
								},
								{
									"Name": "urlTest",
									"Type": "tchannel"
								}
							],
							"Name": "SimpleService",
							"Path": "clients/baz/baz.thrift"
						}
					},
					"clients/contacts/contacts.thrift": {
						"Contacts": {
							"Methods": [
								{
									"Name": "saveContacts",
									"Type": "http"
								},
								{
									"Name": "testUrlUrl",
									"Type": "http"
								}
							],
							"Name": "Contacts",
							"Path": "clients/contacts/contacts.thrift"
						}
					},
					"clients/corge/corge.thrift": {
						"Corge": {
							"Methods": [
								{
									"Name": "echoBool",
									"Type": "tchannel"
								},
								{
									"Name": "echoString",
									"Type": "tchannel"
								}
							],
							"Name": "Corge",
							"Path": "clients/corge/corge.thrift"
						}
					},
					"clients/foo/base/base.thrift": {},
					"clients/foo/foo.thrift": {},
					"clients/googlenow/googlenow.thrift": {
						"GoogleNowService": {
							"Methods": [
								{
									"Name": "addCredentials",
									"Type": "http"
								},
								{
									"Name": "checkCredentials",
									"Type": "http"
								}
							],
							"Name": "GoogleNowService",
							"Path": "clients/googlenow/googlenow.thrift"
						}
					},
					"endpoints/bar/bar.thrift": {
						"Bar": {
							"Methods": [
								{
									"Name": "argNotStruct",
									"Type": "http"
								},
								{
									"Name": "argWithHeaders",
									"Type": "http"
								},
								{
									"Name": "argWithManyQueryParams",
									"Type": "http"
								},
								{
									"Name": "argWithNestedQueryParams",
									"Type": "http"
								},
								{
									"Name": "argWithParams",
									"Type": "http"
								},
								{
									"Name": "argWithQueryHeader",
									"Type": "http"
								},
								{
									"Name": "argWithQueryParams",
									"Type": "http"
								},
								{
									"Name": "helloWorld",
									"Type": "http"
								},
								{
									"Name": "missingArg",
									"Type": "http"
								},
								{
									"Name": "noRequest",
									"Type": "http"
								},
								{
									"Name": "normal",
									"Type": "http"
								},
								{
									"Name": "tooManyArgs",
									"Type": "http"
								}
							],
							"Name": "Bar",
							"Path": "endpoints/bar/bar.thrift"
						}
					},
					"endpoints/baz/baz.thrift": {
						"SimpleService": {
							"Methods": [
								{
									"Name": "call",
									"Type": "http"
								},
								{
									"Name": "compare",
									"Type": "http"
								},
								{
									"Name": "ping",
									"Type": "http"
								},
								{
									"Name": "sillyNoop",
									"Type": "http"
								},
								{
									"Name": "testUuid",
									"Type": "http"
								},
								{
									"Name": "trans",
									"Type": "http"
								},
								{
									"Name": "urlTest",
									"Type": "http"
								}
							],
							"Name": "SimpleService",
							"Path": "endpoints/baz/baz.thrift"
						}
					},
					"endpoints/contacts/contacts.thrift": {
						"Contacts": {
							"Methods": [
								{
									"Name": "saveContacts",
									"Type": "http"
								},
								{
									"Name": "testUrlUrl",
									"Type": "http"
								}
							],
							"Name": "Contacts",
							"Path": "endpoints/contacts/contacts.thrift"
						}
					},
					"endpoints/foo/base/base.thrift": {},
					"endpoints/foo/foo.thrift": {},
					"endpoints/googlenow/googlenow.thrift": {
						"GoogleNow": {
							"Methods": [
								{
									"Name": "addCredentials",
									"Type": "http"
								},
								{
									"Name": "checkCredentials",
									"Type": "http"
								}
							],
							"Name": "GoogleNow",
							"Path": "endpoints/googlenow/googlenow.thrift"
						}
					},
					"endpoints/tchannel/baz/baz.thrift": {
						"SimpleService": {
							"Methods": [
								{
									"Name": "Call",
									"Type": "http"
								},
								{
									"Name": "Compare",
									"Type": "http"
								},
								{
									"Name": "Ping",
									"Type": "http"
								},
								{
									"Name": "SillyNoop",
									"Type": "http"
								}
							],
							"Name": "SimpleService",
							"Path": "endpoints/tchannel/baz/baz.thrift"
						}
					}
				},
				"Tier": 0
			}
		}
	},
	{
		"name": "converts basic module to code",
		"request": {
			"method": "POST",
			"url": "/thrift-file-parsed",
			"header": {
				"gateway-id": "example-gateway"
			},
			"body": {
				"constants": {
					"MyTestString": {
						"file": "clients/baz/baz.thrift",
						"line": 3,
						"name": "MyTestString",
						"type": {
							"name": "string"
						},
						"value": "mts"
					}
				},
				"includes": {
					"base": {
						"line": 2,
						"module": {
							"name": "base",
							"thrift_path": "clients/baz/base.thrift",
							"types": {
								"BazResponse": {
									"file": "clients/baz/base.thrift",
									"name": "BazResponse",
									"struct_type": {
										"fields": [
											{
												"id": 1,
												"name": "message",
												"required": true,
												"type": {
													"name": "string"
												}
											}
										],
										"kind": "struct"
									}
								},
								"ServerErr": {
									"file": "clients/baz/base.thrift",
									"name": "ServerErr",
									"struct_type": {
										"fields": [
											{
												"id": 1,
												"name": "message",
												"required": true,
												"type": {
													"name": "string"
												}
											}
										],
										"kind": "exception"
									}
								},
								"UUID": {
									"file": "clients/baz/base.thrift",
									"name": "UUID",
									"type_def_target": {
										"name": "string"
									}
								}
							}
						},
						"name": "base"
					}
				},
				"name": "baz",
				"namespace": [
					{
						"line": 1,
						"name": "com.uber.zanzibar.clients.baz",
						"scope": "java"
					}
				],
				"services": {
					"SecondService": {
						"file": "clients/baz/baz.thrift",
						"functions": {
							"echoBinary": {
								"args_spec": [
									{
										"id": 1,
										"name": "arg",
										"required": true,
										"type": {
											"name": "binary"
										}
									}
								],
								"name": "echoBinary",
								"one_way": false,
								"result_spec": {
									"return_type": {
										"name": "binary"
									}
								}
							},
							"echoBool": {
								"args_spec": [
									{
										"id": 1,
										"name": "arg",
										"required": true,
										"type": {
											"name": "bool"
										}
									}
								],
								"name": "echoBool",
								"one_way": false,
								"result_spec": {
									"return_type": {
										"name": "bool"
									}
								}
							},
							"echoDouble": {
								"args_spec": [
									{
										"id": 1,
										"name": "arg",
										"required": true,
										"type": {
											"name": "double"
										}
									}
								],
								"name": "echoDouble",
								"one_way": false,
								"result_spec": {
									"return_type": {
										"name": "double"
									}
								}
							},
							"echoEnum": {
								"args_spec": [
									{
										"default": "Fruit.APPLE",
										"id": 1,
										"name": "arg",
										"required": false,
										"type": {
											"enum_type": {
												"file": "clients/baz/baz.thrift",
												"items": [
													{
														"name": "APPLE"
													},
													{
														"name": "BANANA",
														"value": 1
													}
												],
												"name": "Fruit"
											},
											"file": "clients/baz/baz.thrift",
											"name": "Fruit"
										}
									}
								],
								"name": "echoEnum",
								"one_way": false,
								"result_spec": {
									"return_type": {
										"enum_type": {
											"file": "clients/baz/baz.thrift",
											"items": [
												{
													"name": "APPLE"
												},
												{
													"name": "BANANA",
													"value": 1
												}
											],
											"name": "Fruit"
										},
										"file": "clients/baz/baz.thrift",
										"name": "Fruit"
									}
								}
							},
							"echoI16": {
								"args_spec": [
									{
										"id": 1,
										"name": "arg",
										"required": true,
										"type": {
											"name": "i16"
										}
									}
								],
								"name": "echoI16",
								"one_way": false,
								"result_spec": {
									"return_type": {
										"name": "i16"
									}
								}
							},
							"echoI32": {
								"args_spec": [
									{
										"id": 1,
										"name": "arg",
										"required": true,
										"type": {
											"name": "i32"
										}
									}
								],
								"name": "echoI32",
								"one_way": false,
								"result_spec": {
									"return_type": {
										"name": "i32"
									}
								}
							},
							"echoI64": {
								"args_spec": [
									{
										"id": 1,
										"name": "arg",
										"required": true,
										"type": {
											"name": "i64"
										}
									}
								],
								"name": "echoI64",
								"one_way": false,
								"result_spec": {
									"return_type": {
										"name": "i64"
									}
								}
							},
							"echoI8": {
								"args_spec": [
									{
										"id": 1,
										"name": "arg",
										"required": true,
										"type": {
											"name": "byte"
										}
									}
								],
								"name": "echoI8",
								"one_way": false,
								"result_spec": {
									"return_type": {
										"name": "byte"
									}
								}
							},
							"echoString": {
								"args_spec": [
									{
										"id": 1,
										"name": "arg",
										"required": true,
										"type": {
											"name": "string"
										}
									}
								],
								"name": "echoString",
								"one_way": false,
								"result_spec": {
									"return_type": {
										"name": "string"
									}
								}
							},
							"echoStringList": {
								"args_spec": [
									{
										"id": 1,
										"name": "arg",
										"required": true,
										"type": {
											"list_value_type": {
												"name": "string"
											},
											"name": "list\u003cstring\u003e"
										}
									}
								],
								"name": "echoStringList",
								"one_way": false,
								"result_spec": {
									"return_type": {
										"list_value_type": {
											"name": "string"
										},
										"name": "list\u003cstring\u003e"
									}
								}
							},
							"echoStringMap": {
								"args_spec": [
									{
										"id": 1,
										"name": "arg",
										"required": true,
										"type": {
											"map_type": {
												"key_type": {
													"name": "string"
												},
												"value_type": {
													"file": "clients/baz/base.thrift",
													"name": "BazResponse",
													"struct_type": {
														"fields": [
															{
																"id": 1,
																"name": "message",
																"required": true,
																"type": {
																	"name": "string"
																}
															}
														],
														"kind": "struct"
													}
												}
											},
											"name": "map\u003cstring, BazResponse\u003e"
										}
									}
								],
								"name": "echoStringMap",
								"one_way": false,
								"result_spec": {
									"return_type": {
										"map_type": {
											"key_type": {
												"name": "string"
											},
											"value_type": {
												"file": "clients/baz/base.thrift",
												"name": "BazResponse",
												"struct_type": {
													"fields": [
														{
															"id": 1,
															"name": "message",
															"required": true,
															"type": {
																"name": "string"
															}
														}
													],
													"kind": "struct"
												}
											}
										},
										"name": "map\u003cstring, BazResponse\u003e"
									}
								}
							},
							"echoStringSet": {
								"args_spec": [
									{
										"id": 1,
										"name": "arg",
										"required": true,
										"type": {
											"name": "set\u003cstring\u003e",
											"set_value_type": {
												"name": "string"
											}
										}
									}
								],
								"name": "echoStringSet",
								"one_way": false,
								"result_spec": {
									"return_type": {
										"name": "set\u003cstring\u003e",
										"set_value_type": {
											"name": "string"
										}
									}
								}
							},
							"echoStructList": {
								"args_spec": [
									{
										"id": 1,
										"name": "arg",
										"required": true,
										"type": {
											"list_value_type": {
												"file": "clients/baz/base.thrift",
												"name": "BazResponse",
												"struct_type": {
													"fields": [
														{
															"id": 1,
															"name": "message",
															"required": true,
															"type": {
																"name": "string"
															}
														}
													],
													"kind": "struct"
												}
											},
											"name": "list\u003cBazResponse\u003e"
										}
									}
								],
								"name": "echoStructList",
								"one_way": false,
								"result_spec": {
									"return_type": {
										"list_value_type": {
											"file": "clients/baz/base.thrift",
											"name": "BazResponse",
											"struct_type": {
												"fields": [
													{
														"id": 1,
														"name": "message",
														"required": true,
														"type": {
															"name": "string"
														}
													}
												],
												"kind": "struct"
											}
										},
										"name": "list\u003cBazResponse\u003e"
									}
								}
							},
							"echoStructMap": {
								"args_spec": [
									{
										"id": 1,
										"name": "arg",
										"required": true,
										"type": {
											"map_type": {
												"key_type": {
													"file": "clients/baz/base.thrift",
													"name": "BazResponse",
													"struct_type": {
														"fields": [
															{
																"id": 1,
																"name": "message",
																"required": true,
																"type": {
																	"name": "string"
																}
															}
														],
														"kind": "struct"
													}
												},
												"value_type": {
													"name": "string"
												}
											},
											"name": "map\u003cBazResponse, string\u003e"
										}
									}
								],
								"name": "echoStructMap",
								"one_way": false,
								"result_spec": {
									"return_type": {
										"map_type": {
											"key_type": {
												"file": "clients/baz/base.thrift",
												"name": "BazResponse",
												"struct_type": {
													"fields": [
														{
															"id": 1,
															"name": "message",
															"required": true,
															"type": {
																"name": "string"
															}
														}
													],
													"kind": "struct"
												}
											},
											"value_type": {
												"name": "string"
											}
										},
										"name": "map\u003cBazResponse, string\u003e"
									}
								}
							},
							"echoStructSet": {
								"args_spec": [
									{
										"id": 1,
										"name": "arg",
										"required": true,
										"type": {
											"name": "set\u003cBazResponse\u003e",
											"set_value_type": {
												"file": "clients/baz/base.thrift",
												"name": "BazResponse",
												"struct_type": {
													"fields": [
														{
															"id": 1,
															"name": "message",
															"required": true,
															"type": {
																"name": "string"
															}
														}
													],
													"kind": "struct"
												}
											}
										}
									}
								],
								"name": "echoStructSet",
								"one_way": false,
								"result_spec": {
									"return_type": {
										"name": "set\u003cBazResponse\u003e",
										"set_value_type": {
											"file": "clients/baz/base.thrift",
											"name": "BazResponse",
											"struct_type": {
												"fields": [
													{
														"id": 1,
														"name": "message",
														"required": true,
														"type": {
															"name": "string"
														}
													}
												],
												"kind": "struct"
											}
										}
									}
								}
							},
							"echoTypedef": {
								"args_spec": [
									{
										"id": 1,
										"name": "arg",
										"required": true,
										"type": {
											"file": "clients/baz/base.thrift",
											"name": "UUID",
											"type_def_target": {
												"name": "string"
											}
										}
									}
								],
								"name": "echoTypedef",
								"one_way": false,
								"result_spec": {
									"return_type": {
										"file": "clients/baz/base.thrift",
										"name": "UUID",
										"type_def_target": {
											"name": "string"
										}
									}
								}
							}
						},
						"line": 49,
						"name": "SecondService"
					},
					"SimpleService": {
						"file": "clients/baz/baz.thrift",
						"functions": {
							"call": {
								"annotations": {
									"zanzibar.http.reqHeaders": "x-uuid,x-token",
									"zanzibar.http.resHeaders": "some-res-header"
								},
								"args_spec": [
									{
										"id": 1,
										"name": "arg",
										"required": true,
										"type": {
											"file": "clients/baz/baz.thrift",
											"name": "BazRequest",
											"struct_type": {
												"fields": [
													{
														"id": 1,
														"name": "b1",
														"required": true,
														"type": {
															"name": "bool"
														}
													},
													{
														"id": 2,
														"name": "s2",
														"required": true,
														"type": {
															"name": "string"
														}
													},
													{
														"id": 3,
														"name": "i3",
														"required": true,
														"type": {
															"name": "i32"
														}
													}
												],
												"kind": "struct"
											}
										}
									}
								],
								"name": "call",
								"one_way": false,
								"result_spec": {
									"exceptions": [
										{
											"id": 1,
											"name": "authErr",
											"required": false,
											"type": {
												"file": "clients/baz/baz.thrift",
												"name": "AuthErr",
												"struct_type": {
													"fields": [
														{
															"id": 1,
															"name": "message",
															"required": true,
															"type": {
																"name": "string"
															}
														}
													],
													"kind": "exception"
												}
											}
										}
									],
									"return_type": null
								}
							},
							"compare": {
								"args_spec": [
									{
										"id": 1,
										"name": "arg1",
										"required": true,
										"type": {
											"file": "clients/baz/baz.thrift",
											"name": "BazRequest",
											"struct_type": {
												"fields": [
													{
														"id": 1,
														"name": "b1",
														"required": true,
														"type": {
															"name": "bool"
														}
													},
													{
														"id": 2,
														"name": "s2",
														"required": true,
														"type": {
															"name": "string"
														}
													},
													{
														"id": 3,
														"name": "i3",
														"required": true,
														"type": {
															"name": "i32"
														}
													}
												],
												"kind": "struct"
											}
										}
									},
									{
										"id": 2,
										"name": "arg2",
										"required": true,
										"type": {
											"file": "clients/baz/baz.thrift",
											"name": "BazRequest",
											"struct_type": {
												"fields": [
													{
														"id": 1,
														"name": "b1",
														"required": true,
														"type": {
															"name": "bool"
														}
													},
													{
														"id": 2,
														"name": "s2",
														"required": true,
														"type": {
															"name": "string"
														}
													},
													{
														"id": 3,
														"name": "i3",
														"required": true,
														"type": {
															"name": "i32"
														}
													}
												],
												"kind": "struct"
											}
										}
									}
								],
								"name": "compare",
								"one_way": false,
								"result_spec": {
									"exceptions": [
										{
											"id": 1,
											"name": "authErr",
											"required": false,
											"type": {
												"file": "clients/baz/baz.thrift",
												"name": "AuthErr",
												"struct_type": {
													"fields": [
														{
															"id": 1,
															"name": "message",
															"required": true,
															"type": {
																"name": "string"
															}
														}
													],
													"kind": "exception"
												}
											}
										},
										{
											"id": 2,
											"name": "otherAuthErr",
											"required": false,
											"type": {
												"file": "clients/baz/baz.thrift",
												"name": "OtherAuthErr",
												"struct_type": {
													"fields": [
														{
															"id": 1,
															"name": "message",
															"required": true,
															"type": {
																"name": "string"
															}
														}
													],
													"kind": "exception"
												}
											}
										}
									],
									"return_type": {
										"file": "clients/baz/base.thrift",
										"name": "BazResponse",
										"struct_type": {
											"fields": [
												{
													"id": 1,
													"name": "message",
													"required": true,
													"type": {
														"name": "string"
													}
												}
											],
											"kind": "struct"
										}
									}
								}
							},
							"ping": {
								"name": "ping",
								"one_way": false,
								"result_spec": {
									"return_type": {
										"file": "clients/baz/base.thrift",
										"name": "BazResponse",
										"struct_type": {
											"fields": [
												{
													"id": 1,
													"name": "message",
													"required": true,
													"type": {
														"name": "string"
													}
												}
											],
											"kind": "struct"
										}
									}
								}
							},
							"sillyNoop": {
								"name": "sillyNoop",
								"one_way": false,
								"result_spec": {
									"exceptions": [
										{
											"id": 1,
											"name": "authErr",
											"required": false,
											"type": {
												"file": "clients/baz/baz.thrift",
												"name": "AuthErr",
												"struct_type": {
													"fields": [
														{
															"id": 1,
															"name": "message",
															"required": true,
															"type": {
																"name": "string"
															}
														}
													],
													"kind": "exception"
												}
											}
										},
										{
											"id": 2,
											"name": "serverErr",
											"required": false,
											"type": {
												"file": "clients/baz/base.thrift",
												"name": "ServerErr",
												"struct_type": {
													"fields": [
														{
															"id": 1,
															"name": "message",
															"required": true,
															"type": {
																"name": "string"
															}
														}
													],
													"kind": "exception"
												}
											}
										}
									],
									"return_type": null
								}
							}
						},
						"line": 23,
						"name": "SimpleService"
					}
				},
				"thrift_path": "clients/baz/baz.thrift",
				"types": {
					"AuthErr": {
						"file": "clients/baz/baz.thrift",
						"line": 15,
						"name": "AuthErr",
						"struct_type": {
							"fields": [
								{
									"id": 1,
									"name": "message",
									"required": true,
									"type": {
										"name": "string"
									}
								}
							],
							"kind": "exception"
						}
					},
					"BazRequest": {
						"file": "clients/baz/baz.thrift",
						"line": 9,
						"name": "BazRequest",
						"struct_type": {
							"fields": [
								{
									"id": 1,
									"name": "b1",
									"required": true,
									"type": {
										"name": "bool"
									}
								},
								{
									"id": 2,
									"name": "s2",
									"required": true,
									"type": {
										"name": "string"
									}
								},
								{
									"id": 3,
									"name": "i3",
									"required": true,
									"type": {
										"name": "i32"
									}
								}
							],
							"kind": "struct"
						}
					},
					"Fruit": {
						"enum_type": {
							"file": "clients/baz/baz.thrift",
							"items": [
								{
									"name": "APPLE"
								},
								{
									"name": "BANANA",
									"value": 1
								}
							],
							"name": "Fruit"
						},
						"file": "clients/baz/baz.thrift",
						"line": 4,
						"name": "Fruit"
					},
					"OtherAuthErr": {
						"file": "clients/baz/baz.thrift",
						"line": 19,
						"name": "OtherAuthErr",
						"struct_type": {
							"fields": [
								{
									"id": 1,
									"name": "message",
									"required": true,
									"type": {
										"name": "string"
									}
								}
							],
							"kind": "exception"
						}
					},
					"StringTypedefTest": {
						"file": "clients/baz/baz.thrift",
						"line": 7,
						"name": "StringTypedefTest",
						"type_def_target": {
							"name": "string"
						}
					}
				}
			}
		},
		"response": {
			"code": 200,
			"body": {
				"content": "namespace java com.uber.zanzibar.clients.baz\n\ninclude \"base.thrift\"\n\nconst string MyTestString = mts\n\nenum Fruit {\n\tAPPLE = 0,\n\tBANANA = 1\n}\n\ntypedef string StringTypedefTest\n\nstruct BazRequest {\n\t1: required bool b1\n\t2: required string s2\n\t3: required i32 i3\n}\n\nexception AuthErr {\n\t1: required string message\n}\n\nexception OtherAuthErr {\n\t1: required string message\n}\n\nservice SimpleService {\n\tvoid call (\n\t\t1: required BazRequest arg\n\t) throws (\n\t\t1: AuthErr authErr\n\t) (\n\t\tzanzibar.http.reqHeaders = \"x-uuid,x-token\"\n\t\tzanzibar.http.resHeaders = \"some-res-header\"\n\t)\n\n\tbase.BazResponse compare (\n\t\t1: required BazRequest arg1\n\t\t2: required BazRequest arg2\n\t) throws (\n\t\t1: AuthErr authErr\n\t\t2: OtherAuthErr otherAuthErr\n\t)\n\n\tbase.BazResponse ping ()\n\n\tvoid sillyNoop () throws (\n\t\t1: AuthErr authErr\n\t\t2: base.ServerErr serverErr\n\t)\n}\n\nservice SecondService {\n\tbinary echoBinary (\n\t\t1: required binary arg\n\t)\n\n\tbool echoBool (\n\t\t1: required bool arg\n\t)\n\n\tdouble echoDouble (\n\t\t1: required double arg\n\t)\n\n\tFruit echoEnum (\n\t\t1: optional Fruit arg = Fruit.APPLE\n\t)\n\n\ti16 echoI16 (\n\t\t1: required i16 arg\n\t)\n\n\ti32 echoI32 (\n\t\t1: required i32 arg\n\t)\n\n\ti64 echoI64 (\n\t\t1: required i64 arg\n\t)\n\n\tbyte echoI8 (\n\t\t1: required byte arg\n\t)\n\n\tstring echoString (\n\t\t1: required string arg\n\t)\n\n\tlist\u003cstring\u003e echoStringList (\n\t\t1: required list\u003cstring\u003e arg\n\t)\n\n\tmap\u003cstring, base.BazResponse\u003e echoStringMap (\n\t\t1: required map\u003cstring, base.BazResponse\u003e arg\n\t)\n\n\tset\u003cstring\u003e echoStringSet (\n\t\t1: required set\u003cstring\u003e arg\n\t)\n\n\tlist\u003cbase.BazResponse\u003e echoStructList (\n\t\t1: required list\u003cbase.BazResponse\u003e arg\n\t)\n\n\tmap\u003cbase.BazResponse, string\u003e echoStructMap (\n\t\t1: required map\u003cbase.BazResponse, string\u003e arg\n\t)\n\n\tset\u003cbase.BazResponse\u003e echoStructSet (\n\t\t1: required set\u003cbase.BazResponse\u003e arg\n\t)\n\n\tbase.UUID echoTypedef (\n\t\t1: required base.UUID arg\n\t)\n}\n\n"
			}
		}
	}
]
